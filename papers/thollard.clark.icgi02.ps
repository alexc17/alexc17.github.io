%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: icgi2002.dvi
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips icgi2002 -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.10.07:1946
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (icgi2002.dvi)
@start
%DVIPSBitmapFont: Fa cmitt10 9 12
/Fa 12 117 df<91380FE01C91387FF83C903901FFFE7C49EBFFFC130F90381FF81F9039
3FE00FF890387F8007EBFF00484813034914F0485A485A5B484814E0A24848EB01C092C7
FC48C9FCA2127EA2127CA212FCA25AA6153C157CA26C14FCA24A5A007E13035D007F495A
383F801F9038E07FC06CB5C7FC6C5B6C13F800015B38007F80263078AE27>67
D<903A1FF801FFE0496C4813F0A3011F6D13E0903A03DC003C00A20107147CA2029C1378
149E010F14F8A2021E5BA2011F1301A2011E5C140E013E1303A2D93C0F5BA2017C1307A2
01785CA201F8130FA201F091C7FC140700015CA201E0131EA20003143E15BE01C013BCA2
0007147CA2397FF803F812FFA36C486C5A2C2E7DAD27>78 D<91380FF80E91383FFE1E91
B512BE4914FE130790380FF80F90391FE003FCEB3F80EC00015B017E14F8017C130001FC
1301A249EB00F06D1400A2137EA2EB7F80EB3FF86DB47E6D13F001037F010013FEEC0FFF
1400ED3F80151F150FA4120E121F151F5AED3F00A2157E486C13FE6D485A9038F80FF890
B55AB65A00F9148000F891C7FC38701FF827307CAE27>83 D<EB07E090381FF9C090387F
FFE090B5FC5A3803FC7F3807F03F390FE01FC013C0EA1F80140FD83F001380141F127EA2
007C1400A25C12FCEC7E1848143EECFE7E7E903801FC7CEA7C03D87E0713FC387F1FFE6C
B512F8A26CEB3FF0390FFC1FE03903F007C01F20779F27>97 D<EA7FF0487EA3127FEA01
F0A21203A25BA21207A25BEBC7F0380FDFF8EBFFFE80A2391FFC3F80EBF01FEBE00F13C0
003F14C01380EB0007140F127E1580127CA2141F12FCEC3F005A6C137E14FE007C5B1301
387E03F8387F0FF06CB45A5C6C90C7FCEA07FEEA03F81A2E76AD27>I<EB03F8EB1FFEEB
7FFF90B512804814C03807FE1F380FF00FEBE007EA1FC0383F800F1300007EEB3F80EB01
FFB612005C14F814E091C7FC00F8C8FCA57EEC01C06CEB03E0007F133F6CB5FC15C0000F
14806CEBFE00000113E01B20759F27>101 D<147814FC1301A3130014701400A813FCEA
03FF4813804813C05AEA3F8F1307EA7E0FA200FC1380131F12F838303F001200133E137E
A2137C13FC140C3801F81F143F13F00003137EA2EBE0FC13F1EBFFF814F06C13E06C13C0
EB3F00182F75AE27>105 D<EA7FFC487EA3127FEA007CA213FCA25BA21201A25BA21203
A25BA21207A25BA2120FA25BA2121FA290C7FCA25AA2383E0180EB03E0EA7E07A2007C13
C0130FA2387E1F80EA7FFF6C13005BEA0FFCEA03F0132E71AD27>108
D<9039E1F007C03A01F7FC1FF09039FFFE7FF815FF91B512FC4890381FFC7C01FC13F002
0F133C01F813E03A07F01FC07CA201E0EB8078A23A0FC03F00F8A2D9803E13F0001FEB7E
01A2D9007C13E015034813FC16C0003EEBF807EA7E011680007C13F0A2D8FC0314E016F0
00F813E015033A7001C001E026207C9F27>I<EB03F8EB0FFEEB3FFF49138048B512C038
03FE1F3907F807E013F0380FE003D81FC013F01380EA3F00A2127E15E0127CA2140712FC
EC0FC0A2EC1F80143F007CEB7F00007E13FE1301383F87FCEBFFF86C13E06C5B6C90C7FC
EA01FC1C20779F27>111 D<011F137E90393FC1FF80D97FE713C090B612E0A2D801FBEB
C7F001F913039038F1FE0102FC13F83803F3F81500EBE3F0D800C31301EB07E016F014C0
A2010F1303A2ED07E01480011FEB0FC014C0ED1F80153F90393FE07F00ECF1FEECFFFC5D
495B017E13C0D97C3FC7FC91C8FC13FCA25BA21201A25BA21203A25B387FFF80B5FCA36C
90C8FC2531809F27>I<EB0380497EA2130FA25CA2131FA291C7FCA25BA2133E007FB5FC
B61280A215007ED800FCC7FCA25BA21201A25BA21203A25BA21207A2EBC006EC0F80000F
131FA29038803F005C14FEEBC3FCEBFFF85C6C5B000113806C48C7FC192E75AD27>116
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi6 6 3
/Fb 3 107 df<EC1F80ECFFE0903801E0F09038030038130649133C5B133813305B1538
491378157015F0484813E0903883FBC0903887FF00A2390303F38090380001C015E01400
120615F0A215E0481301A3EC03C0121CEC0780001E1400141E3833803C3831FFF0003013
C00108C7FC48C8FCA45AA41E2E7EA323>12 D<1338137CA2137813701300A7EA0780EA1F
C0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318121C
EA1E70EA0FE0EA07800F237DA116>105 D<1418143C147CA214381400A7EB0780EB1FE0
1338EB60F013C0A2EA0180A2380001E0A4EB03C0A4EB0780A4EB0F00A4131EA21238EA78
3CEAF8381378EA70F0EA7FC0001FC7FC162D81A119>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmtt9 9 31
/Fc 31 120 df<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE00485A5B1203485A5B485A
A2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C7E7F6C7E12017F6C7EEB7F
80EB3FC0EB1FE0130F1303EB01C0133A73B327>40 D<127012F812FE7E6C7E6C7EEA0FE0
6C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0ACEB0FC0A4EB1F80A3EB3F
00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F81270133A7AB327>I<00
7FB512F8B612FCA46C14F81E067C9927>45 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00
0A0A728927>I<1538157C15FCA2140115F8140315F0140715E0140F15C0141F1580143F
1500A25C147E14FE5C13015C13035C13075C130F5CA2131F5C133F91C7FC5B137E13FE5B
12015B12035BA212075B120F5B121F5B123F90C8FC5A127E12FE5AA25A12781E3A7CB327
>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCAC121EEA7F80A2EAFFC0A4EA7F80A2
EA1E000A20729F27>58 D<007FB5FCB612C08115F87E3907E003FCEC00FE157E157F81A6
157EA25D1403EC0FF890B55A15C015F081819038E000FE157FED3F80151FA2ED0FC0A615
1F1680153FED7F004A5A007FB55AB65A5D15E06C1480222E7FAD27>66
D<903803F80E90381FFE1F90383FFFBF90B6FC5A3803FE0F3807F803497E48487E485A49
137FA248C7123FA25A127E151E150012FE5AAA7E127EA2151E007F143F7EA26C7E157F6D
137E6C6C13FE3907F001FCEBF8033903FE0FF86CB512F06C14E0013F13C06D1300EB03F8
20307DAE27>I<007FB61280B712C0A37E3907E0000FA6ED078092C7FCA4EC07804A7EA3
90B5FCA5EBE00FA36E5A91C8FCAC387FFF80B57EA36C5B222E7EAD27>70
D<D87FE0EB7FE0486CEBFFF0A26D5A007F15E0000F150001B813DFEBBC03A3EBBE07019E
139FA3EB9F0FA2018F131FA2149FA2EB879EA4EB839C14FCA3EB81F8A2EB80F01400AAD8
7FF0EBFFE0486C4813F0A36C486C13E0242E7FAD27>77 D<3A7FF003FFE0486C4813F0A2
13FC007F6D13E000079038003E0013DEA313CFA3148013C714C0A213C314E0A213C114F0
A3EBC0F8A31478147CA2143C143EA2141E141F140FA3EC07BEA3EC03FEEA7FFCEAFFFE14
01A26C486C5A242E7FAD27>I<EBFFFC0007EBFF80001F14E0A24814F0EBC00F397F8007
F8EB0003007E1301A348EB00FCB3A76C1301007E14F8A3007F1303EB8007393FE01FF090
B5FC6C14E0A200071480C6EBFC001E307CAE27>I<387FFFF0B512FE6E7E816C803907E0
1FF014076E7E1401811400A514015D14034A5A141F90B55A5D5DA281EBE01F6E7E14076E
7EA816F0EDF1F8A4397FFE01FBB5EBFFF08016E06C48EB7FC0C8EA1F00252F7FAD27>82
D<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C71207A2EB0FFF13
7F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6CB612806C
15C07E000313F1C69038807F8022207C9F27>97 D<EA7FE0487EA3127F1203A914FF01F3
13C090B512F08181EC81FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C0
7F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C02601E0FEC7FC232E7F
AD27>I<EB0FFF017F13C048B512E04814F05A380FF807EA1FE0393FC003E09038800080
48C8FC127EA212FE5AA67E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5
FC6C14E06C14C06C6C1300EB0FF81D207B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB
7FFD48B5FC5A5A380FF83F381FE00F383FC007EB8003EA7F00007E1301A212FE5AA67E00
7E1303A2127F6C1307EB800F381FE01F380FF03F6CB612C06C15E06C13FD38007FF9D91F
E013C0232E7EAD27>I<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003
F8EBC001D83F8013FC48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C
6D137E6C7E01F013FE390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D
9F27>I<153F90391FC0FF80D97FF313C048B612E05A4814EF390FF07F873A1FC01FC3C0
EDC000EB800F48486C7EA66C6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1F
C090C9FCA27F6CB5FC15E015F84814FE4880EB8001007EC7EA3F80007C140F00FC15C048
1407A46C140F007C1580007F143F6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0
D90FFCC7FC23337EA027>103 D<EA7FE0487EA3127F1203A9147F9038F1FFC001F713F0
90B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E0242E
7FAD27>I<130F497E497EA46D5A6DC7FC90C8FCA7383FFF80487FA37EEA000FB3A4007F
B512F0B6FC15F815F07E1D2F7BAE27>I<387FFF80B57EA37EEA000FB3B2007FB512F8B6
12FCA36C14F81E2E7CAD27>108 D<397F07C01F3AFF9FF07FC09039FFF9FFE091B57E7E
3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3FF486C01E31380
01F913E701F813E36C4801C313002920819F27>I<387FE07F39FFF1FFC001F713F090B5
FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E024
207F9F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC00FE0393F8007F0
EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303393F8007F0A2391F
E01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27>I<387FE0FFD8
FFF313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C049130FA216E01507
A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C0D9F0FEC7
FC91C8FCAC387FFF80B57EA36C5B23317F9F27>I<397FFC03FC39FFFE0FFF023F13804A
13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5CA291C8FCA2137EAD
007FB57EB67EA36C5C22207E9F27>114 D<9038FFF3800007EBFFC0121F5A5AEB803F38
FC000F5AA2EC07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480D8000F13
C09038003FE014070078EB03F000FC1301A27E14036CEB07E0EBE01F90B512C015801500
00FB13FC38707FF01C207B9F27>I<133C137EA8007FB512F0B612F8A36C14F0D8007EC7
FCAE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C0010013001F297EA827
>I<397FE01FF8486C487EA3007F131F00031300B21401A21403EBFC0F6CB612E016F07E
EB3FFE90390FF87FE024207F9F27>I<3A7FFE07FFE000FF15F06D5A497E007F15E03A0F
80001F00A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE79EA200011478A301F713F8
A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy9 9 5
/Fd 5 104 df<007FB712FCB812FEA26C16FC2F047A943C>0 D<14E080A213015CA21303
5C1307495AA249CCFC133E137E5B485A485AEA0FE0003FBA12E0BB12F0A2003F19E0D80F
E0CCFCEA03F06C7E6C7E137E133E7F6D7EA26D7E1303801301A2801300A25C44287CA64D
>32 D<D91FE0ED3F80D97FFC913801FFE048B5020713F8486E90381F803C2707C03FE090
383E000F48C66C6C01F87F001E902707F801F0EB0380486D6C4848EB01C00038D901FE49
1300486D6C484814E0DB7F8FC812600060EC3FDE00E01970DB1FFC1530486E5A15076F7E
A26F7E824B6D14706C913807BFC00060196092260F1FE014E0007091381E0FF000304A6C
6CEB01C0003891267C03FC13036C4A6C6CEB07806C903C01F000FF800F00000FD907C090
387FC03E2703C01F8090381FFFFC2601FFFEC76C5B26007FF8020313E0D91FC09138007F
8044227CA04D>49 D<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F91C7FC13
7E5BEA03F8EA7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D7E6D7EEB
00FEEC3FE014071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80131FB3
A580130F6D7E6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A495A131F
5CB3A5133F91C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi9 9 10
/Fe 10 114 df<147F903803FFE090380FC0F890383F007C017C017E1360497F484815E0
484890381F80C0120748481481EEC1804848130F003F15C390C7140016C74815C6007E15
CE16DC16D816F8485D5E5E127CA3151F6C143F037713C06C903801E7E03A0F800783E13B
07C07E03E3803B01FFF801FF003A007F80007C2B227EA031>11 D<137CEB7F80EB1FE013
0F6D7EA26D7EA36D7EA36D7EA28080A26E7EA36E7EA281140FA26E7EA381140F141FEC3D
FC1479ECF8FEEB01F0EB03E0903807C07FEB0F80EB1F00013EEB3F80137E4914C0484813
1F485A4848EB0FE0EA1FC0123F4848EB07F048C7FC4815F848140348EC01FC4814002635
7CB32D>21 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C12
1C5A5A126009177A8715>59 D<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07
FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9
FCEA07FCEA1FF0EA7FC048CAFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FC
EB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0
EE1FF0EE07FCEE01FEEE007E171C2F2E7AA93C>I<127012FCB4FCEA7FC0EA1FF0EA07FC
EA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED
1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF
00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC0
4848C9FCEA07FCEA1FF0EA7FC048CAFC12FC12702F2E7AA93C>62
D<16035E5EA24C7EA2163F167FA216FFA2ED01BFED033F831506161F150C1518A2153015
70156015C083EC01800203130F15001406A25C141C14184A80A2027FB5FC91B6FCA29039
01800007A249C7FC1306835B16035B5B1370136013E01201D807F04A7EB549B512F0A25B
34367DB53A>65 D<010FB712FCA218F8903A003FC00007170018785D1838147F183092C8
FCA25CA25C16060101020E1370040C13604A1500A20103141C5E5C16F849B5FCA25EECF0
01010F130016605CA2011F14E05E5CA2013F91C8FCA25CA2137FA291CAFCA25BA25B487E
B6FCA336337DB231>70 D<0107B512E05BA29039001FF0005DA25DA2143FA25DA2147FA2
92C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA2
5CA2137FA291C8FC5B007F13FEB5FCA223337EB222>73 D<EB01C0EB07E014F0130F14E0
1307EB038090C7FCAA13F0EA03FCEA071EEA0E1F121C123800301380EB3F00127012605B
EAE07EEA40FE12005B12015BA212035B12071420EBE070000F136013C014E014C0EA1F80
EA0F81EB8380EB8700EA078EEA03FCEA00F014337EB11A>105 D<903801F803903807FE
0790381F071F90387C03BF9038F801BED801F013FE00031300485A4913FC120F485A1401
D83F0013F8A3481303007E14F0A300FE13074814E0A3140F15C0127C141F143F003CEB7F
80003E13FF381E01DF380F07BF3907FE3F00EA00F813005C147EA314FE5CA21301A25C90
387FFFE090B5FCA220307EA022>113 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmtt10 10 24
/Ff 24 118 df<147814FCAF007FB612F0B712F8A46C15F0C700FCC7FCAF147825267DAB
2C>43 D<007FB6FCB71280A46C150021067B9B2C>45 D<121FEA3F80EA7FC0EAFFE0A5EA
7FC0EA3F80EA1F000B0B708A2C>I<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF0
3903F803F848486C7EEBE0004848137EA248487FA248C7EA1F80A2003E140F007E15C0A3
007C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE00
075CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C>48
D<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF139FEA7C1F1200B3AE007FB5
12E0B612F0A36C14E01C3477B32C>I<007FB512E015F8B612FE6C8016C03903F0003FED
0FE0ED07F01503A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16
C09039F0001FE0ED07F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED
3FF0007FB612E016C0B712806CECFE0015F027337FB22C>66 D<02FF13700107EBE0F849
13F9013F13FD4913FFEBFF813901FE007F4848131FD807F0130F1507485A491303485A15
0148C7FCA25A007EEC00F01600A212FE5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C
13036D14F06C6C130716E0D803FC131F6C6CEB3FC03A00FF81FF806DB512006D5B010F5B
6D13F00100138025357DB32C>I<007FB5FCB612C015F0816C803907E003FEEC00FFED7F
80153FED1FC0ED0FE0A2150716F0150316F81501A4ED00FCACED01F8A3150316F0A21507
16E0150FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A5D15C06C91C7FC26337EB22C
>I<007FB512F8B612FCA36C14F839000FC000B3B3A5007FB512F8B612FCA36C14F81E33
79B22C>73 D<0107B512804914C0A36D148090390003F000B3AF1218127EA2B4FCA24A5A
48130F007F131F9038C07FC06CB55A6C91C7FC6C5B000313F838007FC022347BB22C>I<
D87FF0EB7FFC486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA213DF13CFA2148013C7
14C0A213C314E0A213C114F0A213C014F8A2147CA3143EA2141E141FA2140F1587A21407
15C7A2140315E71401A215F71400A215FFD87FFC137F487E153FA26C48EB1F8027337EB2
2C>78 D<EB7FFF0003B512E0000F14F848804880EBE003EB800048C7127FA2007E80A300
FE158048141FB3A86C143FA2007E1500A3007F5CA26C6C13FEEBF00790B5FC6C5C6C5C00
0314E0C66C90C7FC21357BB32C>I<007FB512C0B612F88115FF6C15802603F00013C015
3FED0FE0ED07F0A2150316F81501A6150316F01507A2ED0FE0ED3FC015FF90B612801600
15FC5D15C001F0C8FCB0387FFF80B57EA36C5B25337EB22C>I<387FFFFCB67E15E015F8
6C803907E007FE1401EC007F6F7E151FA26F7EA64B5AA2153F4BC7FCEC01FE140790B55A
5D15E081819038E007FCEC01FE1400157F81A8160FEE1F80A5D87FFEEB1FBFB5ECFF0081
5E6C486D5AC8EA01F029347EB22C>82 D<007FB612FCB712FEA43AFC007E007EA7007815
3CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>84 D<D87FFCEB7FFC486CEBFFFE
A36C48EB7FFCD80FC0EB07E06D130F000715C0A36D131F00031580A36D133F00011500A3
6D5B0000147EA4017E5BA46D485AA490381F83F0A4010F5B14C7A301075BA214EFA20103
5BA214FFA26D90C7FCA46D5A27347EB22C>86 D<003FB612C04815E0A4007EC7EA1FC0ED
3F80A2ED7F00157E15FE4A5A003C5CC712034A5AA24A5A4A5AA24A5A4AC7FCA214FE495A
A2495A495AA2495A495AA2495A49C8FCA213FE485AA24848EB03C049EB07E01207485A5B
121F485AA248C7FCB7FCA46C15C023337CB22C>90 D<3801FFF0000713FE001F6D7E15E0
48809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F
48EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15
FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>97 D<387FFFE0B57EA37EEA0003B3B3
A5007FB61280B712C0A36C158022337BB22C>108 D<397FF01FE039FFF87FFC9038F9FF
FE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500
F11480A36C01E0140029247FA32C>110 D<D87FFEEB3FC0B53801FFF0020713F8021F13
FC6C5B39003F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0
B67EA36C5C26247EA32C>114 D<90387FF8700003B512F8120F5A5A387FC00F387E0003
4813015AA36CEB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F80101
13FCEB0007EC00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5
FC15F815E000F8148039701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C15
00D8003FC8FCB1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13
F89038003FE0232E7EAD2C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151F
A2153F6D137F3900FE03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmsy5 5 2
/Fg 2 49 df<B612FEA31F037A8B2D>0 D<EA0380EA07C0A3EA0F80A313005A121EA212
3E123CA212381278A21270A25AA20A157D9612>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmex10 10 3
/Fh 3 89 df<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF007F
1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E18306D7E6D
6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7E
A26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E14
7E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF003C0017C18
0749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000FB5FC48BA5A
A25ABB5AA24D537B7F58>80 D<BB12E0A4000F90C9381FFE00000318F86C606C60B3B3B3
AF486D4B7E486D4B7E000F01F0913801FFFEB6021FEBFFE0A443537B7F4E>I<BF12E08A
A38A6C90CCFC0900806C6D19076C6D07007F6C6D1A1F1D076C6DF201FF6C6D747E6C6DF3
3F801E0F6C6D1B076D6CF303C06D6D1A01F600E06D7F6D6D1B706D1D30816D6D1B186D6D
1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E7F6E7FA26F7E6F7F6F7FA26F7F6F7F8183
6F7F6F7F167F83707F707F8284707F707FA2707F82715A60173F715A604D5A4DCDFC17FE
A24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15
FEA24A5A4A5A4A481B184A481B304A5A4B1B70023F1C604ACF12E002FE1B014948F303C0
49481B074948F30F801E1F49481B7F4948F3FF0049481A0349CE120F01FEF37FFEF403FF
48481A7F4848077FB55A48BEFC48655AA248655ABFFC666D747B7F78>88
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy7 7 6
/Fi 6 107 df<B712FEA327037A8F34>0 D<1338A50060130C00F8133E00FC137E00FE13
FE383FBBF83807FFC000011300EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00
F8133E0060130C00001300A517197B9A22>3 D<13E0EA01F0EA03F8A3EA07F0A313E0A2
120F13C0A3EA1F80A21300A25A123EA35AA3127812F8A25A12100D1E7D9F13>48
D<49B5FC130F133F01FFC7FCEA01F8EA03E0EA078048C8FC121E121C123C123812781270
A212F05AA2B7FCA300E0C8FCA27E1270A212781238123C121C121E7E6C7EEA03E0EA01F8
6CB4FC013FB5FC130F130120277AA12D>50 D<146014F0A2497EA2497E149CEB079E140E
EB0F0FEB0E07011E7FEB1C03013C7FEB380101787FEB700001F07F491370000114784913
380003143C49131C0007141E90C7120E48140F000E80001E1580001C1403003C15C00038
1401007815E00070140000F015F0481570163024247CA22D>94 D<12E0B3B3B3A5033B78
AB14>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy10 10 11
/Fj 11 107 df<007FB81280B912C0A26C17803204799641>0 D<0060150600F8150F6C
151F007E153F6C157E6C6C14FC6C6CEB01F86C6CEB03F06C6CEB07E06C6CEB0FC06C6CEB
1F80017EEB3F006D137E6D6C5A90380FC1F8903807E3F0903803F7E06DB45A6D5B6EC7FC
A24A7E497F903803F7E0903807E3F090380FC1F890381F80FC90383F007E017E7F49EB1F
804848EB0FC04848EB07E04848EB03F04848EB01F84848EB00FC48C8127E007E153F4815
1F48150F00601506282874A841>2 D<020FB6128091B712C01303010F1680D91FF8C9FC
EB7F8001FECAFCEA01F8485A485A485A5B48CBFCA2123EA25AA2127812F8A25AA87EA212
78127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF86DB71280010316C01300
020F158091CAFCAE001FB812804817C0A26C1780324479B441>18
D<181EA4181F84A285180785727EA2727E727E85197E85F11F80F10FC0F107F0007FBA12
FCBCFCA26C19FCCCEA07F0F10FC0F11F80F13F00197E61614E5A4E5AA24E5A61180F96C7
FCA260181EA4482C7BAA53>33 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F80
01FEC8FCEA01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA2
16FE00F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF0
6DB512FE010314FF1300021F13FE283279AD37>50 D<0060161800F0163C6C167CA20078
1678007C16F8A2003C16F0003E1501A26CED03E0A26C16C06D1407A2000716806D140FA2
6C6CEC1F00A26CB612FEA36C5D01F8C7127CA2017C5CA2013C5C013E1301A2011E5C011F
1303A26D6C485AA201075CECC00FA2010391C7FC6E5AA2903801F03EA20100133CECF87C
A2EC7878EC7CF8A2EC3FF0A26E5AA36E5AA36E5A6EC8FC2E3C80B92F>56
D<007FB612F0B712F8A27EC91278B3A5003FB612F85AA27EC91278B3A5007FB612F8B7FC
A26C15F0253A7CB92E>I<0060161800F0163CB3B26C167CA2007C16F8A26CED01F0003F
15036C6CEC07E06C6CEC0FC0D807F0EC3F80D803FE903801FF003A00FFC00FFC6DB55A01
1F14E0010391C7FC9038007FF82E347CB137>91 D<EC01F8140FEC3F80ECFC00495A495A
495AA2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE
137F6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>
102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB00
7EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E48
5AEA07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmmi5 5 6
/Fk 6 117 df<127012F812FCA2127C120CA31218A2123012601240060D7A8413>59
D<001FB61280A2393E01F00F0038EC030012701260EB03E012C0A3C64848C7FCA4495AA4
49C8FCA4133EA4381FFFF85C211C7C9B23>84 D<137013F8A213F013E01300A6EA0F80EA
1FC0EA31E01261A2EAC3C01203EA0780A3EA0F001308EA1E18A213301370EA0FE0EA0780
0D1D7D9C16>105 D<EB0180EB03C01307A2EB038090C7FCA6137CEA01FEEA038FEA070F
1206120C1200A2131EA45BA45BA4EA70F012F8EAF9E0485AB45A007EC7FC12257E9C18>
I<380F03F0383F87FC3833DC1EEA63F8EAC3F013E0EA03C0A248485AA3EC7820D80F0013
6014F015C014F1001EEB7F80000CEB3E001B127D9125>110 D<13C0EA01E0A3EA03C0A4
EAFFFCA2EA0780A2EA0F00A4121EA31304EA3C0CA213181370EA1FE0EA0F800E1A7D9917
>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr5 5 2
/Fl 2 51 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB
01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FC
A2151C7D9B1C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi7 7 25
/Fm 25 122 df<EC03F8EC0FFEEC3C0F913870038002C013C09039018001E0EB03001306
A24913035B16C05BED0780ED0F0049130EEC7FBCECFFF8A29038C07FBCEC001E81A24848
1480A448C7FCA40006EC1F00A2151E153E000F143C5D6D5B390DC001E03918E00780D97F
FFC7FCEB1FF80101C8FC48C9FCA45AA45A23347FA826>12 D<48B61280000715C0481580
481500263C0C06C7FC127012C0EB1C0EEA0018A21338A2EB701EA313F013E01201141F12
0313C0000780A2380F800FA26C486CC7FC221A7D9827>25 D<010FB5FC013F1480491400
48B6FC2603F07EC7FC3807C01FEA0F80497E5A123EA2003C5B127CA30078133E12F8143C
0078137C14785C6C485A495A381E0F80D80FFEC8FCEA03F8211A7D9826>27
D<1238127C12FEA3127C123807077A8614>58 D<1238127C12FE12FFA2127F123B1203A3
1206A3120C121812381270122008127A8614>I<4B7E1503150782150F151FA2153FA215
6F15CF82EC0187140315071406140E140C02187FA2EC30031460A214C013011480D90300
7F91B5FC5B90380C0001A25B13380130805B01E013005B12011203000F4A7ED8FFF89038
1FFFE0A22B2A7DA932>65 D<4AB41308020FEBE01891397F80F038903A01F8001870D903
E0EB0CF0D90F80130749C71203013E15E05B491401485A484815C0485A120F5B001F1680
90C8FC4892C7FCA2127EA4127C12FCA21606007C5DA35E007E5D123E5E6C5D6C6C495A00
074AC7FCD803E0130E6C6C13383900FE01F090383FFFC0D907FCC8FC2D2A7DA830>67
D<90383FFFF0A2903801FC005CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133F
A291C7FCA25BA2137EA213FEA25BA21201A25BA21203B512C0A21C287DA71D>73
D<013FB512F816FF903A01FC001FC04AEB07E0EE01F0010315F816005CA2130716015CA2
010FEC03F0A24AEB07E0EE0FC0011FEC1F80EE3E0091388001FC91B512E093C7FCD93F80
C8FC91C9FCA35B137EA313FE5BA312015BA21203B512C0A22D287DA72A>80
D<013FB512E016FC903901FC007F4AEB0F80EE07C0010315E016035C17F01307EE07E05C
A2010FEC0FC017804AEB1F00163E011F14F8ED07F091B51280A290393F800FE0ED03F002
007F15015BA2137EA201FE1303A2495CA20001160817184914E017380003EDF070B5D8C0
0113E0923800FFC0C9EA3F002D297DA732>82 D<000FB712E05A9039800FE007D81E0090
38C001C05A0038011F1300123000705C00601501023F148012E0481400A2C74890C7FCA2
147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131F001FB57EA22B
287DA727>84 D<EB1F80EB7FC0EBF0E73803C03FEA078048487EA2121E003E133E123C12
7CA2485BA4485B1530A3903801F060A2EA7803010E13C0393C1CF980381FF07F3907C01E
001C1B7C9924>97 D<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E13
7C123E003C1300127CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA
03F8171B7C991E>99 D<EB0FC0EB7FF0EBF0383803C01CEA0780EA0F005A121E003E1338
481370EB07E0387FFF8038FFFC0000F8C7FCA45AA214040078130C141800381330003C13
E0381E07C0380FFF00EA03F8161B7C991F>101 D<130E131F5BA2133E131C90C7FCA7EA
03E0487EEA0C78EA187C1230A212605B12C0A2EA01F0A3485AA2485AA2EBC180EA0F81A2
381F0300A213066C5A131CEA07F06C5A11287DA617>105 D<1407EC0F80141FA2150014
0E91C7FCA7EB03E0EB07F8EB0C3C1318EB303E136013C0A248485AA2C7FCA25CA4495AA4
495AA4495AA4495AA21238D87C1FC7FC12FC133E485AEA70F8EA7FE0EA1F80193380A61B
>I<137CEA0FFCA2EA00F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2
121FA21300A25AA2123EA2127EA2EA7C18A3EAF830A21320EA786013C0EA3F80EA0F000E
297EA715>108 D<3907801FC0390FE07FF03918F0E0F83930F1807CEBFB00D860FE133C
5B5B00C1147C5B1201A248485BA34A5AEA07C01660EC03E0A23A0F8007C0C0A2EDC18091
3803C300D81F0013C7EC01FE000EEB00F8231B7D9929>110 D<EB0FE0EB3FF8EBF83C38
01E00E3803C00F3907800780EA0F00121E123E003C14C0127C158048130FA31500485BA2
143E143C5C12785C383C03C0381E0F80D80FFEC7FCEA03F81A1B7C9921>I<EB1F03EB7F
873801E0CF3803C07FEA0780380F003E5A121E003E137E003C137C127CA24813FC14F8A3
EAF00114F0A3130314E0EA7007EA780FEA3C3F381FF7C0EA07C7EA0007130F1480A3131F
14005B3803FFF0A218257C991E>113 D<3807803E390FE0FF803818F3C13930F703C0EB
FE073860FC0F13F8158039C1F0070091C7FC1201A2485AA4485AA4485AA448C8FCA2120E
1A1B7D991F>I<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2143C000F1318EB
E0006CB4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A24813F05A387001E0
EB03C0383C0F80381FFE00EA07F8171B7C991F>I<131C133EA25BA45BA4485AB512E0A2
3801F000485AA4485AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06EA1F1CEA
0FF8EA03E013267EA419>I<90387C03C03901FF0FF03907079C30390E03B078000CEBF0
F8001813E1123015F0396007C0E015001200A2495AA449C7FC15301238007C1460EAFC3E
15C0EAF87E39F06F03803970C70700383F83FE381F01F81D1B7D9926>120
D<EA03E0486C1370D80C7813F8EA187C0030EB01F0A2126013F800C0EB03E0A2EA01F0A2
EC07C0EA03E0A33907C00F80A4EC1F00A25C00035B3801E0FE3800FFBEEB3F3E13005C12
1E003F5B5C387E01E0383C03C038300780D81C1FC7FCEA0FFCEA07F01D267D9922>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi10 10 37
/Fn 37 122 df<0103B912F85BA290260007F8C73807F8004B5DA2020F150F615DA2021F
151F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA201011501605CA201
031503605CA201071507605CA2010F150F605CA2011F151F605CA2013F153F605CA2017F
157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>5 D<0103B812F8A34AC8127F01
0116076EED01F0A26D160081027F167081143F81021F1660A281140F8114076F15001403
81A21401818082157FA36FC9FC153E15385D5D4A5A4A5A4AC8120C021E151C023815185C
4A1538494815304948157049C9FC010E5E013C150101704B5A4915074848150F48484B5A
48C9127F000EED0FFF003FB8C7FC5AB9FC5F3D397BB841>I<EC3FC0ECFFF8903807E07C
90380F801FD93F00EB800C017E130F49903807C01C4848ECE018485A484801031338000F
EDF0305B001F16704848156017E0007F16C090C713F1178016F34816004815F716FE5EA2
485D5EA4007E1407150F003E91381DF818003F14796C02E11338270F8007C013303B07E0
3F007CF02601FFF8EB3FC026003FC0EB0F802E267DA435>11 D<ED07F0ED1FFE9238780F
809238E007C0913901C003E09138038001DA070013F0140E4A13004A14F8143002701301
146002E014F05C010114035C17E00103140791C713C0EE0F8049EC1F000106143E913803
FE7C90390E07FFF890390C0E03E091380FFFF0913803FC78011CC7127C011880A2821338
1330A2178013701360A301E0143F491500A300015D167E5B16FE00035D6D495AA24B5A00
074A5AD806E0495A0160495A0170013EC7FCD80E3813FC390C1E03F0903807FFC0D901FE
C8FC001CCAFC1218A312381230A312701260A312E05AA22D4B7EBA2F>I<EB07F0D91FFC
1430D97FFE147090B5146000036E13E0486E13C0D9F01F1301270F8007E01380261F0001
1303001CD900F0130048EC7007160648EC300E0060EC380CED181C00E01518C8121CED0C
3816301670166016E05EA2150D5EA2150F93C7FCA2150EA3150CA3151CA215181538A45D
A45DA44A5AA35D2C377FA42B>I<1403EC3FF891387FFF80D901E313C014800103133F91
38001F80ED070092C7FC80A280A2808013018080130080147F81143F8149B47E13079038
0F8FF0EB3E0F496C7E13F83801F003D803E07F1207380FC0011380121FEA3F0014005A12
7EA212FE5D481301A35DA24813035D6C13075D127C4A5A6C91C7FC5C6C133E6C6C5A3807
C0F03801FFE0D8003FC8FC223D7DBB25>I<1406A6913807FFC04A13E091383F80609138
FDFFE0903903F87F804948C7FC495A495A495A137F91C8FC5B5B1201A25BA512007F137E
90383F3FF090381FFFFC90380FC01C90381FFFF890383C7FE001F0C8FC485A485A485AA2
48C9FC121EA25AA2127C1278A312F87EA2127E127F7FEA3FE013FC6CB4FC6C13E06C13F8
000113FF6C6C13C0010F13F001037FEB007F140F14031400A4010C5BEB0E0190380783E0
903801FF80D9007EC7FC234B7EB924>24 D<013FB612E090B712F05A120717E0270F8070
06C7FC391E00600E48140C003813E04813C048141CEAC0011200148001035BA213071400
A25B1578011E137CA3133E133C137C157E13FC5B1201157F1203497FA3D801C0131C2C25
7EA32F>I<027FB512C00103B612E0130F5B017F15C09026FF81FEC7FC3901FC007E4848
7F485A497F484880485AA248C7FCA2127EA2153F00FE92C7FC5AA25D157E5A5DA24A5AA2
4A5A007C495A5D003C495A003E013FC8FC6C137C380F81F83803FFE0C66CC9FC2B257DA3
2F>27 D<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213C0A3
127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<EF0380
EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80
DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8
EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE90
3800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE
0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>I<126012FCB4FCEA7FC0EA1F
F0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138
007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007F80EF1FC0A2EF
7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FC
EC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC12
FC1270323279AD41>62 D<1760177017F01601A21603A21607160FA24C7EA21633167316
6316C3A2ED0183A2ED0303150683150C160115181530A21560A215C014011580DA03007F
A202061300140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B1338
5B01F01680487E000716FFB56C013F13FF5EA2383C7DBB3E>65 D<9339FF8001C0030F13
E0037F9038F80380913A01FF807E07913A07F8000F0FDA1FE0EB079FDA3F80903803BF00
02FFC76CB4FCD901FC80495A4948157E495A495A4948153E017F163C49C9FC5B12014848
16385B1207485A1830121F4993C7FCA2485AA3127F5BA312FF90CCFCA41703A25F1706A2
6C160E170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C143C6C6C5C
6CB4495A90393FE00FC0010FB5C9FC010313FC9038007FC03A3D7CBA3B>67
D<0103B812E05BA290260007F8C7123F4B140FF003C0140F18015DA2141FA25D1980143F
A25D1760027F14E095C7FC92C75AA24A1301A24A495A16070101141F91B6FC94C8FCA290
3903FC001F824A130EA21307A24A130CA2010F141CA24A90C9FCA2131FA25CA2133FA25C
A2137FA291CBFC497EB612C0A33B397DB835>70 D<0103B5D8F803B512F8495DA2902600
07F8C73807F8004B5DA2020F150F615DA2021F151F615DA2023F153F615DA2027F157F96
C7FC92C8FCA24A5D605CA249B7FC60A202FCC7120101031503605CA201071507605CA201
0F150F605CA2011F151F605CA2013F153F605CA2017F157F95C8FC91C8FC496C4A7EB690
B6FCA345397DB845>72 D<0107B512FCA216F890390007F8005DA2140FA25DA2141FA25D
A2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA326397DB824>I<0103B7FC4916E0
18F8903B0007F80007FC4BEB00FE187F020FED3F80F01FC05DA2021F16E0A25DA2143FF0
3FC05DA2027FED7F80A292C8130018FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91
B612FC17E0D903FCCAFCA25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA2
91CBFC497EB6FCA33B397DB835>80 D<4BB4FC031F13F09238FE01FC913903F0007EDA07
C0EB1F80DA1F80EB0FC0023EC7EA07E002FCEC03F0495A4948EC01F8495A4948EC00FC49
5A013F16FE49C9FC13FE187F485A12035B12075B120F4916FF121FA2485AA34848ED01FE
A448C9EA03FCA3EF07F8A218F0170F18E0171F18C0EF3F807EEF7F0017FEDA07C05B6C90
391FF001F8903980383803001F496C485A9139E00C0FE0260FC0C0EB1F80D807E1D90E3F
C7FC0280137ED803F1EB07F8D801F95C3A007FC00FC0903A3FE07F0003903807FFFE0100
018F5BDA000F1306170E171E705A177CEEC1F816FF5FA25F5F6F5B6F48C7FCED00F8384B
7CBA42>I<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7007F141C
121E001C92C7FCA2485CA200305C007017180060130112E0485CA21403C716005DA21407
A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303
A25CEB0FFC003FB6FC5AA237397EB831>84 D<277FFFFC01B500F890B51280B5FC600003
90C7D807FCC7380FF80001FC4BEC03E000016204035E98C7FC621A0604075DA2040F5DA2
041B5D6216336D02735D1663000003C34A5A83DB01834AC8FC04815CDB0301140603075D
1506030C5DA203185D1970033015606115606D01E04A5A15C090267F01804AC9FC17FEDA
030014060400130E0206150C020E5D140C4A5DA24A5D18E04A5D715A5C4A92CAFCA26DC8
5AA2013E157C1778133C1770133801301560513B7CB84E>87 D<49B500F890387FFFF095
B5FC1AE0D90003018090380FFC004BC713E00201ED07804EC7FC6E6C140E606F5C705B60
6F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B705A16F96FB45A94C9FC6F5AA36F
7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03E07F15C04A486C7EEC03000206
13034A805C4A6D7E14704A1300494880495A49C86C7E130E011E153F017E4B7ED803FF4B
7E007F01E0011FEBFFC0B5FC6144397EB845>I<B500FC91383FFFE0A3000390C83807FC
006CEE03E06C5F4D5A95C7FC6D6C140E5F5F6D6C14305F5F6D6C495A4CC8FC010F5C6E13
0E160C01075C6E5B5E6D6C5B15014B5AD901FE90C9FC15065D6D6C5A5D15706E5A5D5D6E
CAFC5CA3147E14FEA35C1301A35C1303A35C1307A2130F000FB512F0A25D3B397DB830>
I<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F485A4848EB1F801207
5B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA214015D48150CA21403
EDF01C16181407007C1538007E010F1330003E131F027B13706C01E113E03A0F83C0F9C0
3A03FF007F80D800FCEB1F0026267DA42C>97 D<EC3FC0903801FFF0903807E03C90380F
800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F143848481300A2
127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C14E0390F8007
C03907C03F003801FFF838003FC020267DA424>99 D<EB03F0EA01FFA3EA00075CA3130F
5CA3131F5CA3133F91C9FCA35B90387E03F8EC0FFF91383C0F809039FEF007C0D9FDC07F
EBFF80EC0003485A5BA249130712035BA2150F00075D5BA2151F000F5D5B153F93C7FC12
1F4990387F0180157EEDFE03003F02FC130090C7FC5EEDF80648150E007E150C161C5E00
FEEC787048EC3FE00038EC0F80293B7CB930>104 D<EB03F0EA01FFA3EA00075CA3130F
5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEBE0F89039FC01C1FCEC
0383EC07070001130ED9F81C13F891383803F091387001E0000349C7FCEBF1C0EBF38001
F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80D9800F1330A2167000
3F011F136001001380A216E04815C0007E1481020F1380158300FE903807870048EB03FE
0038EB00F8263B7CB92B>107 D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00
F826383F387F00305B4A137C00705B00605BA200E090C712FC485A137EA20000140101FE
5C5BA2150300015D5B15075E120349010F133016C0031F13700007ED80605B17E0EE00C0
000F15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432>110
D<90390F8003F090391FE00FFC903939F03C1F903A70F8700F80903AE0FDE007C09038C0
FF80030013E00001491303018015F05CEA038113015CA2D800031407A25CA20107140FA2
4A14E0A2010F141F17C05CEE3F80131FEE7F004A137E16FE013F5C6E485A4B5A6E485A90
397F700F80DA383FC7FC90387E1FFCEC07E001FEC9FCA25BA21201A25BA21203A25B1207
B512C0A32C3583A42A>112 D<02FC13C0903803FF0190380F838390383F01C790397E00
EF8049137F485A4848133F000715005B485A001F5C157E485AA2007F14FE90C75AA34813
01485CA31403485CA314075D140F127C141F007E495A003E137F381F01EF380F839F3903
FF1F80EA00FC1300143F92C7FCA35C147EA314FE5C130190387FFFF0A322357DA425>I<
14FF010313C090380F80F090383E00380178131C153C4913FC0001130113E0A33903F000
F06D13007F3801FFE014FC14FF6C14806D13C0011F13E013039038003FF014071403001E
1301127FA24814E0A348EB03C012F800E0EB07800070EB0F006C133E001E13F83807FFE0
000190C7FC1E267CA427>115 D<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC00
7FB51280A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3120FEBC006A214
0E001F130CEB801C141814385C146014E0380F81C038078780D803FEC7FCEA00F819357E
B31E>I<13F8D803FE1438D8070F147C000E6D13FC121C1218003814011230D8701F5C12
601503EAE03F00C001005B5BD8007E1307A201FE5C5B150F1201495CA2151F120349EC80
C0A2153F1681EE0180A2ED7F0303FF130012014A5B3A00F8079F0E90397C0E0F1C90393F
FC07F8903907F001F02A267EA430>I<01F816F0D803FE9138E001F8D8070F903801F003
000ED9800314FC121C12180038020713010030EDE000D8701F167C1260030F143CD8E03F
163800C001005B5BD8007E131F183001FE5C5B033F1470000117604991C7FCA218E00003
4A14C049137E17011880170318005F03FE1306170E000101015C01F801BF5B3B00FC039F
8070903A7E0F0FC0E0903A1FFC03FFC0902703F0007FC7FC36267EA43B>119
D<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F803A0380
0FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8
FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C00FF15
60010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267E
A42F>I<13F8D803FE1470D8070F14F8000EEB8001121C121800381403003015F0EA701F
1260013F130700E0010013E012C05BD8007E130F16C013FE5B151F000115805BA2153F00
0315005BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB0FE1EB0003
5DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C485A381E07C0
6CB4C8FCEA01FC25367EA429>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr6 6 3
/Fo 3 62 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<B712FEA3CAFCA9B712FEA3270F7C932F>
61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr7 7 8
/Fp 8 62 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA2121C
123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E013
6013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0
120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E0120113
C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8FC
B3A22B2B7DA333>43 D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2
003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803
E0F86CB45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487E
B512F8A215267BA521>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC
6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B90387001
8013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<0018130C00
1F137CEBFFF85C5C1480D819FCC7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C
7F0018133EC7FC80A21580A21230127C12FCA3150012F00060133E127000305B001C5B38
0F03E03803FFC0C648C7FC19277DA521>53 D<B812E0A3CBFCABB812E0A32B117D9633>
61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmbx12 12 37
/Fq 37 122 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5
264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0
007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A
6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC
4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC
017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713
FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16
C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC
15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0
EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80F
FEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E
5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8
EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A
12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FF
EB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C7
14C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8
FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C012
3E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01
FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090
390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE
7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9
F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127F
A5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038
E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F13FC
90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D1501
4B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA2
147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF00103B5
FC010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F4848
15C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A6C90
38FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48013F
14802607FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F81500
00FF157F90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC06C6C
EC7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC010013
F02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F
80161F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F020781
5D173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0
C8FCA20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020F
B612F0A54C457CC455>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FED
FE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E494881494881
4948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994
C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F
806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D90
3AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451
>67 D<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193EA3191EA217
78A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E01778A2
F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBBFC61
A443447DC34A>69 D<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC9026
01FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E6C7E49486F7E49486F7E01FF83
48496F7E48496F1380A248496F13C0A24890C96C13E0A24819F04982003F19F8A3007F19
FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A26D5E6C19F0A26E5D6C19E0A26C
6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B
6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F8020715C002004AC8FC030713C047
467AC454>79 D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E
727E727EA28684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7
C8FC18F818E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F
73131F72141EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC000713805045
7DC354>82 D<003FBA12E0A59026FE000FEB8003D87FE09338003FF049171F90C71607A2
007E1803007C1801A300781800A400F819F8481978A5C81700B3B3A20107B8FCA545437C
C24E>84 D<B792B6FCA526003FFECAEAFC00806D606F15016D608119036D606F15076D60
6F150F6D6081191F6D6D93C7FC61027F163E6F157E023F167C8119FC6E6D5C18016E5E70
13036E5E8218076E6D5C180F6E5E70131F6E93C8FC705B037F143E82187E033F147C7013
FC6F5C17816F5C17C117C36F5C17E76F5C17FF6F5CA36F91C9FCA2705AA2705AA3705AA2
705AA2705AA250457EC355>86 D<903801FFE0011F13FE017F6D7E48B612E03A03FE007F
F84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6
FC1307013F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA2
6D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007
D90FFCC9FC322F7DAD36>97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14
F89139DFC03FFC9139FF000FFE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8
173FA318FCAC18F8A2177F18F0A3EFFFE06E15C06E5B6E491380027C491300496C495A90
3AFC1FC07FFC496CB512F0D9F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49
B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A48494813805B120F48
5AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407
000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391
C7FC9038003FF82A2F7CAD32>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC01
0FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890C7123F4848141F49140F
121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5
FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF8003646
7CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48
496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA4
01F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F80
6C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33
>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133F
EB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A5
27467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F48
9038001FF84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A800
1F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC
018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F
82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A
5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F
90C8FC32427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F8
9139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512
FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA
007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA51203
7EB293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15
FEECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F
7F836F7F816F7F83707E163FB60003B512F8A535457DC43B>107
D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>I<90277F8007FEEC0FFCB590
263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC0
0FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A
5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB590383FFF
8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02F86D
7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F0011F14
FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82
A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C
6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C0902600
1FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC91
39FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFC
ACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02
CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F807FB5
3881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC91
38E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114 D<90391FFC038090B512
87000314FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E0
90C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F
020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F0090
38F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A413
07A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9
150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE0
23407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E49
1380017FD901F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E
7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E13
01011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF0
7C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA215
78362C7EAB3B>I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7EA7C007114786E17
F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F1407011F6F5CA26E0179
140F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B18E003C3157C6D91
39C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018FF6E486D5BA36E486D5B
A26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51>I<B6903803FFFCA500
0101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E1307
6D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD
021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D8
3F805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790
CAFCEA01FC36407EAB3B>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmti10 10 44
/Fr 44 122 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>12 D<3901E003C03907F00FE0000F131F01F813F0001F133FA3000F131F3907B00F
6038003000A2017013E0016013C0EBE00101C01380000113030180130000035B3807000E
000E5B485B485B485B48485A00C05B1C1971B92B>34 D<04061303040FEB07804C130FA2
043EEB1F00A2043C131E047C133EA24C5BA24B485BA24B48485AA204C05B03071303A24B
48485AA24B48485AA2033E49C7FCA2033C131E037C133E0007B912E04818F0A26C18E0C7
2703E001F0C7FC4A48485AA24A48485AA24A48485AA2021E91C8FC023E5BA24A133EA24A
5BA2007FB812FCB97EA26C5F28000F8007C0C8FCA202005B49130FA2013E49C9FCA24913
3EA2495BA2491378000114F8A24848485AA24848485AA24848485AA201005B48130FA200
3E49CAFCA2001C130E3C4A77B944>I<140C140E80EC0380A2EC01C015E0A2140015F0A2
1578A4157C153CAB157CA715FCA215F8A21401A215F0A21403A215E0A21407A215C0140F
1580A2141F1500A2143EA25CA25CA2495AA2495A5C1307495A91C7FC5B133E133C5B5B48
5A12035B48C8FC120E5A12785A12C01E527FBD22>41 D<387FFFF8A2B5FCA214F0150579
941E>45 D<120EEA3F80127F12FFA31300127E123C0909778819>I<15181538157815F0
140114031407EC0FE0141F147FEB03FF90383FEFC0148FEB1C1F13001580A2143FA21500
A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2
133FA291C7FC497EB61280A31D3877B72A>49 D<EC01FCEC0FFF023F13C091387E07E090
3901F803F0903803E001D907C013F890380F8000A249C7FCA2133EA21501017E14F0A215
03017F14E0ED07C09138800F809138C01F0090383FF03E6E5A90381FFCF0ECFFE06D1380
13036D7F497F90380F7FF890383E3FFCEB781F48486C7E3803E0073907C001FF48487E00
1F8090C7FC003E80127E127CA200FC143E5AA25DA25DA24A5A6C495A007C495A007E495A
6C013FC7FC381F80FE380FFFF8000313E0C66CC8FC253A78B72A>56
D<EE01C01603A21607160FA2161F83163FA2167F16FF16EF150116CFED038FA2ED070FA2
150E151E151C1538A203707FA2EDE007A2EC01C014031580EC0700A2140EA25CA25C027F
B5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B130E5BA25B1378137013F0
EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65 D<DB03FE130E92393FFF801E92B5EA
E03C913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC494814
07494815F049481403495A5C49C813E05B485A5B000317C0485AA2485A1880485A94C7FC
A2485AA3127F5BA312FF90CBFCA41738A217784816707E17F06C5E16015F16036C6C4A5A
94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6CEB03C0D801FEEB0F8027007F807EC8
FC6DB45A010F13E0010090C9FC373D74BA3B>67 D<0107B712FEA3903A000FF000074B13
00187C021F153CA25DA2143FA25D1838147FA292C8FCEE03804A130718004A91C7FCA201
015CA24A131E163E010314FE91B5FC5EA2903807F800167C4A1378A2130FA24A1370A201
1F14F0A24A90C8FCA2133FA25CA2137FA291CAFCA25BA25B487EB6FCA337397BB836>70
D<0103B5D8F80FB512E0A390260007F8C7381FE0004B5DA2020F153F615DA2021F157F96
C7FC5DA2023F5D605DA2027F14016092C7FCA24A1403605CA249B7FC60A202FCC7120701
03150F605CA20107151F605CA2010F153F605CA2011F157F95C8FC5CA2013F5D5F5CA201
7F14015F91C7FC491403007FD9FE01B512F8B55BA243397CB83E>72
D<0103B512F8A390390007F8005DA2140FA25DA2141FA25DA2143FA25DA2147FA292C7FC
A25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA213
7FA291C8FC497EB6FCA25C25397CB820>I<902603FFF891B512E0A281D90007923807F8
006F6E5A61020F5E81DA0E7F5DA2021E6D1307033F92C7FC141C82DA3C1F5C70130EEC38
0FA202786D131E0307141C147082DAF003143C70133814E0150101016E1378030014705C
8201036E13F0604A1480163F010715C1041F5B91C7FC17E149EC0FE360010E15F3160701
1E15FF95C8FC011C80A2013C805F1338160013785F01F8157CEA03FC267FFFE0143CB515
38A243397CB83E>78 D<ED03FE92383FFFC09238FC07F0913903E001F891390F80007C02
3FC77E027E8002F815804948EC0FC0EB07E04948EC07E0131F4A15F049C81203137E01FE
16F8485AA2485AA2485AA2120F5B001F16075B123FA34848ED0FF0A448C9EA1FE0A3EF3F
C0A21880177F18005F5F16015F6C4B5A4C5AA24C5A6C4B5A6D4A5A001F93C7FC6D147E00
0F5D6C6CEB03F06C6C495A6C6CEB0F806C6C013FC8FC90383F01FC90381FFFE0010190C9
FC353D74BA40>I<0107B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8141FEF01
FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301EF1FC04A
EC3F80EFFE0001034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA2
5CA2133FA25CA2137FA291CAFCA25BA25B1201B512FCA337397BB838>I<92383FC00E91
3901FFF01C020713FC91391FC07E3C91393F001F7C027CEB0FF84A130749481303495A49
48EB01F0A2495AA2011F15E091C7FCA34915C0A36E90C7FCA2806D7E14FCECFF806D13F0
15FE6D6D7E6D14E0010080023F7F14079138007FFC150F15031501A21500A2167C120EA3
001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B5A6D49C7FC6D133ED8F9F013FC39F8FC03
F839F07FFFE0D8E01F138026C003FCC8FC2F3D7ABA2F>83 D<B500F8903803FFFEA218FC
D803FEC8EA7FC049ED3F000001163E173C17385FA25F16015F6D4A5AA200004BC7FC5E16
0E5EA25EA25E5EA26D495A7F4B5A150793C8FC150EA25D153C15385D1480013F5B14815D
EC8380A20287C9FCA2148E149E149C14F8A26D5AA25C5CA25CA291CAFC131EA2373B6FB8
3E>86 D<EC0FFFA35C1500141EA2143EA2143CA2147CA21478A214F8A25CA21301A25CA2
1303A25CA21307A25CA2130FA291C7FCA25BA2131EA2133EA2133CA2137CA21378A213F8
A25BA21201A25BA21203A25BA21207A25BA2120FA290C8FCA25AA2121EA2123EA2123CA2
127CA21278A2EAFFF8A25BA220537CBD19>91 D<01181330013813709038F001E03901C0
03800180130000035B3807000E000E5B000C1318001C1338485B00301360A2007013E000
605BA238EF01DE38FF81FFA66CC65A003C13781C196AB92B>I<EC0FFFA4EC001F151EA3
153E153CA3157C1578A315F815F0A3140115E0A3140315C0A314071580A3140F1500A35C
141EA3143E143CA3147C1478A314F85CA313015CA313035CA313075CA3130F91C7FCA35B
131EA3133E133CA3137C1378A2EAFFF8A25BA2205382BD19>I<14F8EB07FE90381F871C
90383E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C13
00A21407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C
485B9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F
80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A127EA214
0F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07
C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E090381F00
70017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F
90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00
380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507A216E0A2
150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEB
F80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2
140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E
391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380FC1E09038
3F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81
FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C0
6CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38
ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512
C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F
5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C
82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F13
07D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F1207491400A25DA2
49137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB
00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF
80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91
C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB
1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F
01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E38048903800FF00
0038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03
FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B1207
5BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0
143879B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017E
EB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF838913830
03800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E
147F80001F809039801F81C0A21583003F013F138001001303A21507481500007E133EEC
1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F
1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F813
78EA7870EA7CE0121FEA0F80123B79B915>I<D801E001FEEB07F03C07F803FF801FFC3C
0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400
007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE17
00495CA2030F5C0001177E495C18FE031F5C120349DA8001131C18F8033F153C00070403
133849020013F0A24B1570000F17E049017E15F019E003FEECE1C0001FEE01E349499038
00FF000007C70038143C3E2679A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E
3E3C03E0261C1F787F39383FF00114E0007813C000708114804A485AEAF07FEAE07EA200
00140701FE5C5BA2150F00015D5B151F5E12034990383F8380160316070007027F130049
137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>
I<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B
120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0
140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677
A42A>I<9039078007C090391FE03FF090393CF0787C903938F8E03E9038787FC0017049
7EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2
010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E
3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512C0A3293580A42A>I<3903
C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F80007815000070
1300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5B
A3123F90C9FC120E212679A423>114 D<14FE903807FF8090380F83C090383E00E04913
F00178137001F813F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C
7F6D13807F010F13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00
705B6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480
A3133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5B
A3121FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00
EA07FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C
0038140F131F007815C01270013F131F00F0130000E015805BD8007E133FA201FE14005B
5D120149137EA215FE120349EBFC0EA20201131E161C15F813E0163CD9F0031338140700
01ECF07091381EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D>I<01F0
130ED803FC133FD8071EEB7F80EA0E1F121C123C0038143F49131F0070140FA25BD8F07E
140000E08013FEC6485B150E12015B151E0003141C5BA2153C000714385B5DA35DA24A5A
140300035C6D48C7FC0001130E3800F83CEB7FF8EB0FC0212679A426>I<01F01507D803
FC903903801F80D8071E903907C03FC0D80E1F130F121C123C0038021F131F49EC800F00
701607A249133FD8F07E168000E0ED000313FEC64849130718000001147E5B03FE5B0003
160E495BA2171E00070101141C01E05B173C1738A217781770020314F05F000301071301
6D486C485A000190391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679
A437>I<903907E007C090391FF81FF89039787C383C9038F03E703A01E01EE0FE3803C0
1F018013C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C75AA2147EA214
FEA25CA21301A24A1370A2010314F016E0001C5B007E1401010714C000FEEC0380010F13
07010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA427>I<13F0D8
03FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F07E
148012E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA314035D
14070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7
FC147E147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmbx10 10 33
/Fs 33 122 df<913903FFC7C0027F13FF0103B6FC010F130090383FF80190387FE003EB
FFC05A14805A4A7EA281A9B8FCA4000390C7FCB3ABB5D8FC3F13FFA4303A7EB935>13
D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>46
D<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630>49
D<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001
FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC0
92C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC048
7E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806C
B61200000114FC6C6C13F0010790C7FC27387CB630>51 D<EA0F80EA3FE0EA7FF0A2EAFF
F8A5EA7FF0A2EA3FE0EA0F80C7FCABEA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0
EA0F800D2579A41B>58 D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015
F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E8002
7C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C812
3F4982013E151FA2017E82017C8101FE83B500F80107B61280A4413A7DB948>65
D<B812C017FC17FF18C028007FF000037F04007F717E717E171F84A2717EA74D5AA26017
3F4D5A4D5A4C13C0040F5B91B600FCC7FCA2EFFF8002F0C713F0EF3FF8717E717E717E19
807113C0A319E0A719C0A25F4D138019005FEF7FFE4C485AB912F018C095C7FC17F03B39
7DB844>I<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E0503138071
13C0A27113E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F818
7F19F0F0FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC17
8040397DB849>68 D<B612FCA439007FF800B3B3ADB612FCA41E397DB824>73
D<B600FC0103B512C0A426007FF8C8381FE00019804EC7FC18FEEF01F84D5A4D5A4D5AEF
3F80057EC8FC5F4C5A4C5AEE0FE0EE1F804CC9FC167E5EED03F84B7E4B7E4B7E4B7F5D02
F9B57EDAFBF77FDAFFE37F15C103807F4A487F4A6D7E4A133F707E707F8482707F707F84
82717E717E8483717F717F858385B600FC017FEBFFE0A443397DB84B>75
D<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA201796D5DA201786D5D
A26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D
5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA2923803FF1EA36F13BC
A26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE070054397DB85B>77
D<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F
48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014
FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC007F03
0F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F81303
9039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>83
D<003FB91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200
781703A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>I<EB3FFE0003B5
12E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC
3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF6D5A12
7F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA42E>97
D<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485AEA0FF8121F13F012
3F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E15036C6CEB07C06C
6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA42A>99
D<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003EB001FD8
07FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C6C5B
6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>I<903803FF
80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003F
EC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D
14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C>
I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A2481381A24813
016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D>I<161FD9
07FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F003F15CF
4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE07FE48B5
12F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C15F86C81
6C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C495AD81F
F0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<13FFB5FCA4
12077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A14C05CA25C
A291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2487EA56C5AA26C
5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13FFB5FCA412077E
B3B3ACB512FCA4163A7DB91B>108 D<01FED97FE0EB0FFC00FF902601FFFC90383FFF80
020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F000749DACF007F00034914
DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>
I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C011380000713780003497E6D
4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F801
7F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81A3
00FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB4
5A6C6CB5C7FC011F13FC010113C029257DA430>I<49B4EB0780010FEBE00F013FEBF81F
9039FFC07C3F0003EB803E3A07FE000F7F4848EB07FF121F497F123F497F127FA25B12FF
AA6C7EA36C7E5D6C7E000F5C6C6C5B6C6C133F6CEBC0FD39007FFFF1011F13C101011301
90C7FCAC037F13FEA42F357DA432>113 D<9038FE03F000FFEB0FFEEC3FFF91387C7F80
9138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422
257EA427>I<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C1300
12FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F
9038007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512
C000F8140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FC
A3000390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D
357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9
C03E13FF90387FFFFC011F13F00103138030257DA435>I<B500F1B538803FFFA43D07FE
000FF80003E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E485C017F
ED801E5D90273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781F
F0F0A29139FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA2
92C7FC6E5CA2023E147C023C143C40257EA445>119 D<B539F01FFFF0A4000390398003
F8006C01C013E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D
6C5A5D6D5B6D5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC049486C
7E4A6C7E013E80496D7E49130F00016E7EB590383FFFF8A42D257EA432>I<B539F001FF
F8A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14
F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E
5AA26E5AA26E5AA26E5AA292C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1
F0EBC3E06C485A387D1F80D83FFFC9FCEA1FFCEA07F02D357EA432>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmti9 9 53
/Ft 53 125 df<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA070012
06120E5A5A5A5A5A0B176FB318>39 D<1560EC01E0EC03C0EC0700140E5C143C5C5C495A
495A13075C49C7FC5B131E5B137C137813F85B12015B12035B1207A25B120FA290C8FC5A
A2121E123EA3123C127CA31278A212F8A35AAF12701278A21238A2123C121CA27EA27E6C
7E12011B4A75B71F>I<14301438A28080A2140F801580A2140315C0A4140115E0A81403
A415C0A31407A31580140FA315005CA3141E143EA2143C147CA25CA25C13015C13035C13
075C130F91C7FC131E133E133C5B5B485AA2485A485A48C8FC121E5A12705A5A1B4A7EB7
1F>I<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A
5A5A5A5A0B177A8718>44 D<B51280A46C1300110579911B>I<121C127F12FFA412FE12
380808778718>I<EC1FC0EC7FF0903801E0F8903807C03CEB0F00011E131E133E013C13
1F5B13F85B1201A2485AA20007143F5BA2120F153E49137E121FA348C712FCA4007EEB01
F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F00A2141E5C0078137C5C387C
01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127>48 D<EC0FE0EC3FF8ECF03E90
3803C01F903907800F80EB0F00011EEB07C0131C5BD978C013E0EB70E0EBF06013E01201
13C0ECE00F000301C013C013801381EC801F01831480903887003F018E1400D801FC137E
D800F05B90380001F84A5A4A5A4A5A4AC7FC147E14F8EB03E0EB0FC049C8FC133E137848
48EB0380485A4913074848140048C75A121E001C141E003F143E01F85B397DFF80F83878
1FFF486C5BD8E0035B6D1380D9007EC7FC23347AB127>50 D<150E151FA2153F153EA315
7E157CA215FC15F8A2140115F0A2EC03E0A3EC07C0A2EC0F80A2EC1F00A2143EA25C1478
14F85C1301903803E0E0ECC1F0EB0781EB0F83EC03E0131E133CEB7C0701F813C0EA01F0
EA03E03807C00FD80F801380EA1FFC383FFFCF48EBFF82D8F00313FF3860003FC7EA1FF8
EC3F00143EA3147E147CA314FC5CA4146020417DB127>52 D<010614C090380FC00F91B5
1280160015FC4913F015C0D91CFEC7FC91C8FC133C1338A313781370A313F0EBE0FE9038
E3FF809038EF03C03901FC01E001F87FEBF000497F485A5BC8FCA41401A4003C130300FC
5CA34A5A5A00E0495AA24A5A4AC7FC6C137E00705B387801F8383E07F0381FFFC06C90C8
FCEA03F8223478B127>I<EC01F8EC0FFEEC3FFFECFE0F903901F80780903803E00F9038
07C01F90380F803FD91F001300133E49130E01FC90C7FC5B1201485AA2485AA2380FC1F8
EBC7FF9038CE0780391FBC03C001F07FEBE001003F8013C01380A2D87F007FA2127E4A5A
A25AA214075DA25A4A5AA25D141F4AC7FC0078133E007C5B5C6C485A381F07E0EBFFC000
0790C8FCEA01F8213477B127>I<EC07E0EC3FFC4A7E903801F81F903903E00F80903807
8007D90F0013C0491303131E5BA21507017C1480A2150F1600017E131E017F133E6E5A6D
6C5AECE1E090381FFBC06DB4C7FC6D5A6D7E497F011E7F90387C7FE09038F01FF048486C
7E3807C007EB8003380F0001001E1300123E003C1478127C1278A215F800F85C5A6C495A
007813035D007C495A003C011FC7FC003E133E381F81FC380FFFF0000313C0C648C8FC22
3479B127>56 D<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49487EEB1F00013E7F01
7E14805BA2485AA2485A151FA212075BA2ED3F00A2485A5DA2000714FEA2140114030003
5CEBE0070001131E3900F039F8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F003891
C7FC007E133E00FE137E5C48485A48485A48485A38781F80D87FFFC8FCEA1FFCEA07E021
3478B127>I<1370EA01FC1203A413F8EA00E01300B0121C127F5AA45A12380E20779F18>
I<161C163CA2167C16FCA21501821503A2ED077E150F150E151CA21538A2157015F015E0
EC01C0A2913803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49
C7EA1F80A2130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FF
FEA32F367BB539>65 D<0107B612C04915F017FC903A003F8000FE177FEF3F8092C7121F
A24A15C0A2147EA214FE18804A143FA20101ED7F00177E4A5C16010103EC03F04C5A4AEB
1FC091B6C7FC495C9139F0007F804AEB0FC0707E010F6E7E834A1301A2011F81A25CA213
3F5F91C71203A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC07FC007FB6
12F0B712C04BC8FC32337BB236>I<DB1FF013C09238FFFC010203EBFF03913A0FF00F87
8091393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E
137E13FE485A4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FE
A2EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB
07C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>I<
0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F014
7E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A1407A2130F18E04A140F
18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A04
7EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>I<0107B712F05B18E0
903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A130EA20101EC1E03041C
13804A91C7FC163C13035E9138F001F891B5FC5B5EECE0011500130F5E5C1707011F0101
5BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E14014C5A01FE14074C
5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>I<92391FE001809238FFF803
0207EBFE07913A1FF01F0F0091393F80079F9139FE0003DFD901F86DB4FCD907F05C4948
1300495A4948147E49C8127C137E13FE485A48481578A2485AA248481570A2485A94C7FC
123F5BA3127F90CBFCA400FE91383FFFFCA25F9238003F8094C7FCA2007E5DA2167EA200
7F15FE7E5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C133E3A00FF01FC3090387FFF
F0011F01C0C8FCD903FEC9FC313775B43B>71 D<010FB51280A216009038003FC05DA292
C7FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA2
5CA2133FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>73
D<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25CA2
1303A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F1580160791C7FCEE0F
005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230>76
D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0EFC610273
151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF070301031607050E
5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE0380011E017C
5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED3FC001F0
EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB245>I<90
2607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B140360EC
71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC801F
A20107ECC03C030F1338140016E049010713781770010E14F01503011E15F0705A011C13
01A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201EA07F8267FFF
807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E03F91391F800FC091393E00
03E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E017E153E49153F48
5AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F01607
17E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F80
6C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC303775B43B>I<0107B6
12C04915F883903A003F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC0
5CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F8
02E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0
B5FCA233337CB234>I<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7
127F835C1880147EA214FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04
FEC7FC49B512F016C09138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FE
A291C7FCA24913015E137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0E
EE7E1CC9EA1FF8EE07E032357BB238>82 D<913901FC018091380FFF03023F13C791387E
07EF903A01F801FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A2
93C7FC137FA26D7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F
7E150FA4120EA2001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038
C007E039F3F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880
903AF800FC003F260FC001141F0180150F01005B001EEE07001403121C003C4A5BA20038
0107140E127800705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA2
5CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374
B237>I<B53CC03FFFF003FFF8601480280FF00001FCC7EA7F806C484AEC3E00193CA219
386115036115074E5A030F140361031D4AC7FCA2DB38FC130EA203705C15F06C6C01E05C
140103C05CDA038014F060DA0700130160020E4A5AA24A4AC8FCA24A140E147802705C5C
5FD9F1C014781770D9F3805CA201F7C7EA7FC0A201FE5DA26C4892C9FCA249147E5B167C
5B1678491470453570B24D>87 D<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0
EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE1400
5A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E
1E783907FC0FF03901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35BA21201A2
5BA21203A25BA21207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C0
13005AA2123EA2007E131F1580127CA2143F00FC14005AA2147EA25CA2387801F85C495A
6C485A495A6C48C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F078090383E03
C0EBFC013801F8033803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA3
12FE5AA4007C14C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7
FC1B2278A023>I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215
FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F
8007A2D83F005BA2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C
141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0223578
B327>I<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D8
3F0013005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007C
EB0780EC1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>I<151FED
7FC0EDF0E0020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C14
3E90381FFFFEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA3
131F91C8FCA35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B4
18>I<143FECFF80903803E1E6903807C0FF90380F807FEB1F00133E017E133F49133EA2
4848137EA24848137CA215FC12074913F8A21401A2D80FC013F0A21403120715E0140714
0F141F3903E03FC00001137FEBF0FF38007FCF90381F0F801300141FA21500A25C143E12
38007E137E5C00FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB
0FC0EA03FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFF
E03901FBE0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380
A2001F13035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C1407
160000FC140E151E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0
EB038090C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA
60FCC65AA212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB038013071400
130E131EEA07F8EA01F013337AB118>I<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA213
3EA2137EA2137CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F143800031370
ECE03E9038E1C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81
EB80F81300150C48141E151C123EA2007E143C1538127C157800FCEB787015E048EB3FC0
0070EB0F8020357BB323>107 D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A212
01A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127E
A2127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F00103579
B314>I<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B
3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05F
D860F8148012000001021F130360491400A200034A13076049013E130FF081800007027E
EC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01015D183C
010049EB0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E787C1E39
1C7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00E01500EA
60F8120000015C153E5BA20003147E157C4913FCEDF8180007153C0201133801C013F0A2
000F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26227AA02B>I<
14FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B120F484813
FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC
3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E137C9038
7F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F8
14E0EA07871307000313C01200010F130316F01480A2011F130716E01400A249EB0FC0A2
013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC
000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<3903C00FC0390FF03F
F0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E13701500EAF0
FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E
1E227AA020>114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2
EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3
147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303
EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25B
A21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB
07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C
123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA21401
00035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC300
0190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC
13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A15
78000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A38
00F878EB7FE0EB1F801E227AA023>I<011F137C90387FC1FF3A01E1E787803A03C0F703
C0903880FE0FEA07004813FC000E1580001E9038F80700001C91C7FC1301003C5B121812
0013035CA31307A25C1506010F130F150E14800038141ED87C1F131C00FC143C1538013F
5B39F07FC0E03970F3C3C0393FE1FF80260F807EC7FC22227CA023>120
D<13F0D803FC1307D80F1E130F000E141F121C123C0038143FD8783E133E1270A2017E13
7ED8F07C137CEA60FCC65A15FC000114F85BA21401000314F013E0A2140315E0EA07C0A2
0003130715C0EBE00F141F0001133F9038F07F8038007FEFEB1F8FEB001F1500A25C003E
133E007E137E147C5C007C5BEA7001495A38380780D83C1FC7FCEA0FFCEA07F020317AA0
25>I<BB12F8A2450277944E>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmbx9 9 23
/Fu 23 117 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>46
D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317AB02C>49
D<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF48487E6D6C1380D8FFC014
C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC3FC04A5A
02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B4848130748B6FC
5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048B512F03903F01FF83907C0
0FFE380F8007486C6C7E01F01480123F13F8A5D81FF014006C485AD803805BC7FC4A5A4A
5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC0FFC6E7E6E7E16806E13C0A2000F
15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC0148049481300003F5B391FF01FFE6CB5
12F8000314E0C61480D91FFCC7FC23327CB02C>I<151F5D5DA25D5C5C5C5CA25C143D14
7D14F9EB01F114E1EB03C1EB0781130FEB1F01133E133C137813F01201EA03E0EA07C013
80EA0F00121E123E5A5AB712FEA4C700031300A80103B512FEA427317EB02C>I<ED1F80
A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F801503023F80EC3E
01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA249B67EA24981A290
271F8000077F91C77EA24982013E80017E82017C80A201FC8249157FB500F0013FB512F0
A43C347DB343>65 D<B812FCA4C69038E0001FEE03FE16011600177E173EA2171EA39238
03C01F170FA403071300A2150F153F91B5FCA4ECE03F150F1507A21503A592C8FCABB612
F8A430337DB238>70 D<003FB812F8A4D9F003EB801FD87F80ED03FC01001501007E1600
007C177CA20078173CA400F8173E48171EA4C71600B3A9011FB612F0A437327DB13E>84
D<EB7FFE0003B512E04814F8390FF00FFC391FF803FF806E138016C0157F6C5A6C5AEA01
80C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300EA1FF8485A485A485A5BA315FF7F
007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC0F39007FE00728217EA02B>97
D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB512E09039FFF00FF89138C007FC
91380003FE496D7E496D1380A217C0167FA217E0A917C0A216FF1780A26D4913006D495A
9138C007FC9039F3F01FF801E1B512E0D9C07F13809026800FF8C7FC2B347EB331>I<90
3807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0A2007F6D5A49
6C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D807FE133E3903
FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<ED01FC15FFA4150F1507ADEB07
FE90383FFFC790B512F70003EB01FF3907FC003F4848131F4848130F48481307A2127F5B
A212FFA9127FA27F123F150F6C6C131F6C6C133F6C6C497E2603FE03B512E0C6B512E701
3F1387903807FC072B347DB331>I<903803FF80013F13F090B512FC48EB03FE3907FC00
7F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF150790B6FCA301C0C8FCA412
7F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01FF807F806C6CB51200011F
13FC010313E024217EA029>I<EC3FE0903803FFF8010F13FC90383FF1FE90387FC3FFEB
FF83481303A2EA03FEEC01FEA2EC00781500A7B512FEA4D803FEC7FCB3A7387FFFF8A420
347EB31B>I<16F890390FFC07FE90387FFF9F48B6127F3907FC0FFC380FF003001F14FE
D9E001133E003FECFF1C1600A6001F5CEBF003000F5C3907FC0FF890B512E0486C1380D9
0FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E06C15F06C15F84815FC121F393F80
001F48C7EA03FE481401481400A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB
7FE00003B61280C6ECFE00010F13E028327EA12C>I<EA01FC12FFA4120F1207ADEC03FF
020F13C0023F13F09138FC0FF89039FDE007FCEBFFC04A6C7E1400A25BA25BB2B539E07F
FFF0A42C347DB331>I<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12FFA412
0F1207B3A5B512C0A412357DB418>I<EA01FC12FFA4120F1207B3B3A6B512E0A413347D
B318>108 D<3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFBC0
6CB4486C7E1400A25BA25BB2B539E07FFFF0A42C217DA031>110
D<903803FF80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F04913
0F003F15F8491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D13
1F6C6CEB3FE06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C>I<
3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FC
EC01F8EC0060491300B1B512F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F80
3F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0
C6FC010F13F0EB007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5
120000F913FC38E03FE01C217DA023>I<133CA5137CA313FCA21201A212031207001FB5
1280B6FCA3D807FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF0
1A2F7EAE22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmr9 9 78
/Fv 78 128 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B
03F01E1F80F0903B0FC0077E003CD91F805B90273F001FF8137E017E4A13FE495CA24848
5C030F147C95C7FCA9187EB912FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1
FFFE0F13F8A33D357FB440>14 D<127812FCA27E7EEA7F80121FEA0FC0EA07E01203EA00
F01378133C13080E0E78B326>18 D<137813FCA212011203EA07F813E0EA0FC0EA1F8013
00123C5A5A12400E0E71B326>I<6C132000E013E0EAF803383E0F80381F1F00EA0FFE6C
5AEA01F06C5A1340130A77AF26>I<123C127EB4FCA21380A2127F123D1201A412031300
A25A1206120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B13
3C5B5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C
123EA3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C013
00124A79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C13
3C133EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C1378
13F85BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A4
007FB812C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>I<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<15
30157815F8A215F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C14
7CA2147814F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137C
A2137813F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2
127812F8A25A12601D4B7CB726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB80
03000F14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB
01F8A36C14F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F34
7DB126>I<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A31932
7AB126>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F
15F00060130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F
801500147E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7
FC001C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F
80390F001FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15
F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015
F8140315FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001F
EB1FE0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A214
0F141FA2143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013
C0EA0180120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107
B51280A321337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC
90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F0
1403A215F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806C
EB7F00380F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13
E090383F00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8
FCA35A127EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01
F8130015FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC00300
07EB07E03903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C00
3FB6FCA34814FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA070014
06140E5C141814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20
347CB126>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F000
1E1300001C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C039
0FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F
007FF8001E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278
007C14787E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>
I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048
EB01F8127EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C0
0E3803E01C3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E038
3F800715C0140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F
347DB126>I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>
I<123C127E12FFA4127E123C1200B0123C127E12FE12FFA3127F123F1203A412071206A3
120E120C121C1238123012701260082F7A9F15>I<007FB812C0B912E0A26C17C0CCFCAC
007FB812C0B912E0A26C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE14
0CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA3
01066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA2000182
1607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC0003
FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED
03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA6
17F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<
DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD9
7F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F16
0CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D
15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0
023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE
0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0
A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F816803433
7EB23B>I<B812C0A3D803FCC7127F0001150FEE03E01601A21600A21760A403061330A4
1700150EA2151E157E90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA417
38A21770A217F01601160316070003157FB812E0A32E337DB234>I<B81280A3D803FCC7
FC0001151FEE07C01603A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3
EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393F
FF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712
0348481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC4893C7
FCAA0303B512E07E7F92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C
7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA
03FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA3
49C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5AB3
B3A7487EB512FEA317337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4EC
3F805A0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>I<B5
00FE903807FFF8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E
4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F
4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF
80B500FE013F13FCA336337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A4160317
00A45EA25E5E5E5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA200
03EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D9
81F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C
5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D
337CB246>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8
EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0
ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A2
16031601A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFF
C0903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E4848
6E7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817
E0AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00
015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFF
C0DA07FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F
80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001
FCC9FCB3A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01
FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC
9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618
B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE9038
1FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E
495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190
C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D15
1C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA2
6D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E102
0F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B5
39800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D
020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95
C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C010117
18A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8
EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B
141C020115184C357FB24F>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E
006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13
065E91387F801C91383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8
FC5D1400B14A7E91B512FCA337337FB23A>89 D<EB7F803803FFF0380F80FC381C003E00
3F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA
3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013
003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F8
9038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED
0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>
I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80123F903800
03E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903
F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07
F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E
127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026
357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0
EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F
14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB
07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803
F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F0
7FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB800F000F5C
EBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC0
6C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15006C143E
6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA31207
1203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB
7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07
E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0
EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13E0130714C0130F007C13
8038381F00EA1FFCEA07F0144384B217>I<EA03F012FFA312071203AF913803FFE0A36E
1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F49
6C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>I<EA
07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF9026
7FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE1470496D48
6C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC0
00FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B5
38C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E0000780
48486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147EA26C
147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA126>
I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F
16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038
F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<903807F00390
383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90C77E5AA25A5A
A9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7
FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F809038E71FC0
EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF060007
13CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014
F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B
38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201A21203120738
1FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F
7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D4813800000
903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F80
0007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360137F6D5BA290
381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>
I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C017C1318
A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0903A1F86
07C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378
A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C0000001478017E13
70017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B903803
9F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000000180000FECFF
8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC
070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807
E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8
FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2EB00
0F003C14E00038EB1FC00030EB3F800070137F1500006013FE495A13035CC6485A495AA2
495A495A49C7FC153013FE485A12035B48481370485A001F14604913E0485A387F000348
130F90B5FCA21C207E9F22>I<B712F8A22502809426>I<001C1370387F01FC00FF13FEA4
007F13FC381C0070170879B226>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmr10 10 81
/Fw 81 124 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<001C131C007F137F39FF80FF80A26D13C0A3007F137F001C
131C00001300A40001130101801380A20003130301001300485B00061306000E130E485B
485B485B006013601A197DB92A>34 D<030C1303031E497EA2033E130FA2033C91C7FCA2
037C5BA20378131EA303F8133EA24B133CA20201147CA24B1378A2020314F8A24B5BA302
071301007FB91280BA12C0A26C1880C7271F0007C0C7FC021E5CA3023E130FA2023C91C8
FCA2027C5BA20278131EA302F8133E007FB91280BA12C0A26C1880280003E000F8C8FC4A
5BA301071301A202805BA2010F1303A202005BA2491307A2011E5CA3013E130FA2013C91
C9FCA2017C5BA20178131EA20130130C3A4A7BB945>I<017C166048B416F02607C38014
01260F81C01403D900E04A5A001E01784A5A003E6D141F003C013FEC7F80007C90271BE0
03FFC7FC0218B512BF007891381FFC3E00F8011CC75A020C14FC5F4C5A16035F4C5A160F
5F4CC8FC021C5B00780118133E007C5D16FC003C01385B003E90383001F0001EEB70036C
01E05B903981C007C03907C3800F2601FF005BD8007C49C9FC90C748EB07C0033EEB1FF0
4BEB3C3803FCEBF81C4B497E913A01F001E00602030103130703E0497E912607C0071480
020F15011580DA1F00018013C04A010F1300143E5C14FC5C495A13035C495A130F4A0107
130149C701C013805B013E1603490203140001FC6F5A49020113064848913800F00E0003
705A49ED3C3849ED1FF06C48ED07C03A437BBD45>37 D<121C127FEAFF80A213C0A3127F
121C1200A412011380A2120313005A1206120E5A5A5A12600A1979B917>39
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F
6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0
B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7
FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078
C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F121C1200A412011380
A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA516057F941C>I<121C127F
EAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815F8A215F014
01A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A2
5C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B
1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007
147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C15
80A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FC
EB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB5
12F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E
486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D
4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303
48481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF
4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC8
5A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E
7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070
ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A
>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB
030313071306130C131C131813301370136013C01201EA038013005A120E120C5A123812
305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780
133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE903878
0F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490
C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F8000
01B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90
383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2
485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E
497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B
15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<123012
38123E003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5D
C712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495A
A3133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901
E001F848486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C
133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13
F801F07F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F
0078EC0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C13
1ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF
017F13C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090
C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907E001DF0003149F
3801F0033900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C
5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC023
3A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C09
2479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201
A412031300A25A1206A2120E5A121812385A1260093479A317>I<007FB812F8B912FCA2
6C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61 D<1538A3157CA315FEA34A
7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A20270
7FEC6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7
121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512
FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E70
7EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1F
E0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF848
6DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F890
3A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE
153F12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FC
AD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D0000161801
7F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC02
0F13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE
0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4
EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8
C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E
170EA31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A215
00A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9
FCA333397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA217
0CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A6
92C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF80
3F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848
150F48481507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E93
38007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C
14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F01300020013
80383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C7
1201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497E
B612C0A31A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFF
C0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F8023
3B7DB82B>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F
4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E14
0E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2
707E707EA2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101
C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FF
B8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE015
33A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C13
0CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2
ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512
F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F00
1706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E
168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3F
E6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C014
0EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049
486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848
ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150F
A3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A
5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFF
E0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0F
E0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC092
3801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F800
0190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE
3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583
A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07
F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F7484813
7F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C
7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F02
0713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C
14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190
C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F000781600
00701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A33539
7DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E
6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC
91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A300
03018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E14
0E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED800302
7F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2ED
FEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5
FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C
1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE
0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC93
38C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6
EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A20200
93C8FC4B80503B7EB855>I<003FB7FCA39039FC0001FE01C0130349495A003EC7FC003C
4A5A5E0038141F00784A5A12704B5A5E006014FF4A90C7FCA24A5A5DC712074A5AA24A5A
5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948EB0180A2495A5C137F495A160348
90C7FC5B1203485AEE0700485A495C001F5D48485C5E4848495A49130FB8FCA329397BB8
33>90 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>I<390180018000031303
3907000700000E130E485B0018131800381338003013300070137000601360A200E013E0
485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80390E000E001A1974B92A
>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1FE0EBFFFC3803E03F3907
000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE
00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C90398006
3E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2
D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D
5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37
257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D
6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7
E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC
3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003
EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C
5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA
7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB5
12FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F15
0014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B
4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>I<B81280A2
290280962A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmbx12 14.4 21
/Fx 21 120 df<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92
B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC49
4848C9FC4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F48
5B481A3FA24849181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94
C7003FEBC000A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC
93B5FC6D13FF6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6
EAC07F033FEE001F030703FC1307DB007F02E01301040149CAFC5B5479D26A>71
D<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13E01B
F0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13
004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>80
D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801
E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A28412
FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C
16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0ED00
7F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0
A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0
486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>83
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEBFFC092B612F002F301017F
913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A824A6E7FA2727EA285A285
84A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B6F495BDACFC04990C7FCDA
87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01FCC8FC90C7000313C04154
7BD24B>I<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001
FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A48
92C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC
3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC
020113E033387CB63C>I<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC00
7FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248
815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6D
EC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8
010390B55A010015C0021F49C7FC020113F034387CB63D>101 D<ED3FFC0203B5FC020F
14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA2495AA2
EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA52E54
7CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC0F90
38FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813E0489338FC
0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C
6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFCA2120FA37F
A213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848C700031480
D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18006C6C4B5A
D80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F03FCC7FC01
0115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0
030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F
8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>I<137F497E000313E048
7FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A5
1B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108
D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271F
E07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137F
DAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3
ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F003
0F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502
FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B6
12C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F4849
6D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3
003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE
011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<
90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013
FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612
FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307
D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15
F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F0307
13F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC
7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB6
35>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FC
A426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEB
FFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED
001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC090
3A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B6D8E0
7FB5D8C003B512C0A5000101F0C701F0C7381FF8006E027FED07E06C715DA26E023F150F
017F705DA26E181F013F4B6C92C7FC6E606D70143E94B5FC6F177E6D4A6E137C03C001F3
15FC6D715B160303E001E114016D020702E05B03F013C06D71485A160F03F8D9807F1307
6D05F85B93381F003F03FC160F027F4902FC5BDBFE3E011F131F023F04FE90C8FC167EDB
FF7C010F5B6E01FCECFF3E4C6D137E6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E
5F93C8123F6F5EA2033E6FC9FC5A367DB461>119 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 523 448 a Fx(Shallo)l(w)44 b(P)l(arsing)g(using)g
(Probabilistic)g(Grammatical)1694 598 y(Inference)1277
886 y Fw(F)-7 b(ranc)n(k)26 b(Thollard)h(and)g(Alexander)g(Clark)679
1060 y Fv(EURISE,)e(Univ)n(ersit)n(\023)-36 b(e)25 b(Jean)h(Monnet,23,)
i(Rue)d(du)g(Do)r(cteur)g(P)n(aul)h(Mic)n(helon,)h(42023)1453
1152 y(Sain)n(t-Etienne)e(C)n(\023)-36 b(edex)26 b(2,)g(F)-6
b(rance)612 1243 y(ISSCO/TIM,)26 b(Univ)n(ersit)n(\023)-36
b(e)25 b(de)h(Gen)n(\022)-36 b(ev)n(e)25 b(40,)i(Bvd)e(du)g(P)n(on)n(t)
g(d'Arv)n(e)g(CH-1211,)i(Gen)n(\022)-36 b(ev)n(e)26 b(4,)1768
1334 y(Switzerland)759 1674 y Fu(Abstract.)43 b Fv(This)35
b(pap)r(er)g(presen)n(ts)g(a)g(mac)n(hine)f(learning)i(approac)n(h)f
(to)g(shal-)759 1766 y(lo)n(w)i(parsing)g(using)f(tec)n(hniques)f(of)i
(grammatical)f(inference.)h(W)-6 b(e)35 b(\014rst)h(learn)759
1857 y(a)30 b(deterministic)g(probabilistic)h(automaton)e(that)h(mo)r
(dels)g(the)f(join)n(t)h(distribu-)759 1948 y(tion)24
b(of)g(c)n(h)n(unk)e(and)h(P)n(art-of-sp)r(eec)n(h)h(tags,)h(and)e
(then)g(use)g(this)h(automaton)f(as)h(a)759 2040 y(transducer)29
b(to)g(\014nd)f(the)g(most)h(lik)n(ely)f(c)n(h)n(unk)g(tag)h(sequence)g
(using)g(a)g(dynamic)759 2131 y(programming)20 b(algorithm.)i(The)f
(resulting)h(transducers)f(can)g(also)h(b)r(e)f(com)n(bined)759
2222 y(with)32 b(statistical)h Ft(POS)40 b Fv(taggers.)34
b(W)-6 b(e)31 b(also)h(discuss)g(an)g(e\016cien)n(t)f(means)g(of)h(in-)
759 2314 y(corp)r(orating)f(lexical)g(information)f(together)h(with)f
(an)f(application)i(of)g Ft(b)l(agging)759 2405 y Fv(that)26
b(impro)n(v)n(e)e(our)i(results.)648 2670 y Fs(Keyw)m(ords:)h
Fw(Probabilistic)f(Grammatical)g(Inference,)h(Shallo)n(w)g(P)n(arsing,)
e(Bagging)p eop
%%Page: 2 2
2 1 bop 523 232 a Fv(2)648 448 y Fw(Shallo)n(w)36 b(parsing)g(of)h
(natural)f(language)f(is)i(the)h(task)f(of)g(dividing)g(sen)n(tences)f
(in)n(to)523 548 y(a)c(sequence)h(of)g(simple)g(phrases.)e(Man)n(y)h
(applications)g(of)h(this)g(can)g(b)r(e)g(found.)g(Among)523
648 y(them)22 b(are)f(\(i\))h Fr(indexing)j(web)g(p)l(ages)7
b Fw(:)22 b(as)f(users)g(mainly)h(en)n(ter)f(noun)g(phrases)g(in)n(to)g
(in)n(ternet)523 747 y(searc)n(h)29 b(engines,)g(detecting)i(noun)f
(phrases)e(leads)i(to)g(a)g(b)r(etter)g(indexing)g(of)g(w)n(eb)g(pages)
523 847 y(and)37 b(\(ii\))h(as)f(a)f(preliminary)h(to)g(full)h
(parsing,)e Fr(i.e.)i Fw(building)g(a)f(complete)g(constituen)n(t)523
946 y(structure)27 b(tree.)648 1050 y(W)-7 b(e)27 b(consider)f(as)h
(input)h(a)f(sequence)g(of)g(w)n(ords)f(together)g(with)i(their)f(part)
g(of)g(sp)r(eec)n(h)523 1150 y Fr(POS)42 b Fw(tags;)31
b(the)i(task)f(of)g(shallo)n(w)f(parsing)g(is)h(then)g(one)g(of)g
(adding)g(an)g(additional)g(tag)523 1249 y(that)24 b(indicates)f(the)h
(b)r(eginning)g(and)f(ends)h(of)g(the)g(v)-5 b(arious)22
b(t)n(yp)r(es)i(of)f(constituen)n(ts)h(\(Noun)523 1349
y(Phrase,)33 b(V)-7 b(erb)34 b(Phrase,)f(etc.\).)i(These)f(tags)f(will)
i(b)r(e)g(called)f Fr(Chunk)43 b Fw(tags.)34 b(Initially)g(w)n(e)523
1449 y(shall)k(consider)f(just)h(the)h(mapping)e(from)h(POS)f(tags)g
(to)h Fr(Chunk)48 b Fw(tags;)37 b(later)g(w)n(e)h(will)523
1548 y(consider)27 b(ho)n(w)g(to)g(incorp)r(orate)f(lexical)h(kno)n
(wledge.)648 1652 y(Our)22 b(approac)n(h)g(is)h(to)g(infer)g(a)g
(deterministic)h(probabilistic)e(automaton)h(that)g(mo)r(dels)523
1751 y(the)h(join)n(t)g(sequence)g(of)f(POS)h(tags)f(and)g
Fr(Chunk)33 b Fw(tags.)24 b(W)-7 b(e)24 b(use)f(a)h(grammatical)e
(inference)523 1851 y(algorithm)32 b(for)g(this)h(task.)g(W)-7
b(e)33 b(then)h(consider)e(it)h(as)f(a)h(probabilistic)f(transducer)g
(that)523 1951 y(mo)r(dels)d(the)h(mapping)g(from)f(POS)f(tags)h(to)g
Fr(Chunk)39 b Fw(tags.)29 b(This)g(in)n(terpretation)g(will)h(b)r(e)523
2050 y(done)e(with)i(the)f(Viterbi)g(algorithm)e([9].)i(Since)g(for)f
(eac)n(h)g(w)n(ord)f(w)n(e)i(ha)n(v)n(e)e(one)i(POS)f(tag,)523
2150 y(and)h(one)g Fr(Chunk)39 b Fw(tag,)29 b(the)h(resulting)f
(transducers)f(are)h(fully)h(aligned)e(whic)n(h)i(simpli\014es)523
2249 y(the)e(algorithms)e(considerably)-7 b(.)648 2353
y(W)g(e)29 b(start)e(b)n(y)i(presen)n(ting)e(the)i(data)f(w)n(e)g(will)
h(use;)g(w)n(e)f(then)h(describ)r(e)f(our)g(approac)n(h)523
2453 y(in)34 b(general)f(terms.)h(The)g(probabilistic)f(grammatical)g
(inference)h(algorithms)e(are)h(then)523 2552 y(in)n(tro)r(duced.)g(W)
-7 b(e)34 b(describ)r(e)f(ho)n(w)f(these)i(automata)e(can)h(b)r(e)g
(used)h(as)e(transducers,)g(and)523 2652 y(then)38 b(presen)n(t)f(the)g
(exp)r(erimen)n(tal)g(results)g(w)n(e)g(ha)n(v)n(e)f(obtained.)i(W)-7
b(e)37 b(conclude)h(with)f(a)523 2751 y(brief)28 b(discussion.)523
3037 y Fq(1)112 b(The)38 b(problem)523 3256 y Fw(This)f(task)f
(consists)g(in)h(constructing)f(a)h Fs(\015at)g Fw(brac)n(k)n(eting)e
(of)i(the)g(sen)n(tences.)f(F)-7 b(or)37 b(the)523 3355
y(sen)n(tence)21 b Fr(\\He)j(r)l(e)l(ckons)g(the)g(curr)l(ent)f(ac)l(c)
l(ount)h(de\014cit)g(wil)t(l)i(narr)l(ow)e(to)g(only)h(#)f(1.8)h(bil)t
(lion)523 3455 y(in)30 b(Septemb)l(er.")p Fw(,)f(the)f(goal)f(will)h(b)
r(e)g(to)g(de\014ne)h(the)f(follo)n(wing)f(brac)n(k)n(ets)2839
3425 y Fp(1)2902 3455 y Fr([NP)k(He)f(])g([VP)523 3554
y(r)l(e)l(ckons)h(])g([NP)g(the)f(curr)l(ent)g(ac)l(c)l(ount)g
(de\014cit)h(])g([VP)g(wil)t(l)g(narr)l(ow)g(])g([PP)h(to)e(])h([NP)g
(only)523 3654 y(#)f(1.8)h(bil)t(lion)g(])f([PP)h(in)f(])g([NP)g
(Septemb)l(er)g(])g(.)648 3758 y Fw(The)25 b(data)f(used)i(are)e(dra)n
(wn)g(from)h(the)g(W)-7 b(all)25 b(Street)h(Journal)d(database)h([14],)
h(a)f(large)523 3857 y(syn)n(tactically)32 b(annotated)g(corpus.)f
(Section)i(15)f(to)g(18)g(w)n(ere)g(used)g(as)g(the)h(learning)f(set)
523 3957 y(\(211727)24 b(w)n(ords\))h(and)h(section)g(20)g(as)f(the)i
(test)g(set)f(\(47377)e(w)n(ords\).)i(The)g(most)g(frequen)n(t)523
4057 y Fr(Chunks)k Fw(are)21 b(Noun)i(Phrases)d(\(51\045\),)j(V)-7
b(erb)22 b(Phrases)f(\(20\045\))h(and)g(Prep)r(ositional)f(Phrases)523
4156 y(\(20\045\).)i(The)f(data)h(is)f(constructed)g(b)n(y)h(taking)f
(the)h(w)n(ords,)f(adding)g(the)h Fr(Chunk)32 b Fw(tags)22
b(that)523 4256 y(can)i(b)r(e)g(deduced)g(from)g(the)g(parse)f(trees)g
(in)h(the)h(corpus,)e(and)g(using)h(POS)f(tags)g(obtained)523
4355 y(b)n(y)k(the)i(Brill)e(tagger)f([4],)h(not)h(the)g(\\correct")d
(POS)i(tags)g(dra)n(wn)g(from)g(the)h(corpus.)f(The)523
4455 y(motiv)-5 b(ation)24 b(for)g(this)h(is)f(that)g(it)h(mimics)g
(more)e(closely)g(real-w)n(orld)f(situations.)i(The)h(task)523
4555 y(then)34 b(is)f(to)f(iden)n(tify)i(the)f Fr(Chunk)43
b Fw(tag)32 b(giv)n(en)g(the)i(w)n(ord)e(and)h(its)g(POS)f(tag.)h(The)g
(in)n(ter-)523 4654 y(pretation)c(of)g(the)h Fr(Chunk)38
b Fw(tags)29 b(is)g(as)g(follo)n(ws:)f(for)h(a)g Fr(Chunk)39
b Fw(C,)29 b(B-C)g(will)g(mean)h(Begin)523 4754 y Fr(Chunk)j
Fw(C)24 b(and)g(I-C)f(In)h Fr(Chunk)33 b Fw(C.)24 b(Beginning)f(a)g
(giv)n(en)g Fr(Chunk)33 b Fw(will)24 b(automatically)f(ends)p
523 4839 473 4 v 546 4893 a Fo(1)606 4924 y Fv(NP)j(stands)f(for)i
(Noun)e(Phrase,)h(VP)g(for)g(V)-6 b(erb)25 b(Phrase)h(et)g(PP)g(for)h
(Prep)r(osition.)p eop
%%Page: 3 3
3 2 bop 3367 232 a Fv(3)523 448 y Fw(the)22 b(previous)f(one.)g(In)h
(addition,)g(the)g(sym)n(b)r(ol)f(O)h(means)f(that)h(the)g(giv)n(en)f
(w)n(ord)g(is)g(outside)523 548 y(an)n(y)e Fr(Chunk)p
Fw(.)h(There)f(are)g(man)n(y)g(di\013eren)n(t)h(approac)n(hes)e([19].)h
(Here)g(is)h(a)f(concrete)g(example:)1263 792 y(He)190
b(PRP)23 b(B-NP)1263 892 y(rec)n(k)n(ons)e(VBZ)26 b(B-VP)1263
991 y(the)174 b(DT)75 b(B-NP)1263 1091 y(curren)n(t)27
b(JJ)112 b(I-NP)1402 1190 y(..................)2128 792
y(..................)2006 892 y(billion)23 b(CD)81 b(I-NP)2006
991 y(in)180 b(IN)112 b(B-PP)2006 1091 y(Sept)88 b(NNP)23
b(B-NP)2006 1190 y(.)226 b(.)181 b(O)523 1447 y Fq(2)112
b(Our)38 b(p)s(oin)m(t)e(of)i(view)523 1646 y Fw(The)d(long-term)e
(goal)h(is)g(to)h(build)g(a)f(complete)h(system)f(that)h(com)n(bines)f
(the)h(di\013eren)n(t)523 1746 y(lev)n(els)26 b(of)h(structure:)g(the)g
(lexicon,)g(the)h(POS,)e(the)h Fr(Chunks)p Fw(,)h(and)f(the)g(other)g
(lev)n(els.)f(This)523 1846 y(strategy)f(is)h(used)g(for)g(example)g
(in)g([1].)g(In)h(our)e(approac)n(h,)f(eac)n(h)i(lev)n(el)g(of)g
(represen)n(tation)523 1945 y(is)h(dealt)h(with)f(b)n(y)g
Fr(one)34 b Fw(mo)r(del.)28 b(Here)f(w)n(e)g(assume)f(w)n(e)h(already)f
(ha)n(v)n(e)g(the)i(POS)f(tags)f(and)523 2045 y(concern)h(ourselv)n(es)
e(with)j(building)g(the)g(POS)f(to)h Fr(Chunk)37 b Fw(mo)r(del.)648
2144 y(W)-7 b(e)34 b(will)f(\014rst)h(study)g(the)g(task)f(using)g
(just)h(the)g(POS)f(tags)g(to)g(predict)h(the)g Fr(Chunk)523
2244 y Fw(ones.)25 b(The)h(inclusion)f(of)g(the)h(lexical)f
(information)g(is)g(addressed)g(later)f(on)i(in)f(the)h(pap)r(er.)523
2344 y(POS)c(tagging)f(has)h(b)r(een)g(widely)h(studied)g(in)f(the)h
(literature)f(\(see)g Fr(e.g)31 b Fw([20,)13 b(4,)g(2])22
b(for)g(di\013er-)523 2443 y(en)n(t)j(appro)r(c)n(hes)f(to)h(POS)g
(tagging\).)f(The)h(problem)g(is)g(then)h(to)f(\014nd)g(a)g(mapping)g
(b)r(et)n(w)n(een)523 2543 y(the)j(POS)f(sequence)g(and)g(the)h
Fr(Chunk)37 b Fw(sequence.)648 2742 y(If)29 b Fn(T)781
2754 y Fp(1)p Fm(;n)907 2742 y Fw(\(resp.)f Fn(C)1198
2754 y Fp(1)p Fm(;n)1297 2742 y Fw(\))h(denotes)f(the)h(POS)f(1)g(to)h
Fn(n)p Fw(,)f(\(resp.)h Fr(Chunks)36 b Fw(1)28 b(to)g
Fn(n)p Fw(\),)h(the)g(goal)523 2842 y(is)j(to)g(\014nd)h(the)g(most)f
(probable)f(set)h(of)g Fr(Chunks)39 b Fw(1)32 b(to)g
Fn(n)g Fw(giv)n(en)g(the)g(POS)g(1)g(to)g Fn(n)p Fw(.)g(This)523
2941 y(can)27 b(b)r(e)h(written:)523 3151 y Fn(C)6 b(hunk)s
Fw(\()p Fn(T)861 3163 y Fp(1)p Fm(;n)958 3151 y Fw(\))23
b(=)g(arg)14 b(max)1241 3205 y Fm(C)1289 3213 y Fl(1)p
Fk(;n)1400 3151 y Fn(P)e Fw(\()p Fn(C)1556 3163 y Fp(1)p
Fm(;n)1654 3151 y Fj(j)p Fn(T)1726 3163 y Fp(1)p Fm(;n)1824
3151 y Fw(\))23 b(=)g(arg)14 b(max)2107 3205 y Fm(C)2155
3213 y Fl(1)p Fk(;n)2276 3095 y Fn(P)e Fw(\()p Fn(C)2432
3107 y Fp(1)p Fm(;n)2530 3095 y Fn(;)i(T)2616 3107 y
Fp(1)p Fm(;n)2714 3095 y Fw(\))p 2276 3132 471 4 v 2373
3208 a Fn(P)e Fw(\()p Fn(T)2519 3220 y Fp(1)p Fm(;n)2617
3208 y Fw(\))2779 3151 y(=)23 b(arg)13 b(max)3007 3205
y Fm(C)3055 3213 y Fl(1)p Fk(;n)3166 3151 y Fn(P)f Fw(\()p
Fn(C)3322 3163 y Fp(1)p Fm(;n)3420 3151 y Fn(;)i(T)3506
3163 y Fp(1)p Fm(;n)3603 3151 y Fw(\))648 3385 y(The)k(problem)g(is)h
(then)g(to)f(estimate)h(the)f(join)n(t)h(probabilit)n(y)f
Fn(P)12 b Fw(\()p Fn(C)2684 3397 y Fp(1)p Fm(;n)2782
3385 y Fn(;)i(T)2868 3397 y Fp(1)p Fm(;n)2966 3385 y
Fw(\).)k(A)h(p)r(ossible)523 3485 y(decomp)r(osition)27
b(of)h Fn(P)12 b Fw(\()p Fn(C)1321 3497 y Fp(1)p Fm(;n)1419
3485 y Fn(;)i(T)1505 3497 y Fp(1)p Fm(;n)1602 3485 y
Fw(\))24 b(=)e Fn(P)1798 3497 y Fp(1)p Fm(;n)1924 3485
y Fw(is:)939 3667 y Fn(P)992 3679 y Fp(1)p Fm(;n)1114
3667 y Fw(=)48 b Fn(P)12 b Fw(\()p Fn(T)1373 3679 y Fp(1)1410
3667 y Fw(\))28 b Fn(P)12 b Fw(\()p Fn(C)1626 3679 y
Fp(1)1663 3667 y Fj(j)p Fn(T)1735 3679 y Fp(1)1772 3667
y Fw(\))28 b Fn(P)12 b Fw(\()p Fn(T)1978 3679 y Fp(2)2015
3667 y Fj(j)p Fn(C)2097 3679 y Fp(1)2135 3667 y Fn(;)i(T)2221
3679 y Fp(1)2257 3667 y Fw(\))28 b Fn(P)12 b Fw(\()p
Fn(C)2473 3679 y Fp(2)2511 3667 y Fj(j)p Fn(T)2583 3679
y Fp(1)p Fm(;)p Fp(2)2673 3667 y Fn(;)i(C)2769 3679 y
Fp(1)2806 3667 y Fw(\))19 b Fj(\002)1251 3792 y Fn(:)14
b(:)g(:)k Fj(\002)g Fn(P)12 b Fw(\()p Fn(T)1595 3804
y Fm(n)1640 3792 y Fj(j)p Fn(T)1712 3804 y Fp(1)p Fm(;n)p
Fi(\000)p Fp(1)1894 3792 y Fn(;)i(C)1990 3804 y Fp(1)p
Fm(;n)p Fi(\000)p Fp(1)2174 3792 y Fw(\))28 b Fn(P)12
b Fw(\()p Fn(C)2390 3804 y Fm(n)2435 3792 y Fj(j)p Fn(T)2507
3804 y Fp(1)p Fm(;n)2605 3792 y Fn(;)i(C)2701 3804 y
Fp(1)p Fm(;n)p Fi(\000)p Fp(1)2884 3792 y Fw(\))1114
3917 y(=)1300 3854 y Fh(Q)1379 3875 y Fm(n)1379 3941
y(i)p Fp(=1)1504 3917 y Fn(P)e Fw(\()p Fn(C)1660 3929
y Fm(i)1689 3917 y Fj(j)p Fn(C)1771 3929 y Fp(1)p Fm(;i)p
Fi(\000)p Fp(1)1936 3917 y Fn(;)i(T)2022 3929 y Fp(1)p
Fm(;i)2102 3917 y Fw(\))28 b Fn(P)12 b Fw(\()p Fn(T)2308
3929 y Fm(i)2335 3917 y Fj(j)p Fn(T)2407 3929 y Fp(1)p
Fm(;i)p Fi(\000)p Fp(1)2572 3917 y Fn(;)i(C)2668 3929
y Fp(1)p Fm(;i)p Fi(\000)p Fp(1)2834 3917 y Fw(\))1114
4041 y(=)1201 3979 y Fh(Q)1280 3999 y Fm(n)1280 4066
y(i)p Fp(=1)1405 4041 y Fn(P)e Fw(\()p Fn(C)1561 4053
y Fm(i)1590 4041 y Fj(j)p Fn(C)1672 4053 y Fp(1)p Fm(;i)p
Fi(\000)p Fp(1)1837 4041 y Fn(;)i(T)1923 4053 y Fp(1)p
Fm(;i)p Fi(\000)p Fp(1)2088 4041 y Fn(;)g(T)2174 4053
y Fm(i)2201 4041 y Fw(\))28 b Fn(P)12 b Fw(\()p Fn(T)2407
4053 y Fm(i)2434 4041 y Fj(j)p Fn(C)2516 4053 y Fp(1)p
Fm(;i)p Fi(\000)p Fp(1)2682 4041 y Fn(;)i(T)2768 4053
y Fp(1)p Fm(;i)p Fi(\000)p Fp(1)2933 4041 y Fw(\))1114
4185 y(=)1265 4123 y Fh(Q)1343 4143 y Fm(n)1343 4210
y(i)p Fp(=1)1478 4143 y Fm(P)9 b Fp(\()p Fm(C)1603 4151
y Fk(i)1629 4143 y Fm(;T)1688 4151 y Fk(i)1715 4143 y
Fi(j)p Fm(C)1783 4151 y Fl(1)p Fk(;i)p Fg(\000)p Fl(1)1929
4143 y Fm(;T)1988 4151 y Fl(1)p Fk(;i)p Fg(\000)p Fl(1)2135
4143 y Fp(\))p 1478 4166 683 4 v 1528 4214 a Fm(P)g Fp(\()p
Fm(T)1644 4222 y Fk(i)1671 4214 y Fi(j)p Fm(C)1739 4222
y Fl(1)p Fk(;i)p Fg(\000)p Fl(1)p Fk(;T)1935 4235 y Fl(1)p
Fk(;i)p Fg(\000)p Fl(1)2085 4214 y Fp(\))2198 4185 y
Fn(P)j Fw(\()p Fn(T)2344 4197 y Fm(i)2371 4185 y Fj(j)p
Fn(C)2453 4197 y Fp(1)p Fm(;i)p Fi(\000)p Fp(1)2619 4185
y Fn(;)i(T)2705 4197 y Fp(1)p Fm(;i)p Fi(\000)p Fp(1)2870
4185 y Fw(\))1114 4343 y(=)1567 4281 y Fh(Q)1646 4302
y Fm(n)1646 4368 y(i)p Fp(=1)1771 4343 y Fn(P)e Fw(\()p
Fn(C)1927 4355 y Fm(i)1955 4343 y Fn(;)i(T)2041 4355
y Fm(i)2069 4343 y Fj(j)p Fn(C)2151 4355 y Fp(1)p Fm(;i)p
Fi(\000)p Fp(1)2316 4343 y Fn(;)g(T)2402 4355 y Fp(1)p
Fm(;i)p Fi(\000)p Fp(1)2567 4343 y Fw(\))648 4526 y(W)-7
b(e)37 b(therefore)f(aim)h(at)g(\014nding)g(the)h(set)f(of)g
Fr(Chunks)44 b Fw(suc)n(h)37 b(that)g(the)g(pairs)f(\(POS,)523
4625 y Fr(Chunk)9 b Fw(\))35 b(are)f(the)h(most)f(probable)g(giv)n(en)g
(the)h(history)-7 b(.)34 b(W)-7 b(e)35 b(can)f(denote)h(eac)n(h)e(pair)
h(b)n(y)523 4725 y(joining)27 b(the)h(POS)f(and)h(the)g
Fr(Chunks)34 b Fw(in)28 b(a)f(single)h(sym)n(b)r(ol.)648
4825 y(If)g(w)n(e)g(use)f(the)i("+")d(sym)n(b)r(ol)i(as)f(the)i
(separator,)c(our)i(learning)g(data)h(will)g(lo)r(ok)f(lik)n(e)h(:)523
4924 y Ff(PRP+B-NP)40 b(VBZ+B-VP)h(DT+B-NP)f(JJ+I-NP)h(...CD+I-NP)e
(IN+B-PP)i(NNP+B-NP)f(.+O)p eop
%%Page: 4 4
4 3 bop 523 232 a Fv(4)648 448 y Fw(Man)n(y)19 b(mo)r(dels)i(exist)f
(to)h(estimate)f(the)h(probabilit)n(y)f(of)g(a)h(sym)n(b)r(ol)f(giv)n
(en)g(a)g(history)-7 b(.)20 b(An)523 548 y(example)25
b(is)g(the)h(n-gram)e(mo)r(del)h(and)g(all)g(the)h(impro)n(v)n(emen)n
(ts)d(applied)j(to)f(it:)h(smo)r(othing)523 648 y(tec)n(hniques)h
(\(see)h([6])f(for)g(a)g(recen)n(t)g(surv)n(ey\))g(and)g(v)-5
b(ariable)27 b(memory)g(mo)r(dels)g([20,)13 b(16].)648
747 y(Another)32 b(approac)n(h)f(w)n(ould)h(b)r(e)h(to)f(infer)h
(Hidden)g(Mark)n(o)n(v)e(Mo)r(dels)h([21])g(or)f(proba-)523
847 y(bilistic)h(automata)f([11,)13 b(5,)g(17,)g(22].)31
b(Among)g(these)h(tec)n(hniques)f(only)g(four)g(infer)h(mo)r(dels)523
946 y(in)c(whic)n(h)f(the)h(size)f(of)g(the)h(dep)r(endency)g(is)f(not)
h(b)r(ound)f([21,)13 b(5,)h(22].)26 b(The)i(\014rst)f(one)g(is)g(to)r
(o)523 1046 y(computationally)32 b(exp)r(ensiv)n(e)g(to)g(b)r(e)h
(feasible)g(with)g(our)f(data.)g(The)g(others)g(ha)n(v)n(e)g(b)r(een)
523 1146 y(used)e(in)h(the)g(con)n(text)f(of)g(natural)f(language)g(mo)
r(deling.)h(W)-7 b(e)31 b(ha)n(v)n(e)e(applied)h(these)h(algo-)523
1245 y(rithms)f(to)g(this)g(task)f(but)h(only)g(the)g(b)r(est)g(p)r
(erforming)f(one)h(\(namely)f(DDSM)i([22]\))f(will)523
1345 y(b)r(e)23 b(presen)n(ted)e(here.)h(Reassuringly)-7
b(,)21 b(the)h(algorithm)g(that)g(p)r(erforms)g(b)r(est)g(on)g(the)h
(natural)523 1445 y(language)30 b(mo)r(deling)h(task)g(is)g(also)f(the)
i(one)f(that)h(p)r(erforms)e(b)r(est)i(on)f(the)h(noun)f(phrase)523
1544 y(c)n(h)n(unking)c(task.)648 1644 y(W)-7 b(e)23
b(no)n(w)f(presen)n(t)h(formally)f(the)h(mo)r(del)g(follo)n(w)n(ed)f(b)
n(y)h(the)g(description)g(of)g(the)g(DDSM)523 1743 y(algorithm.)523
2008 y Fq(3)112 b(The)38 b(learning)e(algorithm)523 2207
y Fw(W)-7 b(e)28 b(\014rst)f(presen)n(t)f(the)i(formal)e(de\014nition)i
(of)f(the)g(mo)r(del)h(and)f(the)g(inference)g(algorithm.)648
2406 y(A)18 b Fr(Pr)l(ob)l(abilistic)24 b(Finite)e(A)n(utomaton)i
Fw(\(PF)-9 b(A\))19 b(A)g(is)g(a)f(5-tuple)g(\()p Fn(\006)5
b Fw(,)28 b Fn(Q)2810 2376 y Fm(A)2863 2406 y Fw(,)g
Fn(Q)2980 2376 y Fm(I)3018 2357 y(A)3072 2406 y Fw(,)g
Fn(\030)3163 2376 y Fm(A)3217 2406 y Fn(;)14 b(F)3319
2376 y Fm(A)3373 2406 y Fw(\))523 2524 y(where)25 b Fn(\006)30
b Fw(is)25 b(the)h(alphab)r(et)f(\(a)g(\014nite)h(set)f(of)h(sym)n(b)r
(ols\),)f Fn(Q)2384 2494 y Fm(A)2463 2524 y Fw(is)g(the)h
Fr(set)h(of)h(states)p Fw(,)d Fn(Q)3225 2494 y Fm(I)3263
2475 y(A)3340 2524 y Fj(\022)523 2624 y Fn(Q)589 2594
y Fm(A)676 2624 y Fw(is)33 b(the)g Fr(initial)43 b Fw(states,)33
b Fn(\030)1474 2594 y Fm(A)1561 2624 y Fw(is)g(a)f(m)n(ultiset)i(of)f
(probabilistic)f(transitions)g Fn(t)g Fj(2)h Fn(Q)3265
2594 y Fm(A)3340 2624 y Fj(\002)523 2724 y Fn(\006)23
b Fj(\002)18 b Fn(Q)760 2694 y Fm(A)832 2724 y Fj(\002)g
Fw(\(0,1].)27 b Fn(F)1192 2694 y Fm(A)1246 2724 y Fw(:)h
Fn(Q)1363 2694 y Fm(A)1440 2724 y Fj(!)23 b Fw([0,1])k(is)g(the)h
(\\end)g(of)f(parsing")f(probabilistic)h(function.)648
2823 y(W)-7 b(e)24 b(require)f(that)h(for)f(all)h(states)f
Fn(q)s Fw(,)1793 2761 y Fh(P)1881 2848 y Fm(\033)1939
2823 y Fn(\030)1979 2793 y Fm(A)2033 2823 y Fw(\()p Fn(q)s(;)14
b(\033)n(;)g(q)2264 2793 y Fi(0)2289 2823 y Fw(\))d(+)g
Fn(F)2473 2793 y Fm(A)2527 2823 y Fw(\()p Fn(q)s Fw(\))23
b(=)g(1.)g(W)-7 b(e)25 b(assume)e(that)523 2923 y(all)36
b(states)f(can)h(generate)e(at)i(least)f(one)h(string)f(with)h(a)g
(strictly)f(p)r(ositiv)n(e)h(probabilit)n(y)-7 b(.)523
3023 y(This)28 b(then)g(de\014nes)f(a)g(distribution)h(o)n(v)n(er)e
Fn(\006)1944 2992 y Fi(\003)1982 3023 y Fw(.)648 3122
y(W)-7 b(e)28 b(no)n(w)f(de\014ne)g Fn(\016)1243 3092
y Fm(A)1325 3122 y Fw(and)h Fn(\015)1535 3092 y Fm(A)1616
3122 y Fw(from)f Fn(Q)1878 3092 y Fm(A)1950 3122 y Fj(\002)18
b Fn(\006)33 b Fw(to)27 b Fn(Q)2298 3092 y Fm(A)2379
3122 y Fw(and)h(]0)p Fn(;)14 b Fw(1])27 b(resp)r(ectiv)n(ely:)1247
3304 y Fn(\016)1287 3274 y Fm(A)1341 3304 y Fw(\()p Fn(q)1410
3316 y Fm(i)1438 3304 y Fn(;)14 b(x)p Fw(\))31 b(=)23
b Fn(q)1710 3316 y Fm(j)1768 3304 y Fj(2)g Fn(Q)1912
3274 y Fm(A)1989 3304 y Fw(:)51 b Fn(\030)2103 3274 y
Fm(A)2157 3304 y Fw(\()p Fn(q)2226 3316 y Fm(i)2254 3304
y Fn(;)14 b(x;)g(q)2412 3316 y Fm(j)2448 3304 y Fw(\)exists)1247
3404 y Fn(\015)1295 3374 y Fm(A)1348 3404 y Fw(\()p Fn(q)1417
3416 y Fm(i)1445 3404 y Fn(;)g(x)p Fw(\))24 b(=)f Fn(p)g
Fw(:)g Fj(9)p Fn(q)1867 3416 y Fm(j)1925 3404 y Fw(:)51
b Fn(\030)2039 3374 y Fm(A)2093 3404 y Fw(\()p Fn(q)2162
3416 y Fm(i)2190 3404 y Fn(;)14 b(x;)g(q)2348 3416 y
Fm(j)2383 3404 y Fw(\))24 b(=)e Fn(p)3299 3304 y Fw(\(1\))648
3582 y(Let)30 b Fn(I)835 3594 y Fp(+)921 3582 y Fw(denote)g(a)g
Fr(p)l(ositive)k(sample)p Fw(,)d Fr(i.e.)h Fw(a)e(set)h(of)f(strings)f
(b)r(elonging)h(to)g(the)h(prob-)523 3681 y(abilistic)i(language)e(w)n
(e)h(are)g(trying)g(to)g(mo)r(del.)h(Let)g Fn(P)12 b(T)g(A)p
Fw(\()p Fn(I)2503 3693 y Fp(+)2558 3681 y Fw(\))33 b(denote)f(the)i
Fr(pr)l(e\014x)f(tr)l(e)l(e)523 3781 y(ac)l(c)l(eptor)h
Fw(built)25 b(from)f(a)g(p)r(ositiv)n(e)g(sample)g Fn(I)1920
3793 y Fp(+)1976 3781 y Fw(.)g(The)h(pre\014x)f(tree)g(acceptor)f(is)h
(an)g(automa-)523 3881 y(ton)31 b(that)h(only)f(accepts)g(the)h
(strings)e(in)i(the)g(sample)f(and)g(in)h(whic)n(h)f(common)g
(pre\014xes)523 3980 y(are)f(merged)g(together)g(resulting)g(in)h(a)g
(tree-shap)r(ed)f(automaton.)g(Let)h Fn(P)12 b(P)g(T)g(A)p
Fw(\()p Fn(I)3176 3992 y Fp(+)3231 3980 y Fw(\))31 b(de-)523
4080 y(note)c(the)h Fr(pr)l(ob)l(abilistic)j(pr)l(e\014x)e(tr)l(e)l(e)g
(ac)l(c)l(eptor)p Fw(.)f(It)g(is)f(the)g(probabilistic)g(extension)g
(of)g(the)523 4180 y Fn(P)12 b(T)g(A)p Fw(\()p Fn(I)779
4192 y Fp(+)834 4180 y Fw(\))35 b(in)f(whic)n(h)g(eac)n(h)f(transition)
h(has)f(a)h(probabilit)n(y)f(related)h(to)g(the)g(n)n(um)n(b)r(er)g(of)
523 4279 y(times)20 b(it)h(is)f(used)g(while)g(generating,)f(or)g
(equiv)-5 b(alen)n(tly)19 b(parsing,)g(the)i(p)r(ositiv)n(e)e(sample.)h
(Let)523 4379 y Fn(C)6 b Fw(\()p Fn(q)s Fw(\))21 b(denote)f(the)h(coun)
n(t)f(of)g(state)g Fn(q)s Fw(,)g(that)g(is,)g(the)h(n)n(um)n(b)r(er)f
(of)g(times)g(the)h(state)f Fn(q)j Fw(w)n(as)c(used)523
4478 y(while)31 b(generating)d Fn(I)1187 4490 y Fp(+)1274
4478 y Fw(from)i Fn(P)12 b(P)g(T)g(A)p Fw(\()p Fn(I)1794
4490 y Fp(+)1848 4478 y Fw(\).)31 b(Let)g Fn(C)6 b Fw(\()p
Fn(q)s(;)14 b Fw(#\))31 b(denote)g(the)f(n)n(um)n(b)r(er)g(of)h(times)
523 4578 y(a)g(string)f(of)h Fn(I)969 4590 y Fp(+)1055
4578 y Fw(ended)g(on)g Fn(q)s Fw(.)g(Let)g Fn(C)6 b Fw(\()p
Fn(q)s(;)14 b(a)p Fw(\))32 b(denote)e(the)i(coun)n(t)e(of)h(the)g
(transition)g(\()p Fn(q)s(;)14 b(a)p Fw(\))523 4678 y(in)36
b Fn(P)12 b(P)g(T)g(A)p Fw(\()p Fn(I)949 4690 y Fp(+)1003
4678 y Fw(\).)36 b(The)f Fn(P)12 b(P)g(T)g(A)p Fw(\()p
Fn(I)1593 4690 y Fp(+)1648 4678 y Fw(\))36 b(is)f(the)h(maximal)e(lik)n
(eliho)r(o)r(d)h(estimate)g(built)h(from)523 4811 y Fn(I)559
4823 y Fp(+)615 4811 y Fw(.)27 b(In)g(particular,)e(for)i
Fn(P)12 b(P)g(T)g(A)p Fw(\()p Fn(I)1621 4823 y Fp(+)1676
4811 y Fw(\))27 b(the)g(probabilit)n(y)f(estimates)g(are)2807
4747 y Fi(^)2803 4800 y Fn(\015)2874 4811 y Fw(\()p Fn(q)s(;)14
b(a)p Fw(\))23 b(=)3180 4770 y Fm(C)t Fp(\()p Fm(q)r(;a)p
Fp(\))p 3180 4792 192 4 v 3208 4839 a Fm(C)t Fp(\()p
Fm(q)r Fp(\))3382 4811 y Fw(,)523 4924 y Fn(a)g Fj(2)g
Fn(\006)g Fj([)c(f)p Fw(#)p Fj(g)p Fw(.)p eop
%%Page: 5 5
5 4 bop 3367 232 a Fv(5)644 504 y Fu(Fig.)15 b(1.)25
b Fv(PPT)-6 b(A)26 b(built)f(with)h Fe(I)6 b Fv(+)25
b(=)g Fd(f)p Fv(aac,)p Fe(\025)p Fv(,)j(aac,)f(ab)r(d,)e(aac,)i(aac,)g
(ab)r(d,)f(ab)r(d,)g(a,)g(ab,)g Fe(\025)p Fd(g)1006 1168
y @beginspecial 0 @llx 0 @lly 567 @urx 191 @ury 2268
@rwi @setspecial
%%BeginDocument: ../../Graphiques/FIGURES/PTA.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: PTA.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Thu Sep 20 14:31:23 2001
%%For: thollard@issun17 (Franck Thollard)
%Magnification: 1.05
%%Orientation: Portrait
%%BoundingBox: 0 0 567 191
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-11.0 208.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06299 0.06299 sc
7.500 slw
% Polyline
n 4425 1661 m 4275 1661 4275 2010 150 arcto 4 {pop} repeat
  4275 2160 5311 2160 150 arcto 4 {pop} repeat
  5461 2160 5461 1811 150 arcto 4 {pop} repeat
  5461 1661 4425 1661 150 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
gs  clippath
4001 1552 m 4070 1654 l 3961 1596 l 4081 1705 l 4121 1661 l  cp clip
n 3595 1223 m 4090 1673 l gs col-1 s gr gr

% arrowhead
n 4001 1552 m 4070 1654 l 3961 1596 l  col-1 s
/Times-Roman ff 255.00 scf sf
4547 1984 m
gs 1 -1 sc (3 \(0/4\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
2971 1623 m
gs 1 -1 sc (a \(4/9\)) col-1 sh gr
% Polyline
gs  clippath
447 953 m 569 931 l 472 1008 l 620 942 l 596 887 l  cp clip
n 189 1101 m 594 921 l gs col-1 s gr gr

% arrowhead
n 447 953 m 569 931 l 472 1008 l  col-1 s
% Polyline
n 3030 491 m 2880 491 2880 840 150 arcto 4 {pop} repeat
  2880 990 3916 990 150 arcto 4 {pop} repeat
  4066 990 4066 641 150 arcto 4 {pop} repeat
  4066 491 3030 491 150 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
gs  clippath
4985 690 m 5105 720 l 4985 750 l 5147 750 l 5147 690 l  cp clip
n 4277 720 m 5132 720 l gs col-1 s gr gr

% arrowhead
n 4985 690 m 5105 720 l 4985 750 l  col-1 s
% Polyline
n 5624 446 m 5474 446 5474 795 150 arcto 4 {pop} repeat
  5474 945 6510 945 150 arcto 4 {pop} repeat
  6660 945 6660 596 150 arcto 4 {pop} repeat
  6660 446 5624 446 150 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
gs  clippath
6333 1860 m 6453 1890 l 6333 1920 l 6495 1920 l 6495 1860 l  cp clip
n 5625 1890 m 6480 1890 l gs col-1 s gr gr

% arrowhead
n 6333 1860 m 6453 1890 l 6333 1920 l  col-1 s
% Polyline
n 854 446 m 704 446 704 795 150 arcto 4 {pop} repeat
  704 945 1740 945 150 arcto 4 {pop} repeat
  1890 945 1890 596 150 arcto 4 {pop} repeat
  1890 446 854 446 150 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
gs  clippath
2644 690 m 2764 720 l 2644 750 l 2806 750 l 2806 690 l  cp clip
n 1936 720 m 2791 720 l gs col-1 s gr gr

% arrowhead
n 2644 690 m 2764 720 l 2644 750 l  col-1 s
% Polyline
gs  clippath
7638 690 m 7758 720 l 7638 750 l 7800 750 l 7800 690 l  cp clip
n 6930 720 m 7785 720 l gs col-1 s gr gr

% arrowhead
n 7638 690 m 7758 720 l 7638 750 l  col-1 s
% Polyline
n 8115 401 m 7965 401 7965 750 150 arcto 4 {pop} repeat
  7965 900 9001 900 150 arcto 4 {pop} repeat
  9151 900 9151 551 150 arcto 4 {pop} repeat
  9151 401 8115 401 150 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
n 6720 1661 m 6570 1661 6570 2010 150 arcto 4 {pop} repeat
  6570 2160 7606 2160 150 arcto 4 {pop} repeat
  7756 2160 7756 1811 150 arcto 4 {pop} repeat
  7756 1661 6720 1661 150 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
n 6630 2787 m 6480 2787 6480 3136 150 arcto 4 {pop} repeat
  6480 3286 7516 3286 150 arcto 4 {pop} repeat
  7666 3286 7666 2937 150 arcto 4 {pop} repeat
  7666 2787 6630 2787 150 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
gs  clippath
6206 2678 m 6275 2780 l 6166 2722 l 6286 2831 l 6326 2787 l  cp clip
n 5800 2349 m 6295 2799 l gs col-1 s gr gr

% arrowhead
n 6206 2678 m 6275 2780 l 6166 2722 l  col-1 s
/Times-Roman ff 255.00 scf sf
2026 452 m
gs 1 -1 sc (a \(9/11\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
7021 542 m
gs 1 -1 sc (c \(3/4\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
856 767 m
gs 1 -1 sc (0 \(2/11\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
3061 812 m
gs 1 -1 sc (1 \(1/9\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
5716 767 m
gs 1 -1 sc (2 \(1/4\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
4321 542 m
gs 1 -1 sc (b \(4/9\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
8236 722 m
gs 1 -1 sc (4 \(3/3\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
5716 1712 m
gs 1 -1 sc (c \(3/4\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
5176 2749 m
gs 1 -1 sc (a \(1/4\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
6752 3110 m
gs 1 -1 sc (3 \(1/1\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
6841 1982 m
gs 1 -1 sc (5 \(3/3\)) col-1 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 648 1310 a Fw(Figure)h(1)g(exhibits)h(a)f
Fn(P)12 b(P)g(T)g(A)p Fw(\()p Fn(I)7 b Fw(+\).)648 1410
y(W)-7 b(e)38 b(no)n(w)f(presen)n(t)g(the)i(second)e(to)r(ol)h(used)f
(b)n(y)h(the)g(generic)f(algorithm:)g(the)h(state)523
1510 y(merging)c(op)r(eration.)g(This)h(op)r(eration)g(pro)n(vides)e(t)
n(w)n(o)i(mo)r(di\014cations)f(to)i(the)f(automa-)523
1609 y(ton:)j(\(i\))h(it)f(mo)r(di\014es)g(the)h(structure)e
(\(\014gure)h(2,)f(left)i(part\))f(and)g(\(ii\))h(the)f(probabilit)n(y)
523 1709 y(distribution)33 b(\(\014gure)f(2,)h(righ)n(t)f(part\).)g(It)
h(applies)g(to)f(t)n(w)n(o)g(states.)h(Merging)e(t)n(w)n(o)h(states)523
1808 y(can)d(lead)h(to)g(non-determinism.)f(The)h(states)f(that)h
(create)f(non)h(determinism)g(are)e(then)523 1908 y(recursiv)n(ely)f
(merged.)i(When)h(state)f Fn(q)j Fw(results)d(from)f(the)i(merging)e
(of)h(the)h(states)f Fn(q)3219 1878 y Fi(0)3271 1908
y Fw(and)523 2008 y Fn(q)563 1978 y Fi(00)606 2008 y
Fw(,)22 b(the)h(follo)n(wing)f(equalit)n(y)g(m)n(ust)h(hold)f(in)h
(order)e(to)i(k)n(eep)f(an)g(o)n(v)n(erall)f(consisten)n(t)h(mo)r(del:)
1250 2189 y Fn(\015)5 b Fw(\()p Fn(q)s(;)14 b(a)p Fw(\))23
b(=)1604 2149 y Fm(C)t Fp(\()p Fm(q)1714 2124 y Fg(0)1737
2149 y Fm(;a)p Fp(\)+)p Fm(C)t Fp(\()p Fm(q)1980 2124
y Fg(00)2020 2149 y Fm(;a)p Fp(\))p 1604 2170 498 4 v
1660 2218 a Fm(C)t Fp(\()p Fm(q)1770 2201 y Fg(0)1793
2218 y Fp(\)+)p Fm(C)t Fp(\()p Fm(q)1980 2201 y Fg(00)2020
2218 y Fp(\))2135 2189 y Fn(;)14 b Fj(8)p Fn(a)22 b Fj(2)i
Fn(\006)f Fj([)18 b(f)p Fw(#)p Fj(g)1577 2383 y Fu(Fig.)d(2.)25
b Fv(Merging)i(states.)p 598 2409 2732 4 v 598 3794 4
1386 v 652 2675 a
 currentpoint currentpoint translate .25 .25 scale neg exch neg exch
translate
 652 2675 a @beginspecial 36 @llx 36
@lly 621 @urx 152 @ury 5850 @rwi @setspecial
%%BeginDocument: ../../Graphiques/FIGURES/fig5.ps
%!PS-Adobe-2.0
%%Creator: dot version 92c (09-01-94)
%%For: (miclet) Miclet Laurent
%%Title: G
%%Pages: (atend)
%%BoundingBox: 36 36 621 152
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
%%EndSetup
%%Page: 1 (atend)
%%PageBoundingBox: 36 36 621 152
gsave
35 35 586 152 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	init
gsave 10 dict begin
bold
0.000 0.000 1.000 nodecolor
7 55 7 7 ellipse_path
stroke
end grestore

%	0
gsave 10 dict begin
bold
76 55 20 20 ellipse_path
stroke
%76 55 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
76 56 moveto (0) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	init -> 0
gsave 10 dict begin
bold
newpath 14 55 moveto
22 55 33 55 45 55 curveto
stroke
52 55 180.00 10.00 5.00 arrowhead
end grestore

%	0 -> 0
gsave 10 dict begin
bold
newpath 92 73 moveto
97 85 92 97 76 97 curveto
63 97 58 90 58 81 curveto
stroke
60 73 104.04 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
76 111 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
bold
192 55 20 20 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
192 56 moveto (2) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
gsave 10 dict begin
bold
newpath 100 55 moveto
118 55 144 55 164 55 curveto
stroke
172 55 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
136 69 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 2
gsave 10 dict begin
bold
newpath 205 70 moveto
210 82 205 93 192 93 curveto
181 93 176 85 177 76 curveto
stroke
179 70 108.43 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
192 107 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	7
gsave 10 dict begin
bold
308 86 20 20 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
308 87 moveto (7) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 7
gsave 10 dict begin
bold
newpath 211 60 moveto
230 65 259 73 280 79 curveto
stroke
288 81 -165.96 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
248 89 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	4
gsave 10 dict begin
bold
308 24 20 20 ellipse_path
stroke
%308 24 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
308 25 moveto (4) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 4
gsave 10 dict begin
bold
newpath 209 44 moveto
216 39 224 35 230 33 curveto
242 30 260 28 275 27 curveto
stroke
284 26 173.66 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
248 47 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	9
gsave 10 dict begin
bold
428 86 20 20 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
428 87 moveto (9) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	7 -> 9
gsave 10 dict begin
bold
newpath 328 86 moveto
348 86 378 86 400 86 curveto
stroke
408 86 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
368 100 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	6
gsave 10 dict begin
bold
428 24 20 20 ellipse_path
stroke
%428 24 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
428 25 moveto (6) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	4 -> 6
gsave 10 dict begin
bold
newpath 332 24 moveto
350 24 376 24 396 24 curveto
stroke
404 24 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
368 38 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	10
gsave 10 dict begin
bold
554 86 25 25 ellipse_path
stroke
%554 86 29 30 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
554 87 moveto (10) 18 18.00 -0.50 alignedtext
end grestore
end grestore

%	9 -> 10
gsave 10 dict begin
bold
newpath 448 86 moveto
467 86 494 86 515 86 curveto
stroke
524 86 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
488 100 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 652 2675 a
 currentpoint currentpoint translate 1 .25 div 1 .25 div scale neg
exch neg exch translate
 652 2675 a 92 x Fv(Merge)g(of)f(7)g(and)f(2.)
652 3050 y
 currentpoint currentpoint translate .25 .25 scale neg exch neg exch
translate
 652 3050 a @beginspecial 36 @llx 36 @lly 501
@urx 161 @ury 4650 @rwi @setspecial
%%BeginDocument: ../../Graphiques/FIGURES/fig6.ps
%!PS-Adobe-2.0
%%Creator: dot version 92c (09-01-94)
%%For: (miclet) Miclet Laurent
%%Title: G
%%Pages: (atend)
%%BoundingBox: 36 36 501 161
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
%%EndSetup
%%Page: 1 (atend)
%%PageBoundingBox: 36 36 501 161
gsave
35 35 466 161 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	init
gsave 10 dict begin
bold
0.000 0.000 1.000 nodecolor
7 59 7 7 ellipse_path
stroke
end grestore

%	0
gsave 10 dict begin
bold
76 59 20 20 ellipse_path
stroke
%76 59 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
76 60 moveto (0) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	init -> 0
gsave 10 dict begin
bold
newpath 14 59 moveto
22 59 33 59 45 59 curveto
stroke
52 59 180.00 10.00 5.00 arrowhead
end grestore

%	0 -> 0
gsave 10 dict begin
bold
newpath 92 77 moveto
97 89 92 101 76 101 curveto
63 101 58 94 58 85 curveto
stroke
60 77 104.04 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
76 115 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
bold
192 59 20 20 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
192 60 moveto (2) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
gsave 10 dict begin
bold
newpath 100 59 moveto
118 59 144 59 164 59 curveto
stroke
172 59 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
136 73 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 2
gsave 10 dict begin
bold
newpath 205 74 moveto
210 86 205 97 192 97 curveto
182 97 177 91 177 82 curveto
stroke
179 74 104.04 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
192 111 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	9
gsave 10 dict begin
bold
308 92 20 20 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
308 93 moveto (9) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 9
gsave 10 dict begin
bold
newpath 211 65 moveto
230 70 259 78 280 84 curveto
stroke
288 86 -165.96 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
248 94 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	4
gsave 10 dict begin
bold
308 26 20 20 ellipse_path
stroke
%308 26 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
308 27 moveto (4) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 4
gsave 10 dict begin
bold
newpath 208 47 moveto
216 43 224 38 230 36 curveto
242 33 260 30 275 29 curveto
stroke
284 28 173.66 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
248 50 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	10
gsave 10 dict begin
bold
434 95 25 25 ellipse_path
stroke
%434 95 29 30 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
434 96 moveto (10) 18 18.00 -0.50 alignedtext
end grestore
end grestore

%	9 -> 10
gsave 10 dict begin
bold
newpath 328 92 moveto
347 93 374 93 395 94 curveto
stroke
404 94 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
368 107 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	6
gsave 10 dict begin
bold
434 24 20 20 ellipse_path
stroke
%434 24 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
434 25 moveto (6) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	4 -> 6
gsave 10 dict begin
bold
newpath 332 26 moveto
352 25 380 25 402 24 curveto
stroke
410 24 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
368 39 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 652 3050 a
 currentpoint currentpoint translate 1 .25 div 1 .25 div scale neg
exch neg exch translate
 652 3050 a 91 x Fv(Merge)i(of)f(9)g(and)f(4.)
652 3424 y
 currentpoint currentpoint translate .25 .25 scale neg exch neg exch
translate
 652 3424 a @beginspecial 36 @llx 36 @lly 501
@urx 161 @ury 4650 @rwi @setspecial
%%BeginDocument: ../../Graphiques/FIGURES/fig7.ps
%!PS-Adobe-2.0
%%Creator: dot version 92c (09-01-94)
%%For: (miclet) Miclet Laurent
%%Title: G
%%Pages: (atend)
%%BoundingBox: 36 36 501 161
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
%%EndSetup
%%Page: 1 (atend)
%%PageBoundingBox: 36 36 501 161
gsave
35 35 466 161 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	init
gsave 10 dict begin
bold
0.000 0.000 1.000 nodecolor
7 59 7 7 ellipse_path
stroke
end grestore

%	0
gsave 10 dict begin
bold
76 59 20 20 ellipse_path
stroke
%76 59 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
76 60 moveto (0) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	init -> 0
gsave 10 dict begin
bold
newpath 14 59 moveto
22 59 33 59 45 59 curveto
stroke
52 59 180.00 10.00 5.00 arrowhead
end grestore

%	0 -> 0
gsave 10 dict begin
bold
newpath 92 77 moveto
97 89 92 101 76 101 curveto
63 101 58 94 58 85 curveto
stroke
60 77 104.04 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
76 115 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
bold
192 59 20 20 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
192 60 moveto (2) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
gsave 10 dict begin
bold
newpath 100 59 moveto
118 59 144 59 164 59 curveto
stroke
172 59 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
136 73 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 2
gsave 10 dict begin
bold
newpath 205 74 moveto
210 86 205 97 192 97 curveto
182 97 177 91 177 82 curveto
stroke
179 74 104.04 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
192 111 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	4
gsave 10 dict begin
bold
308 59 20 20 ellipse_path
stroke
%308 59 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
308 60 moveto (4) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 4
gsave 10 dict begin
bold
newpath 212 59 moveto
229 59 255 59 276 59 curveto
stroke
284 59 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
248 73 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	10
gsave 10 dict begin
bold
434 95 25 25 ellipse_path
stroke
%434 95 29 30 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
434 96 moveto (10) 18 18.00 -0.50 alignedtext
end grestore
end grestore

%	4 -> 10
gsave 10 dict begin
bold
newpath 330 69 moveto
337 72 345 75 350 77 curveto
363 80 380 84 396 87 curveto
stroke
405 89 -167.47 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
368 99 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	6
gsave 10 dict begin
bold
434 24 20 20 ellipse_path
stroke
%434 24 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
434 25 moveto (6) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	4 -> 6
gsave 10 dict begin
bold
newpath 331 50 moveto
338 48 345 45 350 44 curveto
364 40 385 35 402 31 curveto
stroke
410 29 165.96 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
368 58 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 652 3424 a
 currentpoint currentpoint translate 1 .25 div 1 .25 div scale neg
exch neg exch translate
 652 3424 a 92 x Fv(Merge)i(of)f(10)h(and)e(6.)
652 3678 y
 currentpoint currentpoint translate .25 .25 scale neg exch neg exch
translate
 652 3678 a @beginspecial 36 @llx 36 @lly 489
@urx 103 @ury 4530 @rwi @setspecial
%%BeginDocument: ../../Graphiques/FIGURES/fig8.ps
%!PS-Adobe-2.0
%%Creator: dot version 92c (12-21-95)
%%For: (pdupont) Pierre Dupont (E.Vidal) 
%%Title: G
%%Pages: (atend)
%%BoundingBox: 36 36 489 103
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

/arrowhead {
	/arrowwidth exch def
	/arrowlength exch def
	gsave
		3 1 roll
		translate
			rotate
			newpath
			arrowlength arrowwidth 2 div moveto
			0 0 lineto
			arrowlength arrowwidth -2 div lineto
		closepath fill
		stroke
	grestore
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
% /arrowlength 10 def
% /arrowwidth 5 def
%%EndSetup
%%Page: 1 (atend)
%%PageBoundingBox: 36 36 489 103
gsave
35 35 454 103 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	init
gsave 10 dict begin
bold
0.000 0.000 1.000 nodecolor
7 24 7 7 ellipse_path
stroke
end grestore

%	0
gsave 10 dict begin
bold
76 24 20 20 ellipse_path
stroke
%76 24 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
76 25 moveto (0) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	init -> 0
gsave 10 dict begin
bold
newpath 14 24 moveto
22 24 33 24 45 24 curveto
stroke
52 24 180.00 10.00 5.00 arrowhead
end grestore

%	0 -> 0
gsave 10 dict begin
bold
newpath 92 42 moveto
97 54 92 66 76 66 curveto
63 66 58 59 58 50 curveto
stroke
60 42 104.04 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
76 80 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
bold
192 24 20 20 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
192 25 moveto (2) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 2
gsave 10 dict begin
bold
newpath 100 24 moveto
118 24 144 24 164 24 curveto
stroke
172 24 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
136 38 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 2
gsave 10 dict begin
bold
newpath 205 39 moveto
210 51 205 62 192 62 curveto
182 62 177 56 177 47 curveto
stroke
179 39 104.04 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
192 76 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore

%	4
gsave 10 dict begin
bold
308 24 20 20 ellipse_path
stroke
%308 24 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
308 25 moveto (4) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	2 -> 4
gsave 10 dict begin
bold
newpath 212 24 moveto
229 24 255 24 276 24 curveto
stroke
284 24 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
248 38 moveto (b) 12 24.00 -0.50 alignedtext
end grestore
end grestore

%	6
gsave 10 dict begin
bold
428 24 20 20 ellipse_path
stroke
%428 24 24 24 ellipse_path
%stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
428 25 moveto (6) 9 18.00 -0.50 alignedtext
end grestore
end grestore

%	4 -> 6
gsave 10 dict begin
bold
newpath 332 24 moveto
350 24 376 24 396 24 curveto
stroke
404 24 180.00 10.00 5.00 arrowhead
gsave 10 dict begin
24.00 /Times-Roman set_font
368 38 moveto (a) 10 24.00 -0.50 alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 652 3678 a
 currentpoint currentpoint translate 1 .25 div 1 .25 div scale neg
exch neg exch translate
 652 3678 a 1977 2434 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 1977 2434
a @beginspecial 0 @llx 0 @lly 309 @urx 291 @ury 1545
@rwi @setspecial
%%BeginDocument: ../../Graphiques/FIGURES/Lij.v.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Lij.v.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Thu Mar  8 18:10:02 2001
%%For: thollard@mishima (Franck Thollard)
%Magnification: 1.05
%%Orientation: Landscape
%%BoundingBox: 0 0 309 291
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-27.0 -71.0 translate
 90 rotate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 612 m 0 0 l 792 0 l 792 612 l cp clip
 0.06299 0.06299 sc
7.500 slw
% Polyline
n 4155 4500 m 4050 4500 4050 4800 105 arcto 4 {pop} repeat
  4050 4905 5160 4905 105 arcto 4 {pop} repeat
  5265 4905 5265 4605 105 arcto 4 {pop} repeat
  5265 4500 4155 4500 105 arcto 4 {pop} repeat
 cp gs col-1 s gr 
/Times-Roman ff 255.00 scf sf
4204 4763 m
gs 1 -1 sc (3' \(20/20\)) col-1 sh gr
% Arc
gs  clippath
2885 4179 m 2854 4299 l 2825 4179 l 2824 4341 l 2884 4341 l  cp clip
n 3120.0 4253.0 275.8 105.3 164.7 arcn
gs col-1 s gr
 gr

% arrowhead
n 2885 4179 m 2854 4299 l 2825 4179 l  col-1 s
% Polyline
gs  clippath
3723 4650 m 3843 4680 l 3723 4710 l 3885 4710 l 3885 4650 l  cp clip
n 2983 4680 m 3870 4680 l gs col-1 s gr gr

% arrowhead
n 3723 4650 m 3843 4680 l 3723 4710 l  col-1 s
% Polyline
gs  clippath
2355 5097 m 2385 4977 l 2415 5097 l 2415 4935 l 2355 4935 l  cp clip
n 2385 5310 m 2385 4950 l gs col-1 s gr gr

% arrowhead
n 2355 5097 m 2385 4977 l 2415 5097 l  col-1 s
% Polyline
n 1725 4500 m 1620 4500 1620 4800 105 arcto 4 {pop} repeat
  1620 4905 2820 4905 105 arcto 4 {pop} repeat
  2925 4905 2925 4605 105 arcto 4 {pop} repeat
  2925 4500 1725 4500 105 arcto 4 {pop} repeat
 cp gs col-1 s gr 
/Times-Roman ff 450.00 scf sf
1530 4230 m
gs 1 -1 sc (A') col-1 sh gr
/Times-Roman ff 255.00 scf sf
2824 3807 m
gs 1 -1 sc (a \(p=98/140\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
3089 5195 m
gs 1 -1 sc (c \(p=20/140\)) col-1 sh gr
/Times-Roman ff 255.00 scf sf
1736 4781 m
gs 1 -1 sc (0' \(22/140\)) col-1 sh gr
% Arc
gs  clippath
5266 877 m 5232 996 l 5206 875 l 5202 1037 l 5262 1039 l  cp clip
n 5450.0 953.4 228.9 101.1 162.3 arcn
gs col-1 s gr
 gr

% arrowhead
n 5266 877 m 5232 996 l 5206 875 l  col-1 s
% Polyline
gs  clippath
2384 1684 m 2498 1636 l 2420 1732 l 2550 1635 l 2514 1587 l  cp clip
n 2160 1890 m 2520 1620 l gs col-1 s gr gr

% arrowhead
n 2384 1684 m 2498 1636 l 2420 1732 l  col-1 s
% Polyline
gs  clippath
3903 1275 m 4023 1305 l 3903 1335 l 4065 1335 l 4065 1275 l  cp clip
n 3510 1305 m 4050 1305 l gs col-1 s gr gr

% arrowhead
n 3903 1275 m 4023 1305 l 3903 1335 l  col-1 s
% Polyline
gs  clippath
4527 1832 m 4499 1953 l 4467 1834 l 4470 1996 l 4530 1994 l  cp clip
n 4491 1571 m 4500 1980 l gs col-1 s gr gr

% arrowhead
n 4527 1832 m 4499 1953 l 4467 1834 l  col-1 s
% Polyline
n 4155 2139 m 4050 2139 4050 2460 105 arcto 4 {pop} repeat
  4050 2565 5115 2565 105 arcto 4 {pop} repeat
  5220 2565 5220 2244 105 arcto 4 {pop} repeat
  5220 2139 4155 2139 105 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
n 4200 1080 m 4095 1080 4095 1380 105 arcto 4 {pop} repeat
  4095 1485 5160 1485 105 arcto 4 {pop} repeat
  5265 1485 5265 1185 105 arcto 4 {pop} repeat
  5265 1080 4200 1080 105 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
n 2490 1125 m 2385 1125 2385 1425 105 arcto 4 {pop} repeat
  2385 1530 3360 1530 105 arcto 4 {pop} repeat
  3465 1530 3465 1230 105 arcto 4 {pop} repeat
  3465 1125 2490 1125 105 arcto 4 {pop} repeat
 cp gs col-1 s gr 
% Polyline
gs  clippath
1998 2564 m 2029 2443 l 2058 2564 l 2060 2402 l 2000 2402 l  cp clip
n 2025 2745 m 2030 2417 l gs col-1 s gr gr

% arrowhead
n 1998 2564 m 2029 2443 l 2058 2564 l  col-1 s
% Polyline
n 1770 2001 m 1665 2001 1665 2235 105 arcto 4 {pop} repeat
  1665 2340 2685 2340 105 arcto 4 {pop} repeat
  2790 2340 2790 2106 105 arcto 4 {pop} repeat
  2790 2001 1770 2001 105 arcto 4 {pop} repeat
 cp gs col-1 s gr 
/Times-Roman ff 405.00 scf sf
1710 658 m
gs 1 -1 sc (A) col-1 sh gr
/Times-Roman ff 225.00 scf sf
2480 1391 m
gs 1 -1 sc (1 \(10/50\)) col-1 sh gr
/Times-Roman ff 225.00 scf sf
3329 952 m
gs 1 -1 sc (a \(p=40/50\)) col-1 sh gr
/Times-Roman ff 225.00 scf sf
1129 1707 m
gs 1 -1 sc (a \(p=50/50\)) col-1 sh gr
/Times-Roman ff 225.00 scf sf
4711 599 m
gs 1 -1 sc (a \(p=8/40\)) col-1 sh gr
/Times-Roman ff 225.00 scf sf
4706 1873 m
gs 1 -1 sc (c \(p=20/40\)) col-1 sh gr
/Times-Roman ff 225.00 scf sf
4175 2425 m
gs 1 -1 sc (3 \(20/20\)) col-1 sh gr
/Times-Roman ff 225.00 scf sf
4276 1355 m
gs 1 -1 sc (2 \(12/40\)) col-1 sh gr
/Times-Roman ff 225.00 scf sf
1779 2255 m
gs 1 -1 sc (0 \(0/50\)) col-1 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 3264 2434 a
 currentpoint grestore moveto
 3264 2434 a 3326 3794 4 1386
v 598 3797 2732 4 v 648 4078 a Fw(One)18 b(can)g(note)g(t)n(w)n(o)f
(prop)r(erties)h(of)g(the)h(up)r(date)g(of)f(the)h(probabilities:)e
(\014rst,)3054 4037 y Fm(C)t Fp(\()p Fm(q)3164 4012 y
Fg(0)3186 4037 y Fm(;a)p Fp(\)+)p Fm(C)t Fp(\()p Fm(q)3429
4012 y Fg(00)3470 4037 y Fm(;a)p Fp(\))p 3054 4059 498
4 v 3109 4106 a Fm(C)t Fp(\()p Fm(q)3219 4090 y Fg(0)3242
4106 y Fp(\)+)p Fm(C)t Fp(\()p Fm(q)3429 4090 y Fg(00)3470
4106 y Fp(\))523 4217 y Fw(is)39 b(included)i(in)e([)1104
4177 y Fm(C)t Fp(\()p Fm(q)1214 4152 y Fg(0)1237 4177
y Fm(;a)p Fp(\))p 1104 4198 215 4 v 1132 4246 a Fm(C)t
Fp(\()p Fm(q)1242 4230 y Fg(0)1265 4246 y Fp(\))1329
4217 y Fn(;)1375 4177 y Fm(C)t Fp(\()p Fm(q)1485 4152
y Fg(00)1526 4177 y Fm(;a)p Fp(\))p 1375 4198 233 4 v
1403 4246 a Fm(C)t Fp(\()p Fm(q)1513 4230 y Fg(00)1554
4246 y Fp(\))1618 4217 y Fw(])h(whic)n(h)f(means)g(that,)h(the)g
(probabilit)n(y)f(of)g(an)g(after)523 4327 y(merge)d(transition)g(has)h
(a)f(v)-5 b(alue)37 b(b)r(ounded)g(b)n(y)g(the)g(t)n(w)n(o)f(v)-5
b(alues)37 b(of)f(the)i(transitions)e(it)523 4426 y(comes)28
b(from.)g(Secondly)-7 b(,)1397 4394 y Fp(20+100)p 1364
4408 283 4 v 1364 4455 a(1000+105)1681 4426 y Fw(=)1796
4394 y Fp(120)p 1779 4408 133 4 v 1779 4455 a(1105)1950
4426 y Fw(is)28 b(closer)f(to)2412 4394 y Fp(20)p 2379
4408 V 2379 4455 a(1000)2549 4426 y Fw(than)i(to)2856
4394 y Fp(100)p 2856 4408 100 4 v 2856 4455 a(105)2965
4426 y Fw(.)g(The)f(merge)523 4526 y(naturally)37 b(w)n(eigh)n(ts)h
(more)f(the)i(probabilit)n(y)e(of)h(the)g(transition)g(that)g(holds)g
(the)h(more)523 4625 y(information.)648 4725 y(These)25
b(remarks)e(hold)j(for)f(eac)n(h)f(pair)h(of)h(transitions)e(that)i
(tak)n(es)e(part)h(in)h(the)g(merge.)523 4825 y(Let)k(us)h(merge)e
(states)h Fn(q)1307 4837 y Fm(i)1365 4825 y Fw(and)g
Fn(q)1566 4837 y Fm(j)1631 4825 y Fw(and)g(de\014ne)h
Fn(P)2091 4837 y Fm(q)2121 4845 y Fk(i)2182 4825 y Fw(\(resp.)f
Fn(P)2469 4837 y Fm(q)2499 4845 y Fk(j)2535 4825 y Fw(\))h(as)e(the)i
(probabilit)n(y)e(dis-)523 4924 y(tribution)39 b(de\014ned)g(b)n(y)g
(considering)f(state)g Fn(q)2006 4936 y Fm(i)2073 4924
y Fw(\(resp.)h Fn(q)2353 4936 y Fm(j)2388 4924 y Fw(\))g(as)f(the)i
(initial)f(state.)g(Since)p eop
%%Page: 6 6
6 5 bop 523 232 a Fv(6)523 448 y Fw(the)28 b(merge)e(is)h(recursiv)n
(ely)e(applied)j(\(see)f(\014gure)f(2\),)h(the)h(probabilit)n(y)e
(distribution)h(after)523 548 y(merging)g(states)g Fn(q)1115
560 y Fm(i)1171 548 y Fw(and)h Fn(q)1370 560 y Fm(j)1433
548 y Fw(will)g(b)r(e)g(a)g(w)n(eigh)n(ted)f(mean)h(b)r(et)n(w)n(een)g
(the)g(distributions)g Fn(P)3344 560 y Fm(q)3374 568
y Fk(i)523 648 y Fw(and)f Fn(P)737 660 y Fm(q)767 668
y Fk(j)803 648 y Fw(.)648 847 y(The)g(next)g(section)g(address)f(no)n
(w)h(the)g(description)g(of)g(the)h(DDSM)g(algorithm)e(itself.)523
1074 y Fs(3.1)95 b(The)32 b(DDSM)f(algorithm)523 1218
y Fw(The)f(DDSM)h([22])f(algorithm)e(\(algorithm)i(1\))g(tak)n(es)f(t)n
(w)n(o)g(argumen)n(ts:)g(the)h(learning)f(set)523 1318
y Fn(I)559 1330 y Fp(+)636 1318 y Fw(and)22 b(a)f(tuning)h(parameter)e
Fn(\013)p Fw(.)i(It)g(lo)r(oks)f(for)g(an)h(automaton)e(tradeo\013)h(b)
r(et)n(w)n(een)h(a)f(small)523 1417 y(size)g(and)g(a)g(small)g
(distance)g(to)h(the)f(data.)g(The)h(distance)f(measure)f(used)h(is)h
(the)f(Kullbac)n(k-)523 1517 y(Leibler)i(div)n(ergence.)g(The)g(data)h
(are)e(represen)n(ted)h(b)n(y)g(the)h(PPT)-7 b(A)23 b(as)g(it)h(is)g
(the)g(maxim)n(um)523 1617 y(lik)n(eliho)r(o)r(d)i(estimate)g(of)g(the)
h(data.)f(While)h(merging)e(t)n(w)n(o)g(states,)h(the)h(distance)f(b)r
(et)n(w)n(een)523 1716 y(the)37 b(automaton)f(and)g(the)h(data)f
(increases)f(and,)i(at)f(the)h(same)g(time,)g(the)g(n)n(um)n(b)r(er)f
(of)523 1816 y(states)c(and)g(the)g(n)n(um)n(b)r(er)g(of)g
(transitions,)f(in)i(general,)e(decreases.)f(Tw)n(o)i(states)f(will)i
(b)r(e)523 1915 y(set)24 b(compatible)f(if)h(the)f(impact)h(in)g(terms)
f(of)g(div)n(ergence)f(of)i(their)f(merge)g(divided)g(b)n(y)h(the)523
2015 y(gain)j(of)g(size)h(is)f(smaller)g(than)h(the)g(parameter)e
Fn(\013)p Fw(.)648 2115 y(The)f(DDSM)i(algorithm)e(builds)h(as)f(a)g
(\014rst)h(step)g(the)g Fn(P)12 b(P)g(T)g(A)p Fw(\()p
Fn(I)2684 2127 y Fp(+)2739 2115 y Fw(\))26 b(and)f(then)i(rep)r(eats)
523 2214 y(the)33 b(follo)n(wing)e(op)r(erations:)g(c)n(ho)r(ose)g(t)n
(w)n(o)h(states)g(\(states)g Fn(q)2439 2226 y Fm(i)2499
2214 y Fw(and)h Fn(q)2703 2226 y Fm(j)2770 2214 y Fw(in)g(the)g(co)r
(de\),)f(and)523 2314 y(computes)c(the)h(compatibilit)n(y)f(v)-5
b(alue)28 b(\(Relativ)n(e)p 2094 2314 25 4 v 29 w(Div)n(ergence)f(in)i
(the)f(co)r(de\))h(induced)f(b)n(y)523 2414 y(their)k(merge.)g(It)h
(then)g(p)r(erforms)e(the)i(b)r(est)g(merge)f(if)h(it)g(is)f
(compatible.)g(The)h(ordering)523 2513 y(in)27 b(whic)n(h)f(states)g
(are)f(c)n(hosen)g(is)h(adapted)g(from)g(the)h(EDSM)f(algorithm,)f
(whic)n(h)h(w)n(as)g(the)523 2613 y(winning)c(algorithm)f(of)h(a)f(non)
h(probabilistic)f(grammatical)g(inference)g(comp)r(etition)i([13].)p
523 2864 2882 7 v 523 2943 a Fs(Algorithm)30 b(1:)d Fw(DDSM)h(\()p
Fn(I)7 b Fw(+)p Fn(;)14 b(\013)p Fw(\).)p 523 2983 2882
4 v 648 3077 a Fv(A)25 b Fd( )g Fc(Numbering)p 1189 3077
24 4 v 30 w(in)p 1297 3077 V 29 w(Breadth)p 1599 3077
V 30 w(First)p 1824 3077 V 29 w(Order\()p Ft(PPT)-6 b(A)p
Fc(\))p Fv(;)648 3168 y Fu(for)26 b Fe(q)815 3176 y Fb(i)863
3168 y Fv(=)21 b(1)28 b Ft(to)g Fa(Nb)p 1185 3168 V 29
w(State)g Ft(\(A\))h Fu(do)p 689 3801 4 594 v 775 3259
a Fv(b)r(est)p 919 3259 24 4 v 28 w(div)c(=)h Fd(1)f
Fv(;)775 3351 y Fu(for)i Fe(q)943 3359 y Fb(j)997 3351
y Fv(=)21 b(0)28 b Ft(to)g Fe(i)17 b Fd(\000)g Fv(1)26
b Fu(do)p 817 3682 4 297 v 903 3442 a(if)35 b Fa(Compatible)30
b Ft(\()p Fe(A;)13 b(q)1566 3450 y Fb(i)1592 3442 y Fe(;)h(q)1661
3450 y Fb(j)1693 3442 y Ft(\))28 b Fe(<)f Ft(b)l(est)p
1966 3442 24 4 v 30 w(div)34 b Fu(then)p 945 3647 4 166
v 1031 3533 a Fv(b)r(est)p 1175 3533 24 4 v 28 w(pred)25
b(=)g Fe(q)1492 3541 y Fb(j)1551 3533 y Fv(;)1031 3625
y(b)r(est)p 1175 3625 V 28 w(div)g(=)g Fc(Compatible)j
Fv(\()p Fe(A;)13 b(q)1987 3633 y Fb(i)2013 3625 y Fe(;)h(q)2082
3633 y Fb(j)2114 3625 y Fv(\);)p 949 3647 39 4 v 821
3682 V 775 3779 a Fu(if)35 b Ft(b)l(est)p 988 3779 24
4 v 30 w(div)27 b Fe(<)g(\013)f Fu(then)g Fc(Merge)h
Fv(\(A,)p Fe(q)1864 3787 y Fb(i)1890 3779 y Fv(,b)r(est)p
2055 3779 V 28 w(pred\))e(;)p 693 3801 39 4 v 648 3892
a Fc(Return)i Fv(A)e(;)p 523 3927 2882 4 v 648 4204 a
Fw(The)32 b(DDSM)i(algorithm)d(aims)h(at)h(inferring)e(a)h(small)h
(automaton)e(that)i(is)f(close)g(to)523 4304 y(the)c(data.)f(In)h
(fact,)g(the)g(bigger)f Fn(\013)p Fw(,)h(the)g(more)f(general)f(\(and)i
(small)f(with)i(resp)r(ect)e(to)h(the)523 4404 y(n)n(um)n(b)r(er)f(of)h
(states\))f(the)h(resulting)f(automaton)g(should)g(b)r(e.)523
4647 y Fq(4)112 b(Automata)37 b(as)h(transducers)523
4825 y Fw(In)25 b(this)h(section,)f(w)n(e)g(describ)r(e)g(ho)n(w)f(the)
i(automaton)e(can)h(b)r(e)g(in)n(terpreted)g(as)g(an)g(aligned)523
4924 y(transducer.)30 b(Let)h(us)g(supp)r(ose)g(that)g(the)h(automaton)
e(of)h(\014gure)f(3)h(w)n(as)f(inferred)h(b)n(y)g(the)p
eop
%%Page: 7 7
7 6 bop 3367 232 a Fv(7)523 448 y Fw(DDSM)42 b(algorithm.)e(It)h(can)f
(then)h(b)r(e)g(considered)f(as)g(a)h(transducer)e(with)i(the)h(same)
523 548 y(structure)c(whic)n(h)g(emits)g(sym)n(b)r(ols)g(on)f
(transitions.)h(The)g(transducer)f(transitions)g(are)523
648 y(built)26 b(from)f(the)h(ones)f(of)g(the)h(automaton)e(when)i
(taking)e(the)i(POS)f(as)g(the)g(input)h(sym)n(b)r(ol)523
747 y(and)i(the)g Fr(Chunks)36 b Fw(as)27 b(the)i(output.)f(The)h
(transducer)e(is)h(then)g(non-sub-sequen)n(tial,)f(that)523
847 y(is)e(non-deterministic)f(with)i(resp)r(ect)f(to)f(the)i(input)g
(sym)n(b)r(ols.)e(The)h(automaton)f(of)h(\014gure)523
946 y(3)i(can)g(b)r(e)h(considered)f(as)g(a)g(fully)h(aligned)f(non)h
(sub-sequen)n(tial)e(transducer.)1017 1183 y Fu(Fig.)15
b(3.)25 b Fv(probabilistic)i(automaton/probabilistic)g(transducer)1011
1274 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 1011 1274 a @beginspecial 36 @llx 36 @lly 283
@urx 741 @ury 790 @rwi @setspecial
%%BeginDocument: ../../Graphiques/FIGURES/aut.infered.ps
%!PS-Adobe-2.0
%%Creator: dot version gviz1.5.1 (09-29-99)
%%For: (thollard) Franck Thollard
%%Title: G
%%Pages: (atend)
%%BoundingBox: 36 36 283 741
%%EndComments
%%BeginProlog
save
/DotDict 200 dict def
DotDict begin

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
% alignfactor tells what fraction to place on the left.
% -.5 is centered.
/alignedtext {			% text labelwidth fontsz alignfactor
	/alignfactor exch def
	/fontsz exch def
	/width exch def
	/text exch def
	gsave
		% even if node or edge is dashed, don't paint text with dashes
		[] 0 setdash
		currentpoint newpath moveto
		text stringwidth pop
		alignfactor mul fontsz -.3 mul rmoveto
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def
%%EndProlog
%%Page: 1 1
%%PageBoundingBox: 36 36 283 741
%%PageOrientation: Landscape
gsave
35 35 248 706 boxprim clip newpath
36 36 translate
gsave 246 0 translate 90 rotate
0 0 1 beginpage
grestore
246 0 translate 90 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	init
gsave 10 dict begin
bold
0.000 0.000 1.000 nodecolor
7 106 7 7 ellipse_path
stroke
end grestore

%	0
gsave 10 dict begin
bold
106 106 54 54 ellipse_path
stroke
106 106 50 50 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
106 117 moveto (0  i=1) 42 18.00 -0.50 alignedtext
106 97 moveto ( f=16/16) 52 18.00 -0.50 alignedtext
end grestore
end grestore

%	init -> 0
gsave 10 dict begin
bold
newpath 14 106 moveto
21 106 32 106 44 106 curveto
stroke
newpath 42 104 moveto
52 106 lineto
42 109 lineto
closepath
gsave 0 setgray stroke grestore fill
end grestore

%	1
gsave 10 dict begin
bold
378 106 54 54 ellipse_path
stroke
378 106 50 50 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
378 117 moveto (1) 9 18.00 -0.50 alignedtext
378 97 moveto ( f=2/16) 52 18.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
gsave 10 dict begin
bold
newpath 145 144 moveto
156 154 168 162 178 165 curveto
219 177 266 177 306 165 curveto
314 163 323 158 332 151 curveto
stroke
newpath 331 149 moveto
340 144 lineto
334 152 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
24.00 /Times-Roman set_font
242 213 moveto (NN+B-NP) 102 24.00 -0.50 alignedtext
242 187 moveto ( p=10/16) 86 24.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
gsave 10 dict begin
bold
newpath 160 106 moveto
204 106 267 106 314 106 curveto
stroke
newpath 314 104 moveto
324 106 lineto
314 109 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
24.00 /Times-Roman set_font
242 146 moveto (NNP+O) 78 24.00 -0.50 alignedtext
242 120 moveto ( p=1/16) 74 24.00 -0.50 alignedtext
end grestore
end grestore

%	0 -> 1
gsave 10 dict begin
bold
newpath 144 68 moveto
156 58 168 50 178 47 curveto
219 34 266 34 306 47 curveto
315 50 325 55 334 63 curveto
stroke
newpath 333 59 moveto
340 67 lineto
330 64 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
24.00 /Times-Roman set_font
242 87 moveto (CC+O) 62 24.00 -0.50 alignedtext
242 61 moveto ( p=5/16) 74 24.00 -0.50 alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
bold
650 106 54 54 ellipse_path
stroke
650 106 50 50 ellipse_path
stroke
gsave 10 dict begin
18.00 /Times-Roman set_font
650 117 moveto (3) 9 18.00 -0.50 alignedtext
650 97 moveto ( f=0/16) 52 18.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
gsave 10 dict begin
bold
newpath 431 118 moveto
438 120 445 121 450 121 curveto
493 124 536 124 578 121 curveto
582 121 586 121 590 120 curveto
stroke
newpath 587 118 moveto
597 118 lineto
588 123 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
24.00 /Times-Roman set_font
514 163 moveto (NN+I-NP) 94 24.00 -0.50 alignedtext
514 137 moveto ( p=11/16) 86 24.00 -0.50 alignedtext
end grestore
end grestore

%	1 -> 2
gsave 10 dict begin
bold
newpath 422 74 moveto
432 69 442 64 450 62 curveto
492 52 537 52 578 62 curveto
584 64 592 67 599 71 curveto
stroke
newpath 598 68 moveto
606 74 lineto
596 72 lineto
closepath
gsave 0 setgray stroke grestore fill
gsave 10 dict begin
24.00 /Times-Roman set_font
514 102 moveto (NN+B-NP) 102 24.00 -0.50 alignedtext
514 76 moveto ( p=3/16) 74 24.00 -0.50 alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 1670 1274 a
 currentpoint grestore moveto
 1670 1274 a 648 1979 a Fw(W)-7
b(e)23 b(can)g(then)h(use)f(the)h(Viterbi)f(algorithm)g([9])g(to)g
(\014nd)h(out)f(the)h(most)f(probable)f(path)523 2078
y(giv)n(en)27 b(the)h(input)g(POS)f(tags.)523 2369 y
Fq(5)112 b(Ev)-6 b(aluation)523 2593 y Fw(The)33 b(qualit)n(y)g
(measure)f(used)h(is)h(the)f Fn(F)12 b Fw(-score)32 b(based)h(on)f
(precision)h(and)g(recall)f([23].)h(A)523 2693 y(giv)n(en)f
Fr(Chunk)42 b Fw(is)32 b(correct)f(if)j(the)f(starting)e
Fr(Chunk)42 b Fw(is)33 b(correct)e(\()p Fr(e.g.)j Fw(B-NP)e(for)g(the)h
(NP)523 2793 y Fr(Chunk\))e Fw(and)c(all)g(the)g(inside)h
Fr(Chunks)34 b Fw(\(I-NP)27 b(for)g Fr(Chunk)36 b Fw(NP\))28
b(are)e(prop)r(osed)g(correctly)-7 b(.)648 2897 y(F)g(or)34
b(a)g Fr(Chunk)44 b Fn(C)6 b Fw(,)35 b(the)g(recall)f(is)g(the)h(n)n
(um)n(b)r(er)g(of)f(times)h Fn(C)41 b Fw(is)35 b(correctly)e(prop)r
(osed)523 2997 y(divided)21 b(b)n(y)g(the)h(n)n(um)n(b)r(er)f(of)g
(times)g(it)h(should)f(b)r(e.)g(Raising)g(the)g(recall)g(can)f(b)r(e)i
(done)f(easily)523 3097 y(b)n(y)28 b(prop)r(osing)f(a)g(giv)n(en)g
Fr(Chunk)38 b Fw(v)n(ery)27 b(often.)h(Con)n(v)n(ersely)-7
b(,)26 b(the)j(precision)e(computes)h(the)523 3196 y(n)n(um)n(b)r(er)j
(of)g(times)g(a)g Fr(Chunk)40 b Fn(C)e Fw(is)30 b(truly)h(prop)r(osed)f
(divided)i(b)n(y)f(the)g(n)n(um)n(b)r(er)g(of)g(times)523
3296 y(it)26 b(is)f(prop)r(osed.)f(The)i(t)n(w)n(o)e(criteria)g(are)h
(usually)f(com)n(bined)h(with)h(the)g(function)g Fn(F)3157
3308 y Fm(\014)3227 3296 y Fw([23])f(:)523 3420 y Fn(F)576
3432 y Fm(\014)644 3420 y Fw(=)742 3380 y Fp(\()p Fm(\014)809
3355 y Fl(2)841 3380 y Fp(+1\))p Fm(:Recall:P)9 b(r)r(ecision)p
742 3401 736 4 v 794 3449 a(\014)835 3432 y Fl(2)867
3449 y Fm(:Recall)p Fp(+)p Fm(P)g(r)r(ecision)1514 3420
y Fw(In)26 b(the)g(follo)n(wing,)f(w)n(e)h(will)g(set)g
Fn(\014)h Fw(=)c(1,)j(as)f(is)h(standard,)f(in)523 3520
y(order)h(to)i(w)n(eigh)n(t)f(equally)g(the)h(precision)e(and)i
(recall.)648 3624 y(The)k(original)e(corpus)h(is)h(divided)h(in)f(t)n
(w)n(o)f(sets:)h(the)h(training)e(set)h(\(AppT)-7 b(ot\))33
b(\(with)523 3724 y(8936)28 b(sen)n(tences)h(and)h(211727)d(sym)n(b)r
(ols\),)j(and)f(a)h(test)g(set)g(\(T)-7 b(est\))30 b(with)h(2012)d(sen)
n(tences)523 3823 y(and)g(47377)e(sym)n(b)r(ols.)i(W)-7
b(e)29 b(randomly)e(divided)i(the)g(sen)n(tences)f(of)g(the)h(training)
f(set)g(in)n(to)523 3923 y(t)n(w)n(o)k(sets:)i(a)e(training)h(set)g
(for)g(the)g(v)-5 b(alidation)33 b(step)g(\(AppV,)i(8092)c(sen)n
(tences,)i(191683)523 4023 y(sym)n(b)r(ols\))39 b(and)f(a)h(v)-5
b(alidation)38 b(set)h(\(V)-7 b(alid,)40 b(844)d(sen)n(tences,)i(20044)
e(sym)n(b)r(ols\))h(.)h(AppV)523 4122 y(con)n(tains)24
b(roughly)g(90\045)h(of)g(the)g(sen)n(tences)g(of)g(AppT)-7
b(ot.)26 b(The)f(a)n(v)n(erage)d(n)n(um)n(b)r(er)j(of)g(w)n(ords)523
4222 y(p)r(er)i(sen)n(tence)f(is)g(around)g(24.)g(The)g(size)h(of)f
(the)h(v)n(o)r(cabulary)e(\(in)i(this)g(case)f(pairs)f(of)i(POS)523
4322 y(tags)j(and)h Fr(Chunk)40 b Fw(tags\))31 b(is)g(around)f(300)f
(\(316)h(for)g(AppV)i(and)f(319)f(for)g(AppT)-7 b(ot\).)32
b(The)523 4421 y(PPT)-7 b(A)25 b(con)n(tains)g(roughly)g(160,000)e
(states)j(when)g(built)h(on)f(the)g(AppV)h(set)f(and)g(177,000)523
4521 y(with)j(AppT)-7 b(ot.)29 b(Our)e(C++)h(implemen)n(tation)g(of)g
(the)h(DDSM)h(algorithm)d(needs)h(around)523 4620 y(30)34
b(Megab)n(ytes)g(to)h(handle)g(this)g(data.)g(It)g(to)r(ok)g(from)f(45)
g(mn)i(\(for)f Fn(\013)g Fw(=)g(0)p Fn(:)p Fw(001\))f(to)h(13)523
4720 y(hours)27 b(\(for)g Fn(\013)d Fw(=)e(0)p Fn(:)p
Fw(0004\))k(on)h(a)g Ff(sun)43 b(ultra)e(10)27 b Fw(with)h(a)f(333)f
(MHz)i(pro)r(cessor.)648 4825 y(The)35 b(free)g(parameters)f(w)n(ere)h
(estimated)g(on)g(the)h(corpus)f(\(AppV,)h(V)-7 b(alid\).)36
b(A)g(\014nal)523 4924 y(inference)k(w)n(as)e(made)i(on)f(the)h(AppT)-7
b(ot)40 b(learning)f(set)g(with)h(the)g(v)-5 b(alue)40
b(of)g Fn(\013)g Fw(de\014ned)p eop
%%Page: 8 8
8 7 bop 523 232 a Fv(8)523 448 y Fw(during)29 b(the)g(v)-5
b(alidation)29 b(step.)g(The)g(parsing)f(of)h(the)h(test)f(set)g(w)n
(as)f(then)i(done)f(using)g(the)523 548 y(Viterbi)f(algorithm)e(using)i
(the)g(parameter)e(v)-5 b(alues)27 b(de\014ned)h(on)f(the)h(AppV)h
(set.)648 649 y(W)-7 b(e)28 b(no)n(w)f(describ)r(e)g(the)h(b)r(eha)n
(vior)e(of)i(the)g(mac)n(hine)f(on)g(the)h(v)-5 b(alidation)27
b(set.)523 920 y Fq(6)112 b(V)-9 b(alidation)35 b(set)j(analysis)523
1124 y Fw(This)33 b(section)f(will)g(deal)h(with)g(the)f(analysis)g(of)
g(the)h(di\013eren)n(t)g(tec)n(hniques)f(w)n(e)g(applied,)523
1224 y(ev)-5 b(aluated)21 b(on)g(the)g(v)-5 b(alidation)21
b(set.)g(W)-7 b(e)22 b(\014rst)f(brie\015y)g(describ)r(e)g(the)g(smo)r
(othing)g(tec)n(hnique)523 1324 y(c)n(ho)r(osen.)j(W)-7
b(e)25 b(then)h(discuss)e(an)h(adaptation)f(of)h(the)g(bagging)f(tec)n
(hnique)h([3].)f(Finally)h(w)n(e)523 1423 y(describ)r(e)d(an)g
(e\016cien)n(t)h(metho)r(d)g(for)f(using)g(lexical)g(information)f(in)i
(the)g(learning)e(pro)r(cess.)523 1678 y Fs(The)41 b(smo)s(othing)d
(tec)m(hnique)52 b Fw(The)36 b(smo)r(othing)f(tec)n(hnique)g(used)h(is)
f(inspired)g(from)523 1777 y(Katz)25 b(smo)r(othing)g([10]:)g(a)g
(small)h(quan)n(tit)n(y)f(is)g(discoun)n(ted)g(from)h(eac)n(h)f
(probabilit)n(y)f(a)n(v)-5 b(ail-)523 1877 y(able)30
b(in)g(the)h(automaton.)e(The)i(probabilit)n(y)e(mass)g(a)n(v)-5
b(ailable)29 b(is)h(then)h(redistributed)f(on)523 1977
y(the)j(ev)n(en)n(ts)f(the)h(automaton)f(cannot)h(handle)g(\()p
Fr(e.g.)h Fw(parsing)d(NN)j(VP)f(with)g(the)g(trans-)523
2076 y(ducer)40 b(of)g(\014gure)f(3\).)h(The)g(redistribution)f(of)h
(the)g(probabilit)n(y)f(mass)g(is)h(made)g Fr(via)47
b Fw(a)523 2176 y(unigram)37 b(mo)r(del)h(to)f(obtain)g(an)h(o)n(v)n
(erall)d(consisten)n(t)i(mo)r(del.)h(The)g(unigram)e(mo)r(del)i(is)523
2276 y(built)28 b(using)f(the)g(same)g(learning)f(set)h(as)g(for)f(the)
i(automata)e(inference,)h(extended)g(b)n(y)g(an)523 2375
y(end-of-string)h(sym)n(b)r(ol.)g(The)h(parsing)f(of)h(the)g(input)g(b)
n(y)g(a)g(unigram)f(is)g(made)h(using)g(the)523 2475
y(same)24 b(tec)n(hnique)g(as)f(for)g(an)h(automaton.)f(The)i(unigram)e
(mo)r(del)h(can)g(also)f(b)r(e)h(considered)523 2574
y(as)c(a)h(one)g(state)f(automaton)g(that)i(con)n(tains)e(a)g(lo)r(op)h
(for)f(eac)n(h)g(elemen)n(t)i(of)f(the)g(v)n(o)r(cabulary)-7
b(.)648 2675 y(The)29 b(discoun)n(ting)f(v)-5 b(alue)29
b(w)n(as)e(estimated)i(on)g(the)g(v)-5 b(alidation)29
b(set.)g(The)g(discoun)n(ting)523 2775 y(is)g(done)f(b)n(y)g
(subtracting)g(a)h(v)-5 b(alue)28 b(to)h(the)g(n)n(umerator)e(of)i(the)
g(coun)n(t)f(of)h(eac)n(h)f(estimated)523 2874 y(probabilit)n(y)-7
b(.)26 b(In)h(suc)n(h)g(a)f(w)n(a)n(y)-7 b(,)26 b(the)h(discoun)n(ted)g
(mass)f(gets)g(smaller)g(as)g(the)i(frequency)e(of)523
2974 y(the)k(transition)f(-)g(and)g(hence)g(the)h(statistical)f(relev)
-5 b(ance)28 b(of)i(the)g(probabilit)n(y)e(estimated)523
3074 y(-)i(increases.)e(The)i(v)-5 b(alue)29 b(of)h(this)g(discoun)n
(ting)f(parameter)f(w)n(as)h(estimated)h(on)f(the)h(v)-5
b(ali-)523 3173 y(dation)29 b(set)h(as)f(0.5.)g(Unlik)n(e)g(in)h(other)
f(domains)g(suc)n(h)g(as)g(language)f(mo)r(deling,)h(it)h(seems)523
3273 y(that)e(the)g(tuning)g(of)f(this)h(parameter)e(is)i(not)f
(crucial.)648 3374 y(The)34 b(strategy)e(used)i(here)f(smo)r(othes)h
Fr(e)l(ach)41 b Fw(path)34 b(of)g(the)g(transducer.)f(Ev)n(en)g(if)i
(the)523 3473 y(b)r(est)27 b(automaton)f(is)h(usually)f(able)h(to)g
(parse)e(the)j(input)f(sen)n(tence)g(totally)-7 b(,)26
b(this)h(strategy)523 3573 y(leads)k(to)g(b)r(etter)h(results.)f(An)h
(in)n(terpretation)e(of)h(this)h(phenomenon)f(can)g(b)r(e)h(that)f(it)h
(is)523 3673 y(b)r(etter)c(to)g(trust)f(the)h(c)n(hoices)f(made)g(at)g
(the)h(b)r(eginning)g(of)g(the)g(parsing.)523 3927 y
Fs(Bagging)h(the)h(densit)m(y)g(estimator)39 b Fw(The)26
b(bagging)e([3])i(tec)n(hnique)g(has)g(b)r(een)g(success-)523
4027 y(fully)k(applied)f(in)g(man)n(y)g(domains)f(but)i(w)n(as)e(rep)r
(orted)g(not)h(to)g(w)n(ork)f(on)h(this)g(particular)523
4126 y(task)c([18].)f(On)h(the)h(other)e(hand,)h(it)h(w)n(as)e(sho)n
(wn)h(to)g(impro)n(v)n(e)e(the)j(Collins)f(statistical)f(full)523
4226 y(parser)k([7].)i(Moreo)n(v)n(er,)e(in)n(terp)r(olating)h(PDF)-9
b(A)30 b(has)f(b)r(een)i(rep)r(orted)e(to)h(impro)n(v)n(e)f(results)523
4326 y(signi\014can)n(tly)38 b([22].)g(Finally)-7 b(,)39
b(it)h(has)e(b)r(een)h(sho)n(wn)f(that)i(b)r(o)r(osting)e(do)r(es)h
(not)g(p)r(erform)523 4425 y(b)r(etter)28 b(than)g(bagging)e(on)h(the)h
(full)g(task.)f(W)-7 b(e)28 b(hence)g(use)f(the)h(bagging)f(metho)r(d)h
(here.)648 4526 y(The)39 b(bagging)f(strategy)g(samples)h(the)g
(training)g(set)h(in)f(samples)g(\(B-sets\))g(of)h(the)523
4625 y(same)30 b(size.)g(A)g(mo)r(del)g(is)h(then)f(inferred)g(from)g
(eac)n(h)f(B-set)h(and)g(a)g(ma)5 b(jorit)n(y)29 b(v)n(ote)g(or)g(an)
523 4725 y(in)n(terp)r(olation)i(is)g(done)h(using)f(all)g(these)h(mo)r
(dels.)g(Applying)f(this)h(ra)n(w)f(tec)n(hnique)g(do)r(es)523
4825 y(not)i(w)n(ork)e(w)n(ell)i(since)f(man)n(y)h(strings)e(ha)n(v)n
(e)h(a)g(v)n(ery)g(small)h(probabilit)n(y)e(in)i(the)h(original)523
4924 y(training)21 b(set.)h(They)g(hence)f(do)h(not)g(app)r(ear)f(in)h
(the)g(B-sets.)f(In)h(order)e(to)i(get)g(go)r(o)r(d)f(B-sets,)p
eop
%%Page: 9 9
9 8 bop 3367 232 a Fv(9)523 448 y Fw(w)n(e)32 b(increse)f(their)g(size)
h(up)g(to)g(50,000)d(sen)n(tences)j(b)r(ecause,)f(with)i(this)f(size,)f
(the)i(size)e(of)523 548 y(the)e(B-sets)e(PPT)-7 b(A)27
b(matc)n(hes)h(roughly)f(the)h(size)g(of)g(the)h(PPT)-7
b(A)27 b(built)i(from)f(the)h(original)523 648 y(training)h(set.)h(F)-7
b(ollo)n(wing)30 b(this)i(strategy)-7 b(,)29 b(w)n(e)i(kno)n(w)f(that)i
(on)e(the)i(one)e(hand,)h(nearly)f(all)523 747 y(the)e(input)h(sen)n
(tences)f(of)g(the)g(original)f(training)g(sample)h(will)g(b)r(e)h
(presen)n(t)e(in)h(the)h(B-sets)523 847 y(and,)24 b(on)g(the)h(other)f
(hand,)g(the)h(statistical)f(relev)-5 b(ance)23 b(of)i(the)f(main)h
(sen)n(tences)e(increases.)523 946 y(While)29 b(bagging)e(the)j
(lexicalized)e(training)g(set,)g(w)n(e)h(needed)g(to)f(increase)g
(again)f(the)i(size)523 1046 y(of)k(the)g(B-set)f(as)g(going)g(up)h(to)
f(130,000)e(sen)n(tences)i(con)n(tin)n(ue)g(to)h(impro)n(v)n(e)e(the)i
(dev)g(set)523 1146 y(p)r(erformances.)523 1399 y Fs(Including)e(the)g
(lexical)f(information)39 b Fw(Lexical)26 b(information)h(is)f(kno)n
(wn)h(to)f(b)r(e)i(quite)523 1498 y(p)r(o)n(w)n(erful.)d(F)-7
b(or)26 b(example,)f(Pla)h(et)g Fr(al.)h Fw([15],)e(who)h(use)g(a)f
(statistical)h(\014nite)h(state)e(mac)n(hine,)523 1598
y(impro)n(v)n(e)i(their)g(results)h(b)n(y)g(4\045,)f(raising)g(the)h
Fn(F)2045 1610 y Fm(\014)s Fp(=1)2202 1598 y Fw(from)g(86)f(to)h(90.)f
(They)h(c)n(ho)r(ose)f(some)523 1697 y(POS)35 b(tags)g(and)g(split)h
(them)g(with)g(resp)r(ect)g(to)f(the)h(w)n(ord)f(they)h(w)n(ere)e(matc)
n(hing)h(with.)523 1797 y(A)f(POS)e(tag)h Fn(T)1017 1809
y Fm(i)1077 1797 y Fw(is)g(then)h(replaced)f(b)n(y)g(the)g(sym)n(b)r
(ol)g Fn(W)2332 1809 y Fm(i)2360 1797 y Fn(T)2409 1809
y Fm(i)2470 1797 y Fw(for)f(the)i(w)n(ord)e Fn(W)3040
1809 y Fm(i)3102 1797 y Fw(they)h(are)523 1897 y(tagging.)39
b(The)h(idea)f(b)r(ehind)i(that)f(is)g(to)g(resolv)n(e)e(the)j(am)n
(biguit)n(y)e(of)h(a)f(tag)h Fn(T)3149 1909 y Fm(i)3216
1897 y Fw(when)523 1996 y(the)29 b(w)n(ord)f(can)h(help.)g(As)g(an)g
(example,)g(the)g(w)n(ord)f Fr(against)38 b Fw(alw)n(a)n(ys)27
b(start)h(an)h(B-PP)e(but)523 2096 y(its)37 b(POS)f(tag)g(\(namely)h
(IN\))g(is)f(am)n(biguous)g(b)r(ecause)g(it)h(can)f(predict)h(a)f(b)r
(eginning)h(of)523 2196 y(prep)r(osition)30 b(\(B-PP)f
Fr(Chunk)40 b Fw(tag\))31 b(or)e(a)h(b)r(eginning)h(of)f(clause)g(with)
i(a)e(complemen)n(tizer)523 2295 y(\(B-SBAR)35 b Fr(Chunk)45
b Fw(tag\).)35 b(By)g(adding)g(a)g(new)g(POS)g(tag)f
Fr(against-IN)49 b Fw(w)n(e)35 b(will)h(b)r(e)f(able)523
2395 y(to)29 b(sa)n(v)n(e)f(some)h(problem)g(when)g(the)h(POS)e(tag)h
(is)g(IN)h(and)f(when)g(the)h(matc)n(hing)f(w)n(ord)f(is)523
2494 y Fr(against)p Fw(.)d(The)f(problem)f(then)i(is)e(to)h(c)n(ho)r
(ose)f(whic)n(h)h(POS)f(tag)g(to)h(split)g(and)g(in)g(whic)n(h)g(w)n(a)
n(y)523 2594 y(to)29 b(do)h(it.)f(One)h(ob)n(vious)e(idea)h(is)g(to)g
(create)g(a)g(new)h(POS)e(tag)h(for)g(eac)n(h)g(w)n(ord/POS)e(pair)523
2694 y(but)k(this)g(will)f(\(i\))h(b)r(e)g(in)n(tractable)f(and)g
(\(ii\))h(lead)f(to)g(data)g(sparseness.)f(W)-7 b(e)31
b(th)n(us)f(try)g(to)523 2793 y(determine)f(automatically)e(whic)n(h)i
(POS)f(tag)g(to)g(split)h(and)f(in)h(whic)n(h)g(w)n(a)n(y)-7
b(.)27 b(W)-7 b(e)29 b(will)g(use)523 2893 y(a)e(criterion)g(based)g
(on)g(m)n(utual)h(information.)523 3096 y Fr(Cho)l(osing)36
b(the)f(POS)f(tag)49 b Fw(W)-7 b(e)33 b(wish)g(to)g(iden)n(tify)g(whic)
n(h)g(POS)f(tags)g(will)h(b)r(e)h(help)r(ed)f(b)n(y)523
3196 y(the)d(addition)f(of)g(lexical)g(information.)g(F)-7
b(or)28 b(these)i(POS)e(tags,)h(w)n(e)g(w)n(ould)g(exp)r(ect)g(there)
523 3295 y(to)37 b(b)r(e)h(a)f(high)g(dep)r(endency)h(b)r(et)n(w)n(een)
g(the)g(w)n(ord)e(and)h(the)h Fr(Chunk)47 b Fw(tag.)36
b(The)i(m)n(utual)523 3395 y(information)27 b(b)r(et)n(w)n(een)h(t)n(w)
n(o)e(random)h(v)-5 b(ariables)26 b Fn(X)34 b Fw(and)28
b Fn(Y)46 b Fw(is)28 b(de\014ned)f(as)1329 3624 y Fn(I)7
b Fw(\()p Fn(X)g Fw(;)14 b Fn(Y)k Fw(\))23 b(=)1726 3545
y Fh(X)1739 3720 y Fm(x;y)1860 3624 y Fn(p)p Fw(\()p
Fn(x;)14 b(y)s Fw(\))g(log)2285 3568 y Fn(P)e Fw(\()p
Fn(x;)i(y)s Fw(\))p 2239 3605 350 4 v 2239 3681 a Fn(P)e
Fw(\()p Fn(x)p Fw(\))p Fn(P)g Fw(\()p Fn(y)s Fw(\))3299
3624 y(\(2\))648 3858 y(W)-7 b(e)31 b(therefore)g(calculate)f(for)h
(eac)n(h)g(POS)f(tag)h Fn(t)g Fw(the)h(m)n(utual)f(information)g(b)r
(et)n(w)n(een)523 3958 y(the)d(conditional)f Fr(Chunk)37
b Fw(distribution)28 b(and)f(the)h(conditional)f(W)-7
b(ord)27 b(distribution.)998 4142 y Fn(I)7 b Fw(\()p
Fn(C)f Fj(j)p Fn(T)35 b Fw(=)23 b Fn(t)p Fw(;)14 b Fn(W)e
Fj(j)p Fn(T)34 b Fw(=)22 b Fn(t)p Fw(\))i(=)e Fn(H)7
b Fw(\()p Fn(C)f Fj(j)p Fn(T)35 b Fw(=)22 b Fn(t)p Fw(\))d
Fj(\000)f Fn(H)7 b Fw(\()p Fn(C)f Fj(j)p Fn(W)n(;)14
b(T)35 b Fw(=)22 b Fn(t)p Fw(\))370 b(\(3\))523 4326
y(W)-7 b(e)34 b(then)g(select)f(the)h(POS)f(for)g(whic)n(h)g(this)h(is)
f(highest.)h(This)f(is)h(the)g(POS)e(whic)n(h)i(will)523
4425 y(giv)n(e)d(us)h(the)g(greatest)f(reduction)h(in)g(the)h
(uncertain)n(t)n(y)e(of)h(the)g Fr(Chunk)41 b Fw(tag)32
b(if)g(w)n(e)g(kno)n(w)523 4525 y(the)c(w)n(ord)f(as)f(w)n(ell)i(as)f
(the)h(POS)f(tag.)648 4625 y(All)j(the)g(probabilities)f(are)g
(estimated)h(using)g(the)g(maxim)n(um)f(lik)n(eliho)r(o)r(d.)h(T)-7
b(o)30 b(a)n(v)n(oid)523 4725 y(problems)g(in)g(the)h(estimation)f(of)h
(this)g(quan)n(tit)n(y)f(due)g(to)h(data)e(sparseness,)g(w)n(e)h(did)h
(not)523 4825 y(tak)n(e)d(in)n(to)h(accoun)n(t)e(rare)h(com)n
(binations)f(of)i(w)n(ord/)p Fr(Chunk)p Fw(,)f Fr(i.e.)i
Fw(the)f(com)n(binations)f(that)523 4924 y(app)r(ears)e(less)i(than)f
(six)h(times.)p eop
%%Page: 10 10
10 9 bop 523 232 a Fv(10)523 448 y Fr(Splitting)31 b(the)h(POS)f(tag)44
b Fw(The)29 b(POS)f(b)r(eing)i(c)n(hosen,)e(w)n(e)h(need)g(to)g(create)
f(a)h(new)g(item)h(\(a)523 548 y(com)n(bination)20 b(of)g(w)n(ord)g
(and)g(POS)g(tag\))h(according)e(to)h(the)h(abilit)n(y)f(of)h(the)g(w)n
(ord)f(to)g(predict)523 648 y(the)32 b Fr(Chunk)p Fw(.)f(W)-7
b(e)32 b(here)f(again)f(aim)h(at)g(using)g(an)g(information)g
(theoretic)g(criterion.)f(Let)523 747 y Fn(W)601 759
y Fm(t)664 747 y Fw(b)r(e)j(the)h(set)f(of)g(w)n(ords)e(that)i(ha)n(v)n
(e)f Fn(t)h Fw(as)g(a)f(POS.)h(Let)g Fn(\005)2490 717
y Fm(t)2552 747 y Fw(b)r(e)g(the)h(set)f(of)g(partitions)523
847 y(of)d Fn(W)710 817 y Fm(t)739 847 y Fw(.)g(W)-7
b(e)30 b(no)n(w)g(aim)f(at)h(\014nding)g(the)h(partition)e
Fn(\031)2203 817 y Fm(t)2259 847 y Fj(2)f Fn(\005)2418
817 y Fm(t)2477 847 y Fw(that)i(leads)f(to)h(the)g(greatest)523
946 y(reduction)37 b(of)h(the)f(uncertain)n(t)n(y)g(of)g(the)h
Fr(Chunk)2107 916 y Fp(2)2145 946 y Fw(.)f(Ob)n(viously)-7
b(,)36 b(ha)n(ving)h(an)g(exhaustiv)n(e)523 1046 y(searc)n(h)h(of)h
(the)h(set)f(of)g(partitions)g(is)g(not)g(computationally)f(p)r
(ossible.)h(Let)h(us)f(de\014ne)523 1146 y Fn(\031)573
1116 y Fm(t)570 1167 y(i)640 1146 y Fw(=)e Fj(ff)p Fn(w)885
1158 y Fm(i)912 1146 y Fj(g)p Fn(;)14 b Fj(f)p Fn(w)1092
1158 y Fp(1)1129 1146 y Fn(;)g(:::;)g(w)1331 1158 y Fm(i)p
Fi(\000)p Fp(1)1444 1146 y Fn(;)g(w)1540 1158 y Fm(i)p
Fp(+1)1652 1146 y Fn(;)g(:::;)g(w)1854 1158 y Fm(n)1899
1146 y Fj(gg)p Fw(.)36 b(W)-7 b(e)36 b(will)h(c)n(ho)r(ose)e(the)h
(partition)g Fn(\031)3187 1116 y Fm(t)3184 1167 y(i)3253
1146 y Fw(that)523 1245 y(leads)27 b(to)h(the)g(minimal)f(conditional)g
(en)n(trop)n(y)g(of)g(the)h Fr(Chunk)37 b Fw(giv)n(en)27
b(the)h(partition:)755 1431 y Fn(\031)805 1397 y Fm(t)802
1452 y(i)857 1431 y Fw(=)23 b(Argmin)1220 1451 y Fm(\031)1261
1431 y Fk(t)1259 1472 y(j)1322 1431 y Fn(H)7 b Fw(\()p
Fn(C)f Fj(j)p Fn(\031)1568 1397 y Fm(t)1565 1452 y(j)1600
1431 y Fw(\))24 b(=)e(Argmin)2018 1451 y Fm(\031)2059
1431 y Fk(t)2057 1472 y(j)2138 1431 y Fj(\000)2234 1352
y Fh(X)2221 1536 y Fm(s)p Fi(2)p Fm(\031)2338 1516 y
Fk(t)2336 1557 y(j)2397 1352 y Fh(X)2381 1530 y Fm(c)2411
1538 y Fk(i)2437 1530 y Fi(2)p Fm(C)2547 1431 y Fn(p)p
Fw(\()p Fn(c)2657 1443 y Fm(i)2685 1431 y Fn(;)14 b(s)p
Fw(\))g(log)27 b Fn(p)p Fw(\()p Fn(c)3051 1443 y Fm(i)3079
1431 y Fj(j)p Fn(s)p Fw(\))523 1714 y(W)-7 b(e)32 b(then)h(rep)r(eat)e
(the)h(pro)r(cedure)f(un)n(til)h(the)h(righ)n(t)e(n)n(um)n(b)r(er)g(of)
h(splits)g(is)g(reac)n(hed.)e(Fig-)523 1813 y(ure)36
b(4)g(sho)n(ws)g(the)h(relationship)e(b)r(et)n(w)n(een)i(the)g(n)n(um)n
(b)r(er)f(of)g(splits)h(and)f(the)h Fn(F)3112 1825 y
Fm(\014)s Fp(=1)3278 1813 y Fw(dev)523 1913 y(set)29
b(p)r(erformance.)e(The)h(optimal)h(n)n(um)n(b)r(er)f(of)g(splits)h(as)
f(measured)f(on)h(the)h(dev)g(set)f(\(see)523 2012 y(\014gure)c(4,)g
(seems)g(to)h(b)r(e)g(close)e(to)i(100)e(whic)n(h)i(means)f(that)h
(only)f(a)g(small)g(amoun)n(t)g(of)h(POS)523 2112 y(tag)k(need)g(to)g
(b)r(e)h(split)g(in)f(order)f(to)i(p)r(erform)e(w)n(ell.)i(This)f(is)g
(helpful)h(b)r(ecause)f(it)h(do)r(esn't)523 2212 y(c)n(hange)c
(signi\014can)n(tly)h(the)h(time)g(resp)r(onse)f(of)g(the)h(learning)f
(algorithm.)1355 2430 y Fu(Fig.)15 b(4.)25 b Fv(Num)n(b)r(er)f(of)i
(splits)h(vs)e Fe(F)11 b Fv(-score)1051 2521 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 1051 2521
a 1051 2521 a
 /PSfrag where{pop(nbsplit)[[0(Bl)1 0]](fb1)[[1(Bl)1 0]]2 0 -1/Begin
PSfrag}{userdict /PSfrag{pop}put}ifelse
 1051 2521 a @beginspecial 50 @llx 50 @lly
554 @urx 770 @ury 1512 @rwi @setspecial
%%BeginDocument: log_split_5.ps
%!PS-Adobe-2.0
%%Title: log_split_5.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Jan 31 14:39:41 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
(83.8) Rshow
714 915 M
63 0 V
6185 0 R
-63 0 V
630 915 M
(84) Rshow
714 1409 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(84.2) Rshow
714 1904 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(84.4) Rshow
714 2399 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(84.6) Rshow
714 2893 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(84.8) Rshow
714 3388 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(85) Rshow
714 3883 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(85.2) Rshow
714 4377 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(85.4) Rshow
714 4872 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(85.6) Rshow
714 420 M
0 63 V
0 4389 R
0 -63 V
714 280 M
(0) Cshow
1755 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(50) Cshow
2797 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100) Cshow
3838 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(150) Cshow
4879 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(200) Cshow
5921 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(250) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(300) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4452 V
-6248 0 V
714 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(fb1) Cshow
grestore
3838 70 M
(nbsplit) Cshow
1.000 UP
1.000 UL
LT0
1131 742 M
416 2473 V
417 618 V
416 -99 V
417 965 V
3213 2745 L
417 -247 V
416 618 V
417 99 V
416 198 V
5296 717 L
416 297 V
6129 519 L
1131 742 Pls
1547 3215 Pls
1964 3833 Pls
2380 3734 Pls
2797 4699 Pls
3213 2745 Pls
3630 2498 Pls
4046 3116 Pls
4463 3215 Pls
4879 3413 Pls
5296 717 Pls
5712 1014 Pls
6129 519 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 1051 2521 a
 /End PSfrag
 1051 2521 a 1051 2156 a
 /Hide PSfrag
 1051
2156 a 367 2208 a Fv(PSfrag)26 b(replacemen)n(ts)p 367
2236 685 4 v 1051 2239 a
 /Unhide PSfrag
 1051 2239 a 773 2357 a
  {
 773 2357
a 480 2403 a Fv(Num)n(b)r(er)d(of)k(splits)773 2357 y
  } 0/Place PSfrag

773 2357 a 884 2503 a
  {
 884 2503 a Fe(F)933 2512 y Fb(\014)s
Fo(=1)884 2503 y
  } 1/Place PSfrag
 884 2503 a 2311 2521 a
 currentpoint grestore moveto
 2311 2521 a 648
3932 a Fw(W)-7 b(e)29 b(also)e(exp)r(erimen)n(ted)i(with)g(a)f(more)g
(global)f(metho)r(d)i(of)g(optimisation)f(where)g(w)n(e)523
4032 y(searc)n(hed)38 b(for)i(an)f(optimal)h(partition)f(of)h(all)g
Fn(<)p Fw(w)n(ord,POS)p Fn(>)d Fw(pairs,)i(but)h(preliminary)523
4131 y(exp)r(erimen)n(ts)27 b(indicated)h(that)g(this)g(did)g(not)f(p)r
(erform)g(w)n(ell.)523 4390 y Fq(7)112 b(Results)37 b(on)g(the)h(test)f
(set)523 4582 y Fw(This)29 b(section)g(describ)r(es)g(the)g(results)g
(obtained)g(on)g(the)h(test)f(set.)g(The)h(task)e(baseline)h(is)523
4682 y(p)r(erformed)19 b(b)n(y)h(a)f(unigram)g(mo)r(del)g(or)g(equiv)-5
b(alen)n(tly)20 b(a)f(one)g(state)h(automaton.)e(It)i(pro)n(vides)p
523 4748 473 4 v 546 4801 a Fo(2)606 4833 y Fv(W)-6 b(e)25
b(actually)h(aim)f(at)g(creating)h(a)g(new)g(item)e Fe(<)p
Fv(w)n(ord,POS)p Fe(>)p Fv(.)i(Since)f(the)g(POS)f(is)i(\014xed)f
(here,)606 4924 y(w)n(e)h(just)g(need)f(to)h(partition)g(the)g(w)n(ord)
g(set.)p eop
%%Page: 11 11
11 10 bop 3328 232 a Fv(11)523 448 y Fw(an)21 b(o)n(v)n(erall)e
Fn(F)944 460 y Fm(\014)s Fp(=1)1095 448 y Fw(of)i(77.)f(Our)h(results)f
(are)h(summarized)f(in)i(table)f(1.)g(They)g(w)n(ere)f(obtained)523
548 y(on)29 b(the)h(test)g(set)g(after)f(an)g(inference)g(\(on)h(the)g
(whole)f(training)g(set\))h(using)f(the)h(v)-5 b(alue)29
b(of)523 648 y(the)f(parameter)e Fn(\013)i Fw(that)g(w)n(as)f(optimal)g
(on)g(the)h(v)-5 b(alidation)28 b(set.)648 750 y(The)33
b(\014rst)h(column)g(sho)n(ws)e(the)i Fr(Chunk)9 b Fw(;)34
b(the)g(remaining)f(columns)h(sho)n(w)f(the)h Fn(F)3276
762 y Fm(\014)s Fp(=1)523 850 y Fw(score)39 b(under)g(v)-5
b(arious)39 b(settings:)h(the)g(initial)g(Viterbi)g(tec)n(hnique)g
(without)h(lexical)e(in-)523 950 y(formation)30 b(\(\014rst)h(column)h
(with)f(lab)r(el)g(I\),)h(the)f(results)g(obtained)g(when)g(adding)g
(lexical)523 1049 y(information)26 b(b)n(y)h(splitting)g(the)g(POS)f
(tags)g(100)g(times,)h(\(column)g(L\),)g(the)g(bagging)e(tec)n(h-)523
1149 y(nique)32 b(without)h(lexical)e(information)h(\(column)g(B\),)g
(and)g(\014nally)g(the)h(results)e(obtained)523 1249
y(com)n(bining)g(the)i(bagging)d(and)i(the)g(lexical)f(information)g
(\(column)h(LB\).)g(The)g(last)g(t)n(w)n(o)523 1348 y(columns)21
b(giv)n(e)f(some)h(comparable)f(results)g(from)h(other)g(tec)n(hniqy)n
(es)g(applied)g(to)g(this)h(task,)523 1448 y Fr(i.e.)i
Fw(a)f(n-gram)e(mo)r(del)i(without)g(lexical)f(information)g([8])h(and)
f(a)g(lexicalized)g(mo)r(del)h(using)523 1547 y(Hidden)28
b(Mark)n(o)n(v)e(Mo)r(dels)h([15].)1079 1698 y Fu(T)-7
b(able)29 b(1.)c Fv(Comparison)h(of)h(results)f(on)g(the)f(test)h(set)g
Fe(F)2731 1707 y Fb(\014)s Fo(=1)p 1401 1811 1100 4 v
1399 1902 4 92 v 1413 1875 a Ft(Chunk)p 1647 1902 V 59
w Fv(I)p 1747 1902 V 61 w(L)p 1847 1902 V 49 w(B)p 1947
1902 V 35 w(LB)p 2072 1902 V 2089 1902 V 40 w(ngrm)p
2288 1902 V 23 w(LMM)p 2499 1902 V 1401 1905 1100 4 v
1401 1922 V 1399 2013 4 92 v 1413 1986 a(ADJP)p 1647
2013 V 39 w(48)p 1746 2013 V 24 w(49)p 1846 2013 V 24
w(58)p 1946 2013 V 37 w(63)p 2073 2013 V 2089 2013 V
103 w(55)p 2287 2013 V 129 w(70)p 2499 2013 V 1399 2105
V 1413 2077 a(AD)n(VP)p 1648 2105 V 22 w(63)p 1746 2105
V 24 w(69)p 1846 2105 V 24 w(69)p 1946 2105 V 37 w(74)p
2073 2105 V 2089 2105 V 103 w(70)p 2287 2105 V 129 w(77)p
2499 2105 V 1399 2196 V 1413 2169 a(INTJ)p 1647 2196
V 67 w(33)p 1746 2196 V 24 w(22)p 1846 2196 V 24 w(40)p
1946 2196 V 37 w(67)p 2073 2196 V 2089 2196 V 103 w(40)p
2287 2196 V 110 w(100)p 2499 2196 V 1399 2287 V 1413
2260 a(NP)p 1647 2287 V 137 w(85)p 1746 2287 V 24 w(86)p
1846 2287 V 24 w(89)p 1946 2287 V 37 w(89)p 2073 2287
V 2089 2287 V 103 w(89)p 2287 2287 V 129 w(90)p 2499
2287 V 1399 2379 V 1413 2351 a(PP)p 1647 2379 V 143 w(87)p
1746 2379 V 24 w(95)p 1846 2379 V 24 w(90)p 1946 2379
V 37 w(95)p 2073 2379 V 2089 2379 V 103 w(92)p 2287 2379
V 129 w(96)p 2499 2379 V 1399 2470 V 1413 2443 a(PR)-6
b(T)p 1647 2470 V 108 w(9)p 1747 2470 V 43 w(55)p 1846
2470 V 24 w(20)p 1946 2470 V 37 w(67)p 2073 2470 V 2089
2470 V 103 w(32)p 2287 2470 V 129 w(67)p 2499 2470 V
1399 2561 V 1413 2534 a(SBAR)p 1647 2561 V 35 w(15)p
1746 2561 V 24 w(77)p 1846 2561 V 24 w(16)p 1946 2561
V 37 w(81)p 2073 2561 V 2089 2561 V 103 w(41)p 2287 2561
V 129 w(79)p 2499 2561 V 1399 2653 V 1413 2625 a(VP)p
1647 2653 V 137 w(86)p 1746 2653 V 24 w(86)p 1846 2653
V 24 w(89)p 1946 2653 V 37 w(88)p 2073 2653 V 2089 2653
V 103 w(90)p 2287 2653 V 129 w(92)p 2499 2653 V 1401
2656 1100 4 v 1399 2747 4 92 v 1413 2720 a(ALL)p 1647
2747 V 93 w(83)p 1746 2747 V 24 w(86)p 1846 2747 V 24
w(87)p 1946 2747 V 37 w(89)p 2073 2747 V 2089 2747 V
103 w(87)p 2287 2747 V 129 w(90)p 2499 2747 V 1401 2751
1100 4 v 648 3025 a Fw(The)28 b(n-gram)g(approac)n(h)e(\(ngrm)j
(column\))g(extends)f(the)h(baseline)f(algorithm)g(b)n(y)g(us-)523
3125 y(ing)38 b(a)h(con)n(text)f(sensitiv)n(e)g(approac)n(h)f(instead)h
(of)h(using)f(a)g(unigram.)g(A)h(giv)n(en)f Fr(Chunk)523
3224 y Fw(is)f(c)n(hosen)f(with)h(resp)r(ect)g(to)g(its)g(POS)f(tag)h
(con)n(text.)f(The)h(con)n(text)g(w)n(as)f(de\014ned)h(as)f(a)523
3324 y(cen)n(tered)h(windo)n(w)g(around)g(the)h(curren)n(t)f(POS)f
(tag.)i(In)f(the)h(results)f(outlined)h(here)f(a)523
3423 y(windo)n(w)25 b(of)h(5)f(POS)g(tags)g(w)n(as)f(tak)n(en.)h(The)h
(author)f(men)n(tioned)h(that)g(the)g(results)f(do)g(not)523
3523 y(impro)n(v)n(e)h(signi\014can)n(tly)h(while)h(using)f(a)h(bigger)
e(windo)n(w)h(size.)h(The)g(di\013erences)f(b)r(et)n(w)n(een)523
3623 y(our)22 b(approac)n(h)g(and)h(the)g(n-gram)f(one)h(are)f(that)h
(\(i\))h(it)g(do)r(es)e(not)h(generalize)f(the)i(data)e(and)523
3722 y(\(ii\))33 b(giv)n(en)e(the)h(smo)r(othing)g(strategy)e(applied,)
i(the)h(metho)r(d)f(do)r(es)g(not)g(pro)n(vide)f(a)g(true)523
3822 y(probabilit)n(y)-7 b(.)648 3925 y(With)32 b(regard)d(to)i(\(i\),)
h(it)g(seems)e(that,)i(ev)n(en)f(if)g(w)n(e)g(generalize,)f(w)n(e)h
(get)g(roughly)f(the)523 4024 y(same)g(results.)g(Ho)n(w)n(ev)n(er,)e
(it)j(is)f(imp)r(ortan)n(t)g(to)g(note)h(that)f(the)h(generalization)d
(pro)n(vides)523 4124 y(rather)h(small)h(automata)g(\(roughly)f(200)g
(states)h(and)g(8,000)e(transitions\),)i(that)h(are)e(sig-)523
4224 y(ni\014can)n(tly)23 b(smaller)g(than)g(the)h(n-gram)e(mo)r(dels.)
h(The)g(item)h(\(ii\))g(is)g(not)f(v)n(ery)f(serious)g(since)523
4323 y(the)h(results)g(do)f(not)h(rely)g(on)f(the)h(fact)h(that)f(the)g
(mo)r(del)g(de\014ne)g(a)g(true)g(probabilit)n(y)e(distri-)523
4423 y(bution.)32 b(Nev)n(ertheless,)e(w)n(e)i(note)f(that)h(ha)n(ving)
e(a)h(consisten)n(t)g(probabilit)n(y)g(distribution)523
4523 y(allo)n(ws)26 b(us)i(to)f(com)n(bine)g(our)g(mo)r(del)h(with)g
(other)f(probabilistic)g(approac)n(hes)e(cleanly)-7 b(.)648
4725 y(The)36 b(Lexicalized)f(Mark)n(o)n(v)e(Mo)r(del)j(\(LMM)g(in)h
(table)e(1\))h(tak)n(es)f(the)h(470)f(most)g(fre-)523
4825 y(quen)n(t)i(w)n(ords)f(of)h(the)h(training)f(data)f(\(excluding)h
(the)h(punctuation,)g(sym)n(b)r(ols,prop)r(er)523 4924
y(nouns)24 b(and)g(n)n(um)n(b)r(ers\))f(and)h(split)h(their)f(resp)r
(ectiv)n(e)f(POS)g(tag)h([15].)f(They)h(got)f(an)h(o)n(v)n(erall)p
eop
%%Page: 12 12
12 11 bop 523 232 a Fv(12)523 448 y Fw(impro)n(v)n(emen)n(t)28
b(of)h(4\045)g(of)g(the)h Fn(F)1553 460 y Fm(\014)s Fp(=1)1682
448 y Fw(.)f(The)g(main)g(di\013erence)g(with)h(our)e(approac)n(h)g
(comes)523 548 y(from)37 b(our)g(automatic)h(detection)g(of)f(the)h
(POS)f(tags)g(to)h(split.)g(Our)f(metho)r(d)h(has)g(the)523
648 y(adv)-5 b(an)n(tage)28 b(of)h(splitting)g(few)n(er)g(POS)f(tags)g
(\(100)g(comparing)g(to)h(470\).)f(Moreo)n(v)n(er,)e(since)523
747 y(iden)n(tifying)d(prop)r(er)f(nouns)h(in)g(large)e(corp)r(ora)g
(is)i(a)f(researc)n(h)f(area)g(in)i(itself,)g(ha)n(ving)f(a)h(au-)523
847 y(tomatic)28 b(pro)r(cedure)f(is)h(preferable.)g(Finally)-7
b(,)28 b(the)h(compactness)e(of)h(our)f(mo)r(del)i(remains)523
946 y(a)35 b(strong)e(p)r(oin)n(t)j(in)f(fa)n(v)n(our)e(of)i(our)g
(metho)r(d.)g(T)-7 b(o)35 b(b)r(e)g(complete,)g(w)n(e)g(need)g(to)g
(men)n(tion)523 1046 y(that)i(the)g(b)r(est)g(results)f(rep)r(orted)g
(came)g(with)i(a)e(supp)r(ort)g(v)n(ector)g(mac)n(hine)g(approac)n(h)
523 1146 y([12])27 b(whic)n(h)g(p)r(erform)g(an)h(o)n(v)n(erall)d
Fn(F)1665 1158 y Fm(\014)s Fp(=1)1822 1146 y Fw(of)j(93.)523
1397 y Fq(8)112 b(Conclusion)37 b(and)h(further)f(w)m(ork)523
1581 y Fw(W)-7 b(e)37 b(ha)n(v)n(e)f(presen)n(ted)g(an)h(algorithm)f
(for)g(shallo)n(w)g(parsing)f(based)i(on)f(a)h(grammatical)523
1681 y(inference)d(algorithm;)f(\014rst)h(w)n(e)g(build)g(an)g
(automaton)f(to)h(mo)r(del)g(the)h(data)e(sequence,)523
1780 y(and)25 b(then)h(w)n(e)f(use)g(the)h(automaton)f(as)f(a)h
(transducer)f(to)i(reco)n(v)n(er)d(the)i(optimal)h(sequence)523
1880 y(of)h(lab)r(els.)g(Adv)-5 b(an)n(tages)26 b(of)h(using)g(the)h
(grammatical)d(inference)i(tec)n(hnique)g(are)f(that)i(the)523
1980 y(resulting)e(mo)r(dels)g(are)g(v)n(ery)f(compact)h(and)g
(e\016cien)n(t,)h(and)f(can)h(mo)r(del)f(dep)r(endencies)h(of)523
2079 y(un)n(b)r(ounded)32 b(length.)g(It)h(app)r(ears)d(from)i(our)f
(exp)r(erimen)n(ts,)h(that)g(the)g(smo)r(othing)f(tec)n(h-)523
2179 y(nique)f(is)g(less)f(imp)r(ortan)n(t)g(here)g(than)h(in)g(other)f
(domains)h(suc)n(h)f(as)g(language)f(mo)r(deling.)523
2279 y(In)e(addition,)f(w)n(e)g(note)h(that)g(it)g(app)r(ears)e(p)r
(ossible)h(to)h(get)f(substan)n(tial)g(impro)n(v)n(emen)n(ts)f(in)523
2378 y(the)j(p)r(erformance)e(b)n(y)h(using)h(v)n(ery)e(limited)i
(lexical)f(information)g({)g(in)h(our)e(exp)r(erimen)n(ts,)523
2478 y(it)34 b(w)n(as)f(only)g(necessary)f(to)h(mo)r(del)h(the)g
(e\013ect)g(of)f(100)f(w)n(ords.)h(It)h(seems)f(that)h(bagging)523
2577 y(can)26 b(b)r(e)h(successfully)f(applied)h(to)f(impro)n(v)n(e)f
(probabilit)n(y)h(densit)n(y)g(estimators.)g(F)-7 b(rom)26
b(our)523 2677 y(kno)n(wledge)33 b(this)i(is)f(the)g(\014rst)g
(application)g(of)g(the)h(bagging)e(tec)n(hnique)h(to)g(probabilit)n(y)
523 2777 y(densit)n(y)27 b(estimation.)648 2876 y(In)22
b(future)g(w)n(ork)f(w)n(e)h(will)g(con)n(tin)n(ue)g(our)f(in)n(v)n
(estigations)f(of)i(bagging,)f(particularly)g(ex-)523
2976 y(amining)26 b(the)h(use)f(of)g(more)f(bags,)h(and)g(the)h(size)f
(of)g(the)g(bags.)g(W)-7 b(e)26 b(will)h(also)e(exp)r(erimen)n(t)523
3076 y(with)f(some)g(other)f(tec)n(hniques)h(suc)n(h)f(as)h(b)r(o)r
(osting,)f(that)h(w)n(e)g(feel)g(could)g(b)r(e)g(useful.)h(There)523
3175 y(are)h(t)n(w)n(o)f(other)h(directions)g(w)n(e)g(will)h(also)f
(explore:)f(\014rst,)i(since)f(the)h(automaton)f(w)n(e)g(infer)523
3275 y(is)g(deterministic,)h(it)f(cannot)g(use)g(information)g(ab)r
(out)g(the)h(future)g(con)n(text,)f(though)g(the)523
3374 y(use)35 b(of)g(the)g(Viterbi)g(algorithm)f(do)r(es)g(comp)r
(ensate)h(a)f(bit.)h(W)-7 b(e)36 b(will)f(exp)r(erimen)n(t)f(with)523
3474 y(inferring)c(an)h(automaton)f(that)h(mo)r(dels)g(the)g(rev)n
(ersed)e(sequences)i(and)f(com)n(bining)h(the)523 3574
y(predictions)22 b(of)g(the)h(\\forw)n(ard")d(and)i(\\bac)n(kw)n(ard")e
(automata.)i(Secondly)-7 b(,)22 b(w)n(e)g(will)h(exp)r(er-)523
3673 y(imen)n(t)30 b(with)h(com)n(bining)e(our)g(mo)r(del)h(with)g
(other)f(statistical)h(mo)r(dels,)g Fr(e.g.)h Fw(to)e(com)n(bine)523
3773 y(the)23 b(probabilities)f(pro)n(vided)f(b)n(y)h(our)g(mo)r(del)h
(and)f(the)h(one)f(pro)n(vided)f(b)n(y)i(some)e(statistical)523
3873 y(POS)27 b(taggers)f([20,)13 b(2].)523 4124 y Fq(References)561
4296 y Fv(1.)43 b(S.)33 b(Ait-Mokh)n(tar)g(and)g(J.P)-6
b(.)35 b(Chano)r(d.)58 b(Incremen)n(tal)32 b(\014nite)i(state)g
(parsing.)58 b(In)33 b Ft(Pr)l(o)l(c.)i(of)663 4387 y(Applie)l(d)27
b(Natur)l(al)i(L)l(anguage)g(Pr)l(o)l(c)l(essing)p Fv(,)f(W)-6
b(ashington,)26 b(DC,)g(April)g(1997.)561 4475 y(2.)43
b(Thorsten)32 b(Bran)n(ts.)53 b(TnT)32 b({)g(a)g(statistical)i
(part-of-sp)r(eec)n(h)d(tagger.)54 b(In)31 b Ft(Pr)l(o)l(c.)i(of)g(the)
h(6th)663 4566 y(Confer)l(enc)l(e)29 b(on)e(Applie)l(d)h(Natur)l(al)h
(L)l(anguage)g(Pr)l(o)l(c)l(essing)p Fv(,)f(Seattle,)e(W)-9
b(A,)26 b(April)f(2000.)561 4654 y(3.)43 b(Leo)26 b(Breiman.)34
b(Bagging)28 b(predictors.)35 b Ft(Machine)28 b(L)l(e)l(arning)p
Fv(,)f(24\(2\):123{140,)j(1996.)561 4742 y(4.)43 b(Eric)29
b(Brill.)43 b(T)-6 b(ransformation-based)29 b(error-driv)n(en)f
(learning)h(and)f(natural)h(language)g(pro-)663 4833
y(cessing:)45 b(A)e(case)i(study)d(in)i(part)f(of)i(sp)r(eec)n(h)e
(tagging.)90 b Ft(Computational)45 b(Linguistics)p Fv(,)663
4924 y(21\(4\):543{565,)30 b(1995.)p eop
%%Page: 13 13
13 12 bop 3328 232 a Fv(13)561 448 y(5.)43 b(R.)32 b(Carrasco)j(and)d
(J.)h(Oncina.)54 b(Learning)33 b(sto)r(c)n(hastic)h(regular)g(grammars)
e(b)n(y)f(means)h(of)663 540 y(a)j(state)h(merging)f(metho)r(d.)61
b(In)34 b Ft(Se)l(c)l(ond)k(Intl.)d(Col)t(lo.)g(on)h(Gr)l(ammatic)l(al)
h(Infer)l(enc)l(e)g(and)663 631 y(Applic)l(ations)p Fv(,)26
b(pages)h(139{152,)i(1994.)561 717 y(6.)43 b(Josh)n(ua)38
b(Go)r(o)r(dman.)72 b(A)37 b(bit)h(of)h(progress)g(in)f(language)h(mo)r
(deling.)72 b(T)-6 b(ec)n(hnical)38 b(rep)r(ort,)663
808 y(Microsoft)28 b(Reserac)n(h,)e(2001.)561 894 y(7.)43
b(C.)34 b(John)g(Hederson)f(and)h(Eric)g(Brill.)59 b(Bagging)36
b(and)d(b)r(o)r(osting)i(a)f(treebank)f(parser.)59 b(In)663
986 y Ft(NAA)n(CL)p Fv(,)26 b(pages)g(34{41,)i(Seattle,)e(W)-6
b(ashington,)27 b(USA,)d(2000.)561 1072 y(8.)43 b(Christer)18
b(Johansson.)23 b(A)18 b(con)n(text)f(sensitiv)n(e)h(maxim)n(um)d(lik)n
(eliho)r(o)r(d)k(approac)n(h)f(to)g(c)n(h)n(unking.)663
1163 y(In)25 b Ft(CoNLLL-2000)k(and)f(LLL-2000)p Fv(,)f(pages)g
(136{138,)i(Lisb)r(on,)d(P)n(ortugal,)h(2000.)561 1249
y(9.)43 b(Daniel)31 b(Jurafsky)f(and)g(James)h(H.)f(Martin.)49
b Ft(Sp)l(e)l(e)l(ch)34 b(and)e(L)l(anguage)h(Pr)l(o)l(c)l(essing:)h(A)
n(n)e(In-)663 1340 y(tr)l(o)l(duction)26 b(to)f(Natur)l(al)g(L)l
(anguage)h(Pr)l(o)l(c)l(essing,)g(Computational)f(Linguistics,)g(and)f
(Sp)l(e)l(e)l(ch)663 1432 y(R)l(e)l(c)l(o)l(gnition)p
Fv(.)35 b(Pren)n(tice)26 b(Hall,)h(Englew)n(o)r(o)r(d)g(Cli\013s,)h
(New)d(Jersey)-6 b(,)27 b(2000.)523 1518 y(10.)43 b(S.)28
b(M.)h(Katz.)42 b(Estimation)28 b(of)i(probabilities)f(from)f(sparse)h
(data)g(for)g(the)f(language)h(mo)r(del)663 1609 y(comp)r(onen)n(t)j
(of)i(a)f(sp)r(eec)n(h)g(recognizer.)59 b Ft(IEEE)34
b(T)-6 b(r)l(ansactions)36 b(on)f(A)l(c)l(oustic,)g(Sp)l(e)l(e)l(ch)h
(and)663 1700 y(Signal)27 b(Pr)l(o)l(c)l(essing)p Fv(,)h(v)n(ol.)e
(35\(n)n(um)e(3\):400{401,)30 b(1987.)523 1786 y(11.)43
b(M.J.)37 b(Kearns,)f(Y.)g(Mansour,)h(D.)e(Ron,)h(R.)g(Rubinfeld,)f
(R.E.)h(Sc)n(hapire,)g(and)g(L.)g(Sellie.)663 1878 y(On)c(the)g
(learnabilit)n(y)h(of)h(discrete)f(distributions.)55
b(In)32 b Ft(Pr)l(o)l(c.)j(of)e(the)i(25th)g(A)n(nnual)f(A)n(CM)663
1969 y(Symp)l(osium)27 b(on)h(The)l(ory)h(of)e(Computing)p
Fv(,)g(pages)f(273{282,)j(1994.)523 2055 y(12.)43 b(T)-6
b(aku)20 b(Kudoh)g(and)h(Y)-6 b(uji)21 b(Matsumoto.)27
b(Use)21 b(of)h(supp)r(ort)e(v)n(ector)h(learning)h(for)g(c)n(h)n(unk)d
(iden)n(ti-)663 2146 y(\014cation.)35 b(In)24 b Ft(CoNLLL-2000)30
b(and)e(LLL-2000)p Fv(,)f(pages)g(142{144,)h(Lisb)r(on,)f(P)n(ortugal,)
g(2000.)523 2232 y(13.)43 b(K.)32 b(J.)g(Lang,)h(B.)f(A.)g(P)n(earlm)n
(utter,)g(and)f(R.)h(A.)f(Price.)54 b(Results)32 b(of)h(the)e
(Abbadingo)h(one)663 2324 y(DF)-9 b(A)24 b(learning)i(comp)r(etition)f
(and)f(a)h(new)h(evidence-driv)n(en)d(state)i(merging)g(algorithm.)34
b(In)663 2415 y Ft(Pr)l(o)l(c.)i(4th)g(Intl.)f(Col)t(l.)f(on)i(Gr)l
(ammatic)l(al)g(Infer)l(enc)l(e)g(-)g(ICGI)f('98)p Fv(,)g(v)n(olume)e
(1433,)j(pages)663 2506 y(1{12.)27 b(Springer-V)-6 b(erlag,)26
b(1998.)36 b(citeseer.nj.nec.com/lang98results.h)n(tml.)523
2592 y(14.)43 b(M.)21 b(Marcus,)i(S.)e(San)n(torini,)g(and)g(M.)h
(Marcinkiewicz.)29 b(Building)22 b(a)f(large)i(annotated)e(corpus)663
2684 y(of)26 b(english:)h(the)e(p)r(enn)g(treebank.)34
b Ft(Computational)28 b(Linguistics)p Fv(,)f(19\(2\):313{330,)j(1993.)
523 2770 y(15.)43 b(F.)33 b(Pla,)i(A.)e(Molina,)i(and)f(N.)f(Prieto.)58
b(An)33 b(In)n(tegrated)g(Statistical)i(Mo)r(del)f(for)g(T)-6
b(agging)663 2861 y(and)30 b(Ch)n(unking)g(Unrestricted)g(T)-6
b(ext.)49 b(In)30 b(P)n(etr)g(So)t(jk)l(a,)i(Iv)l(an)d(Kop)r(e)n(\024)
-36 b(cek,)31 b(and)f(Karel)h(P)n(ala,)663 2952 y(editors,)k
Ft(Pr)l(o)l(c.)h(of)f(the)h(Thir)l(d)g(Intl.)f(Workshop)i(on)e(T)-6
b(ext,)36 b(Sp)l(e)l(e)l(ch)h(and)f(Dialo)l(gue|TSD)663
3044 y(2000)p Fv(,)20 b(Lecture)f(Notes)g(in)f(Arti\014cial)i(In)n
(telligence)g(LNCS/LNAI)d(1902,)k(pages)f(15{20,)h(Brno,)663
3135 y(Czec)n(h)26 b(Republic,)f(Septem)n(b)r(er)f(2000.)k(Springer-V)
-6 b(erlag.)523 3221 y(16.)43 b(D.)26 b(Ron,)h(Y.)g(Singer,)g(and)g(N.)
g(Tish)n(b)n(y)-6 b(.)37 b(Learning)27 b(probabilistic)h(automata)f
(with)g(v)l(ariable)663 3312 y(memory)17 b(length.)24
b(In)19 b Ft(Seventh)24 b(Conf.)d(on)h(Computational)h(L)l(e)l(arning)f
(The)l(ory)p Fv(,)f(pages)g(35{46,)663 3404 y(New)k(Brunswic)n(k,)i
(12{15)g(July)f(1994.)h(A)n(CM)f(Press.)523 3490 y(17.)43
b(D.)d(Ron,)h(Y.)f(Singer,)h(and)g(N.)f(Tish)n(b)n(y)-6
b(.)78 b(On)40 b(the)g(learnabilit)n(y)i(and)e(usage)i(of)f(acyclic)663
3581 y(probabilistic)30 b(\014nite)e(automata.)43 b(In)28
b Ft(A)n(CM)p Fv(,)h(pages)g(31{40,)i(San)n(ta)e(Cruz)g(CA)f(USA,)g
(1995.)663 3672 y(COL)-6 b(T'95.)523 3758 y(18.)43 b(Erik)28
b(Tjong)i(Kim)d(Sang.)43 b(Noun)28 b(phrase)g(recognition)i(b)n(y)d
(system)h(com)n(bination.)42 b(In)28 b Ft(Pr)l(o-)663
3850 y(c)l(e)l(e)l(dings)f(of)f(BNAIC'00)p Fv(,)e(pages)g(335{336.)j
(Tilburg,)f(The)e(Netherlands,)g(2000.)33 b(\(extended)663
3941 y(abstract)26 b(of)g(ANLP-NAA)n(CL)e(2000)j(pap)r(er\).)523
4027 y(19.)43 b(Erik)22 b(Tjong)h(Kim)e(Sang)g(and)h(Sabine)g(Buc)n
(hholz.)28 b(In)n(tro)r(duction)21 b(to)h(the)g(conlll-2000)i(shared)
663 4118 y(task:)j(Ch)n(unking.)36 b(In)26 b Ft(CoNLLL-2000)31
b(and)d(LLL-2000,)p Fv(,)h(pages)e(127{132,)j(Lisb)r(on,)d(P)n(ortu-)
663 4210 y(gal,)g(2000.)36 b Fc(http://lcg-www.uia.ac.be/lcg/)p
Fv(.)523 4296 y(20.)43 b(H.)22 b(Sc)n(h)r(\177)-41 b(utze)22
b(and)g(Y.)g(Singer.)29 b(P)n(art-of-sp)r(eec)n(h)23
b(tagging)g(using)g(a)f(v)l(ariable)h(memory)d(mark)n(o)n(v)663
4387 y(mo)r(del.)57 b(In)32 b Ft(Me)l(eting)k(of)e(the)i(Asso)l(c.)f
(for)g(Computational)g(Linguistics)p Fv(,)g(pages)f(181{187,)663
4478 y(1994.)523 4564 y(21.)43 b(A.)26 b(Stolc)n(k)n(e.)38
b Ft(Bayesian)29 b(L)l(e)l(arning)h(of)e(Pr)l(ob)l(abilistic)h(L)l
(anguage)h(Mo)l(dels)p Fv(.)39 b(Ph.)27 b(D.)f(disserta-)663
4656 y(tion,)g(Univ)n(ersit)n(y)f(of)h(California,)j(1994.)523
4742 y(22.)43 b(F.)29 b(Thollard.)45 b(Impro)n(ving)28
b(probabilistic)i(grammatical)f(inference)h(core)f(algorithms)h(with)
663 4833 y(p)r(ost-pro)r(cessing)22 b(tec)n(hniques.)27
b(In)20 b Ft(Eighth)25 b(Intl.)d(Conf.)h(on)h(Machine)g(L)l(e)l(arning)
p Fv(,)e(pages)g(561{)663 4924 y(568,)27 b(Williams,)g(July)e(2001.)j
(Morgan)f(Kau\013man.)p eop
%%Page: 14 14
14 13 bop 523 232 a Fv(14)523 448 y(23.)43 b(C.)24 b(J.)h(v)l(an)f
(Rijsb)r(ergen.)32 b Ft(Information)26 b(R)l(etrieval)p
Fv(.)33 b(Butterw)n(orths,)25 b(London,)f(United)f(King-)663
540 y(dom,)i(1975.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
